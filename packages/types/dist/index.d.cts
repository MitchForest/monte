import { z } from 'zod';

declare const ADMIN_STATEMENTS: {
    user: readonly ["create", "list", "set-role", "ban", "impersonate", "delete", "set-password"];
    session: readonly ["list", "revoke", "delete"];
};
declare const ADMIN_ROLE_PERMISSIONS: {
    readonly internal: {
        readonly user: readonly ["create", "list", "set-role", "ban", "impersonate", "delete", "set-password"];
        readonly session: readonly ["list", "revoke", "delete"];
    };
    readonly admin: {
        readonly user: readonly ["list", "set-role", "impersonate"];
        readonly session: readonly ["list", "revoke"];
    };
    readonly guide: {
        readonly user: readonly [];
        readonly session: readonly [];
    };
    readonly guardian: {
        readonly user: readonly [];
        readonly session: readonly [];
    };
    readonly student: {
        readonly user: readonly [];
        readonly session: readonly [];
    };
};
declare const ORGANIZATION_STATEMENTS: {
    organization: readonly ["update", "billing", "set-plan", "set-join-code", "delete"];
    member: readonly ["create", "update", "delete"];
    invitation: readonly ["create", "cancel"];
};
declare const ORGANIZATION_ROLE_PERMISSIONS: {
    readonly owner: {
        readonly organization: readonly ["update", "billing", "set-plan", "set-join-code", "delete"];
        readonly member: readonly ["create", "update", "delete"];
        readonly invitation: readonly ["create", "cancel"];
    };
    readonly admin: {
        readonly organization: readonly ["update", "set-plan", "set-join-code"];
        readonly member: readonly ["create", "update", "delete"];
        readonly invitation: readonly ["create", "cancel"];
    };
    readonly member: {
        readonly organization: readonly [];
        readonly member: readonly [];
        readonly invitation: readonly [];
    };
    readonly guide: {
        readonly organization: readonly [];
        readonly member: readonly [];
        readonly invitation: readonly [];
    };
    readonly guardian: {
        readonly organization: readonly [];
        readonly member: readonly [];
        readonly invitation: readonly [];
    };
    readonly student: {
        readonly organization: readonly [];
        readonly member: readonly [];
        readonly invitation: readonly [];
    };
};

declare const access_ADMIN_ROLE_PERMISSIONS: typeof ADMIN_ROLE_PERMISSIONS;
declare const access_ADMIN_STATEMENTS: typeof ADMIN_STATEMENTS;
declare const access_ORGANIZATION_ROLE_PERMISSIONS: typeof ORGANIZATION_ROLE_PERMISSIONS;
declare const access_ORGANIZATION_STATEMENTS: typeof ORGANIZATION_STATEMENTS;
declare namespace access {
  export { access_ADMIN_ROLE_PERMISSIONS as ADMIN_ROLE_PERMISSIONS, access_ADMIN_STATEMENTS as ADMIN_STATEMENTS, access_ORGANIZATION_ROLE_PERMISSIONS as ORGANIZATION_ROLE_PERMISSIONS, access_ORGANIZATION_STATEMENTS as ORGANIZATION_STATEMENTS };
}

type Id<TableName extends string = string> = string & {
    __tableName: TableName;
};
declare const IdSchema: <TableName extends string = string>() => z.ZodType<Id<TableName>>;
declare const UserRoleSchema: z.ZodEnum<["internal", "admin", "guide", "guardian", "student"]>;
type UserRole = z.infer<typeof UserRoleSchema>;
declare const OrganizationPlanKeySchema: z.ZodEnum<["solo_monthly", "solo_annual", "family_monthly", "family_annual", "org_monthly", "org_annual", "org_highvolume_monthly", "org_highvolume_annual"]>;
type OrganizationPlanKey = z.infer<typeof OrganizationPlanKeySchema>;
declare const BillingCycleSchema: z.ZodEnum<["monthly", "annual"]>;
type BillingCycle = z.infer<typeof BillingCycleSchema>;
declare const BillingAccountStatusSchema: z.ZodEnum<["trial", "active", "past_due", "paused", "canceled"]>;
type BillingAccountStatus = z.infer<typeof BillingAccountStatusSchema>;
declare const OrganizationLifecycleStatusSchema: z.ZodEnum<["active", "inactive", "archived"]>;
type OrganizationLifecycleStatus = z.infer<typeof OrganizationLifecycleStatusSchema>;
declare const OrganizationSchema: z.ZodObject<{
    name: z.ZodString;
    slug: z.ZodString;
    joinCode: z.ZodString;
    planKey: z.ZodEnum<["solo_monthly", "solo_annual", "family_monthly", "family_annual", "org_monthly", "org_annual", "org_highvolume_monthly", "org_highvolume_annual"]>;
    billingCycle: z.ZodEnum<["monthly", "annual"]>;
    lifecycleStatus: z.ZodEnum<["active", "inactive", "archived"]>;
    primaryAdminId: z.ZodString;
    seatLimit: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    seatsInUse: z.ZodOptional<z.ZodNumber>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    name: string;
    slug: string;
    joinCode: string;
    planKey: "solo_monthly" | "solo_annual" | "family_monthly" | "family_annual" | "org_monthly" | "org_annual" | "org_highvolume_monthly" | "org_highvolume_annual";
    billingCycle: "monthly" | "annual";
    lifecycleStatus: "active" | "inactive" | "archived";
    primaryAdminId: string;
    createdAt: number;
    updatedAt: number;
    seatLimit?: number | null | undefined;
    seatsInUse?: number | undefined;
    metadata?: Record<string, unknown> | undefined;
}, {
    name: string;
    slug: string;
    joinCode: string;
    planKey: "solo_monthly" | "solo_annual" | "family_monthly" | "family_annual" | "org_monthly" | "org_annual" | "org_highvolume_monthly" | "org_highvolume_annual";
    billingCycle: "monthly" | "annual";
    lifecycleStatus: "active" | "inactive" | "archived";
    primaryAdminId: string;
    createdAt: number;
    updatedAt: number;
    seatLimit?: number | null | undefined;
    seatsInUse?: number | undefined;
    metadata?: Record<string, unknown> | undefined;
}>;
type Organization = z.infer<typeof OrganizationSchema>;
declare const OrgMembershipStatusSchema: z.ZodEnum<["pending", "active", "invited", "suspended", "revoked"]>;
type OrgMembershipStatus = z.infer<typeof OrgMembershipStatusSchema>;
declare const OrgMembershipSchema: z.ZodObject<{
    userId: z.ZodString;
    orgId: z.ZodString;
    role: z.ZodEnum<["internal", "admin", "guide", "guardian", "student"]>;
    status: z.ZodEnum<["pending", "active", "invited", "suspended", "revoked"]>;
    invitedByUserId: z.ZodOptional<z.ZodString>;
    inviteId: z.ZodOptional<z.ZodString>;
    relationships: z.ZodOptional<z.ZodObject<{
        guardianForStudentIds: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
        guideForStudentIds: z.ZodOptional<z.ZodOptional<z.ZodArray<z.ZodString, "many">>>;
        notes: z.ZodOptional<z.ZodOptional<z.ZodString>>;
    }, "strip", z.ZodTypeAny, {
        guardianForStudentIds?: string[] | undefined;
        guideForStudentIds?: string[] | undefined;
        notes?: string | undefined;
    }, {
        guardianForStudentIds?: string[] | undefined;
        guideForStudentIds?: string[] | undefined;
        notes?: string | undefined;
    }>>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    status: "active" | "pending" | "invited" | "suspended" | "revoked";
    createdAt: number;
    updatedAt: number;
    userId: string;
    orgId: string;
    role: "internal" | "admin" | "guide" | "guardian" | "student";
    invitedByUserId?: string | undefined;
    inviteId?: string | undefined;
    relationships?: {
        guardianForStudentIds?: string[] | undefined;
        guideForStudentIds?: string[] | undefined;
        notes?: string | undefined;
    } | undefined;
}, {
    status: "active" | "pending" | "invited" | "suspended" | "revoked";
    createdAt: number;
    updatedAt: number;
    userId: string;
    orgId: string;
    role: "internal" | "admin" | "guide" | "guardian" | "student";
    invitedByUserId?: string | undefined;
    inviteId?: string | undefined;
    relationships?: {
        guardianForStudentIds?: string[] | undefined;
        guideForStudentIds?: string[] | undefined;
        notes?: string | undefined;
    } | undefined;
}>;
type OrgMembership = z.infer<typeof OrgMembershipSchema>;
declare const OrgInviteStatusSchema: z.ZodEnum<["pending", "accepted", "expired", "revoked"]>;
type OrgInviteStatus = z.infer<typeof OrgInviteStatusSchema>;
declare const OrgInviteSchema: z.ZodObject<{
    orgId: z.ZodString;
    email: z.ZodString;
    role: z.ZodEnum<["admin", "guide", "guardian", "student"]>;
    token: z.ZodString;
    status: z.ZodEnum<["pending", "accepted", "expired", "revoked"]>;
    createdByUserId: z.ZodString;
    expiresAt: z.ZodNumber;
    createdAt: z.ZodNumber;
    acceptedAt: z.ZodOptional<z.ZodNumber>;
    redeemedByUserId: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    status: "pending" | "revoked" | "accepted" | "expired";
    createdAt: number;
    orgId: string;
    role: "admin" | "guide" | "guardian" | "student";
    email: string;
    token: string;
    createdByUserId: string;
    expiresAt: number;
    acceptedAt?: number | undefined;
    redeemedByUserId?: string | undefined;
}, {
    status: "pending" | "revoked" | "accepted" | "expired";
    createdAt: number;
    orgId: string;
    role: "admin" | "guide" | "guardian" | "student";
    email: string;
    token: string;
    createdByUserId: string;
    expiresAt: number;
    acceptedAt?: number | undefined;
    redeemedByUserId?: string | undefined;
}>;
type OrgInvite = z.infer<typeof OrgInviteSchema>;
declare const BillingAccountSchema: z.ZodObject<{
    orgId: z.ZodString;
    planKey: z.ZodEnum<["solo_monthly", "solo_annual", "family_monthly", "family_annual", "org_monthly", "org_annual", "org_highvolume_monthly", "org_highvolume_annual"]>;
    billingCycle: z.ZodEnum<["monthly", "annual"]>;
    seatsIncluded: z.ZodNumber;
    seatsInUse: z.ZodNumber;
    basePriceCents: z.ZodNumber;
    pricePerSeatCents: z.ZodNumber;
    overageSeatPriceCents: z.ZodOptional<z.ZodNumber>;
    externalCustomerId: z.ZodOptional<z.ZodString>;
    externalSubscriptionId: z.ZodOptional<z.ZodString>;
    trialEndsAt: z.ZodOptional<z.ZodNumber>;
    status: z.ZodEnum<["trial", "active", "past_due", "paused", "canceled"]>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    status: "trial" | "active" | "past_due" | "paused" | "canceled";
    planKey: "solo_monthly" | "solo_annual" | "family_monthly" | "family_annual" | "org_monthly" | "org_annual" | "org_highvolume_monthly" | "org_highvolume_annual";
    billingCycle: "monthly" | "annual";
    seatsInUse: number;
    createdAt: number;
    updatedAt: number;
    orgId: string;
    seatsIncluded: number;
    basePriceCents: number;
    pricePerSeatCents: number;
    overageSeatPriceCents?: number | undefined;
    externalCustomerId?: string | undefined;
    externalSubscriptionId?: string | undefined;
    trialEndsAt?: number | undefined;
}, {
    status: "trial" | "active" | "past_due" | "paused" | "canceled";
    planKey: "solo_monthly" | "solo_annual" | "family_monthly" | "family_annual" | "org_monthly" | "org_annual" | "org_highvolume_monthly" | "org_highvolume_annual";
    billingCycle: "monthly" | "annual";
    seatsInUse: number;
    createdAt: number;
    updatedAt: number;
    orgId: string;
    seatsIncluded: number;
    basePriceCents: number;
    pricePerSeatCents: number;
    overageSeatPriceCents?: number | undefined;
    externalCustomerId?: string | undefined;
    externalSubscriptionId?: string | undefined;
    trialEndsAt?: number | undefined;
}>;
type BillingAccount = z.infer<typeof BillingAccountSchema>;
declare const UserProfileSchema: z.ZodObject<{
    userId: z.ZodString;
    accountRole: z.ZodEnum<["internal", "admin", "guide", "guardian", "student"]>;
    displayName: z.ZodOptional<z.ZodString>;
    activeOrgId: z.ZodOptional<z.ZodString>;
    impersonationState: z.ZodOptional<z.ZodObject<{
        active: z.ZodBoolean;
        actorUserId: z.ZodString;
        startedAt: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        active: boolean;
        actorUserId: string;
        startedAt: number;
    }, {
        active: boolean;
        actorUserId: string;
        startedAt: number;
    }>>;
    preferences: z.ZodOptional<z.ZodObject<{
        theme: z.ZodOptional<z.ZodString>;
        defaultView: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        theme?: string | undefined;
        defaultView?: string | undefined;
    }, {
        theme?: string | undefined;
        defaultView?: string | undefined;
    }>>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, "strip", z.ZodTypeAny, {
    createdAt: number;
    updatedAt: number;
    userId: string;
    accountRole: "internal" | "admin" | "guide" | "guardian" | "student";
    displayName?: string | undefined;
    activeOrgId?: string | undefined;
    impersonationState?: {
        active: boolean;
        actorUserId: string;
        startedAt: number;
    } | undefined;
    preferences?: {
        theme?: string | undefined;
        defaultView?: string | undefined;
    } | undefined;
}, {
    createdAt: number;
    updatedAt: number;
    userId: string;
    accountRole: "internal" | "admin" | "guide" | "guardian" | "student";
    displayName?: string | undefined;
    activeOrgId?: string | undefined;
    impersonationState?: {
        active: boolean;
        actorUserId: string;
        startedAt: number;
    } | undefined;
    preferences?: {
        theme?: string | undefined;
        defaultView?: string | undefined;
    } | undefined;
}>;
type UserProfile = z.infer<typeof UserProfileSchema>;
declare const SegmentTypeSchema: z.ZodEnum<["presentation", "guided", "practice"]>;
type SegmentType = z.infer<typeof SegmentTypeSchema>;
declare const DifficultySchema: z.ZodEnum<["easy", "medium", "hard"]>;
type Difficulty = z.infer<typeof DifficultySchema>;
declare const AuthoringMetaSchema: z.ZodObject<{
    label: z.ZodOptional<z.ZodString>;
    description: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    metadata?: Record<string, unknown> | undefined;
    notes?: string | undefined;
    label?: string | undefined;
    description?: string | undefined;
    tags?: string[] | undefined;
}, {
    metadata?: Record<string, unknown> | undefined;
    notes?: string | undefined;
    label?: string | undefined;
    description?: string | undefined;
    tags?: string[] | undefined;
}>;
type AuthoringMeta = z.infer<typeof AuthoringMetaSchema>;
declare const LessonScenarioKindSchema: z.ZodEnum<["golden-beads", "stamp-game"]>;
type LessonScenarioKind = z.infer<typeof LessonScenarioKindSchema>;
declare const LessonScenarioBindingSchema: z.ZodObject<{
    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
    seed: z.ZodNumber;
    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    notes: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    kind: "golden-beads" | "stamp-game";
    seed: number;
    notes?: string | undefined;
    snapshot?: Record<string, unknown> | undefined;
}, {
    kind: "golden-beads" | "stamp-game";
    seed: number;
    notes?: string | undefined;
    snapshot?: Record<string, unknown> | undefined;
}>;
type LessonScenarioBinding = z.infer<typeof LessonScenarioBindingSchema>;
declare const EntityMetadataSchema: z.ZodObject<{
    source: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
}, "strip", z.ZodUnknown, z.objectOutputType<{
    source: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
}, z.ZodUnknown, "strip">, z.objectInputType<{
    source: z.ZodOptional<z.ZodString>;
    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    notes: z.ZodOptional<z.ZodString>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
}, z.ZodUnknown, "strip">>;
type EntityMetadata = z.infer<typeof EntityMetadataSchema>;
declare const MaterialSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    tags: z.ZodArray<z.ZodString, "many">;
    primaryUse: z.ZodLiteral<"multiplication">;
    interaction: z.ZodEnum<["manipulate", "static"]>;
    media: z.ZodOptional<z.ZodObject<{
        thumbnail: z.ZodOptional<z.ZodString>;
        icon: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        thumbnail?: string | undefined;
        icon?: string | undefined;
    }, {
        thumbnail?: string | undefined;
        icon?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    name: string;
    description: string;
    tags: string[];
    id: string;
    primaryUse: "multiplication";
    interaction: "manipulate" | "static";
    media?: {
        thumbnail?: string | undefined;
        icon?: string | undefined;
    } | undefined;
}, {
    name: string;
    description: string;
    tags: string[];
    id: string;
    primaryUse: "multiplication";
    interaction: "manipulate" | "static";
    media?: {
        thumbnail?: string | undefined;
        icon?: string | undefined;
    } | undefined;
}>;
type Material = z.infer<typeof MaterialSchema>;
declare const RepresentationSchema: z.ZodEnum<["concrete", "abstract"]>;
type Representation = z.infer<typeof RepresentationSchema>;
declare const MaterialUsageSchema: z.ZodObject<{
    materialId: z.ZodString;
    purpose: z.ZodString;
    optional: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    materialId: string;
    purpose: string;
    optional?: boolean | undefined;
}, {
    materialId: string;
    purpose: string;
    optional?: boolean | undefined;
}>;
type MaterialUsage = z.infer<typeof MaterialUsageSchema>;
declare const WorkspaceKindSchema: z.ZodEnum<["golden-beads", "stamp-game"]>;
type WorkspaceKind = z.infer<typeof WorkspaceKindSchema>;
declare const BankQuantityMapSchema: z.ZodRecord<z.ZodString, z.ZodNumber>;
type BankQuantityMap = z.infer<typeof BankQuantityMapSchema>;
declare const CanvasAnchorSchema: z.ZodObject<{
    position: z.ZodObject<{
        x: z.ZodNumber;
        y: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        x: number;
        y: number;
    }, {
        x: number;
        y: number;
    }>;
    width: z.ZodOptional<z.ZodNumber>;
    height: z.ZodOptional<z.ZodNumber>;
    align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
}, "strict", z.ZodTypeAny, {
    position: {
        x: number;
        y: number;
    };
    width?: number | undefined;
    height?: number | undefined;
    align?: "start" | "center" | "end" | undefined;
}, {
    position: {
        x: number;
        y: number;
    };
    width?: number | undefined;
    height?: number | undefined;
    align?: "start" | "center" | "end" | undefined;
}>;
type CanvasAnchor = z.infer<typeof CanvasAnchorSchema>;
declare const ExchangeRuleSchema: z.ZodObject<{
    triggerTokenType: z.ZodString;
    produces: z.ZodArray<z.ZodObject<{
        tokenType: z.ZodString;
        quantity: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        tokenType: string;
        quantity: number;
    }, {
        tokenType: string;
        quantity: number;
    }>, "many">;
    consumes: z.ZodArray<z.ZodObject<{
        tokenType: z.ZodString;
        quantity: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        tokenType: string;
        quantity: number;
    }, {
        tokenType: string;
        quantity: number;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    triggerTokenType: string;
    produces: {
        tokenType: string;
        quantity: number;
    }[];
    consumes: {
        tokenType: string;
        quantity: number;
    }[];
}, {
    triggerTokenType: string;
    produces: {
        tokenType: string;
        quantity: number;
    }[];
    consumes: {
        tokenType: string;
        quantity: number;
    }[];
}>;
type ExchangeRule = z.infer<typeof ExchangeRuleSchema>;
declare const ReplenishRuleSchema: z.ZodObject<{
    whenBankId: z.ZodString;
    method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
    customHandlerId: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    whenBankId: string;
    method: "custom" | "reset-on-exit" | "reset-on-undo";
    customHandlerId?: string | undefined;
}, {
    whenBankId: string;
    method: "custom" | "reset-on-exit" | "reset-on-undo";
    customHandlerId?: string | undefined;
}>;
type ReplenishRule = z.infer<typeof ReplenishRuleSchema>;
declare const ConsumptionRuleSchema: z.ZodObject<{
    bankId: z.ZodString;
    allowNegative: z.ZodOptional<z.ZodBoolean>;
    blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
}, "strict", z.ZodTypeAny, {
    bankId: string;
    allowNegative?: boolean | undefined;
    blockWhenEmpty?: boolean | undefined;
}, {
    bankId: string;
    allowNegative?: boolean | undefined;
    blockWhenEmpty?: boolean | undefined;
}>;
type ConsumptionRule = z.infer<typeof ConsumptionRuleSchema>;
declare const InventoryRuleSetSchema: z.ZodObject<{
    onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
        triggerTokenType: z.ZodString;
        produces: z.ZodArray<z.ZodObject<{
            tokenType: z.ZodString;
            quantity: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            tokenType: string;
            quantity: number;
        }, {
            tokenType: string;
            quantity: number;
        }>, "many">;
        consumes: z.ZodArray<z.ZodObject<{
            tokenType: z.ZodString;
            quantity: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            tokenType: string;
            quantity: number;
        }, {
            tokenType: string;
            quantity: number;
        }>, "many">;
    }, "strict", z.ZodTypeAny, {
        triggerTokenType: string;
        produces: {
            tokenType: string;
            quantity: number;
        }[];
        consumes: {
            tokenType: string;
            quantity: number;
        }[];
    }, {
        triggerTokenType: string;
        produces: {
            tokenType: string;
            quantity: number;
        }[];
        consumes: {
            tokenType: string;
            quantity: number;
        }[];
    }>, "many">>;
    onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
        whenBankId: z.ZodString;
        method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
        customHandlerId: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        whenBankId: string;
        method: "custom" | "reset-on-exit" | "reset-on-undo";
        customHandlerId?: string | undefined;
    }, {
        whenBankId: string;
        method: "custom" | "reset-on-exit" | "reset-on-undo";
        customHandlerId?: string | undefined;
    }>, "many">>;
    onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
        bankId: z.ZodString;
        allowNegative: z.ZodOptional<z.ZodBoolean>;
        blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        bankId: string;
        allowNegative?: boolean | undefined;
        blockWhenEmpty?: boolean | undefined;
    }, {
        bankId: string;
        allowNegative?: boolean | undefined;
        blockWhenEmpty?: boolean | undefined;
    }>, "many">>;
}, "strict", z.ZodTypeAny, {
    onExchange?: {
        triggerTokenType: string;
        produces: {
            tokenType: string;
            quantity: number;
        }[];
        consumes: {
            tokenType: string;
            quantity: number;
        }[];
    }[] | undefined;
    onReplenish?: {
        whenBankId: string;
        method: "custom" | "reset-on-exit" | "reset-on-undo";
        customHandlerId?: string | undefined;
    }[] | undefined;
    onConsumption?: {
        bankId: string;
        allowNegative?: boolean | undefined;
        blockWhenEmpty?: boolean | undefined;
    }[] | undefined;
}, {
    onExchange?: {
        triggerTokenType: string;
        produces: {
            tokenType: string;
            quantity: number;
        }[];
        consumes: {
            tokenType: string;
            quantity: number;
        }[];
    }[] | undefined;
    onReplenish?: {
        whenBankId: string;
        method: "custom" | "reset-on-exit" | "reset-on-undo";
        customHandlerId?: string | undefined;
    }[] | undefined;
    onConsumption?: {
        bankId: string;
        allowNegative?: boolean | undefined;
        blockWhenEmpty?: boolean | undefined;
    }[] | undefined;
}>;
type InventoryRuleSet = z.infer<typeof InventoryRuleSetSchema>;
declare const TokenVisualDefinitionSchema: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
    kind: z.ZodLiteral<"bead">;
    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
}, "strip", z.ZodTypeAny, {
    kind: "bead";
    place: "unit" | "ten" | "hundred" | "thousand";
}, {
    kind: "bead";
    place: "unit" | "ten" | "hundred" | "thousand";
}>, z.ZodObject<{
    kind: z.ZodLiteral<"card">;
    value: z.ZodNumber;
    size: z.ZodEnum<["sm", "md", "lg"]>;
}, "strip", z.ZodTypeAny, {
    value: number;
    kind: "card";
    size: "sm" | "md" | "lg";
}, {
    value: number;
    kind: "card";
    size: "sm" | "md" | "lg";
}>, z.ZodObject<{
    kind: z.ZodLiteral<"stamp">;
    value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
}, "strip", z.ZodTypeAny, {
    value: 1 | 10 | 100;
    kind: "stamp";
}, {
    value: 1 | 10 | 100;
    kind: "stamp";
}>, z.ZodObject<{
    kind: z.ZodLiteral<"custom">;
    componentId: z.ZodString;
    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strip", z.ZodTypeAny, {
    kind: "custom";
    componentId: string;
    props?: Record<string, unknown> | undefined;
}, {
    kind: "custom";
    componentId: string;
    props?: Record<string, unknown> | undefined;
}>]>;
type TokenVisualDefinition = z.infer<typeof TokenVisualDefinitionSchema>;
declare const TokenTypeDefinitionSchema: z.ZodObject<{
    id: z.ZodString;
    materialId: z.ZodString;
    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
    label: z.ZodString;
    visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
        kind: z.ZodLiteral<"bead">;
        place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
    }, "strip", z.ZodTypeAny, {
        kind: "bead";
        place: "unit" | "ten" | "hundred" | "thousand";
    }, {
        kind: "bead";
        place: "unit" | "ten" | "hundred" | "thousand";
    }>, z.ZodObject<{
        kind: z.ZodLiteral<"card">;
        value: z.ZodNumber;
        size: z.ZodEnum<["sm", "md", "lg"]>;
    }, "strip", z.ZodTypeAny, {
        value: number;
        kind: "card";
        size: "sm" | "md" | "lg";
    }, {
        value: number;
        kind: "card";
        size: "sm" | "md" | "lg";
    }>, z.ZodObject<{
        kind: z.ZodLiteral<"stamp">;
        value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
    }, "strip", z.ZodTypeAny, {
        value: 1 | 10 | 100;
        kind: "stamp";
    }, {
        value: 1 | 10 | 100;
        kind: "stamp";
    }>, z.ZodObject<{
        kind: z.ZodLiteral<"custom">;
        componentId: z.ZodString;
        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strip", z.ZodTypeAny, {
        kind: "custom";
        componentId: string;
        props?: Record<string, unknown> | undefined;
    }, {
        kind: "custom";
        componentId: string;
        props?: Record<string, unknown> | undefined;
    }>]>;
    quantityPerToken: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    label: string;
    id: string;
    materialId: string;
    workspace: "golden-beads" | "stamp-game";
    visual: {
        kind: "bead";
        place: "unit" | "ten" | "hundred" | "thousand";
    } | {
        value: number;
        kind: "card";
        size: "sm" | "md" | "lg";
    } | {
        value: 1 | 10 | 100;
        kind: "stamp";
    } | {
        kind: "custom";
        componentId: string;
        props?: Record<string, unknown> | undefined;
    };
    quantityPerToken?: number | undefined;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
}, {
    label: string;
    id: string;
    materialId: string;
    workspace: "golden-beads" | "stamp-game";
    visual: {
        kind: "bead";
        place: "unit" | "ten" | "hundred" | "thousand";
    } | {
        value: number;
        kind: "card";
        size: "sm" | "md" | "lg";
    } | {
        value: 1 | 10 | 100;
        kind: "stamp";
    } | {
        kind: "custom";
        componentId: string;
        props?: Record<string, unknown> | undefined;
    };
    quantityPerToken?: number | undefined;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
}>;
type TokenTypeDefinition = z.infer<typeof TokenTypeDefinitionSchema>;
declare const MaterialBankDefinitionSchema: z.ZodObject<{
    id: z.ZodString;
    label: z.ZodString;
    scope: z.ZodEnum<["lesson", "segment"]>;
    segmentId: z.ZodOptional<z.ZodString>;
    materialId: z.ZodString;
    accepts: z.ZodArray<z.ZodString, "many">;
    initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
    depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
    layout: z.ZodOptional<z.ZodObject<{
        position: z.ZodObject<{
            x: z.ZodNumber;
            y: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            x: number;
            y: number;
        }, {
            x: number;
            y: number;
        }>;
        width: z.ZodOptional<z.ZodNumber>;
        height: z.ZodOptional<z.ZodNumber>;
        align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
    }, "strict", z.ZodTypeAny, {
        position: {
            x: number;
            y: number;
        };
        width?: number | undefined;
        height?: number | undefined;
        align?: "start" | "center" | "end" | undefined;
    }, {
        position: {
            x: number;
            y: number;
        };
        width?: number | undefined;
        height?: number | undefined;
        align?: "start" | "center" | "end" | undefined;
    }>>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    label: string;
    id: string;
    materialId: string;
    scope: "lesson" | "segment";
    accepts: string[];
    initialQuantity: number | Record<string, number>;
    metadata?: Record<string, unknown> | undefined;
    segmentId?: string | undefined;
    depletion?: "static" | "consume" | "replenish" | undefined;
    layout?: {
        position: {
            x: number;
            y: number;
        };
        width?: number | undefined;
        height?: number | undefined;
        align?: "start" | "center" | "end" | undefined;
    } | undefined;
}, {
    label: string;
    id: string;
    materialId: string;
    scope: "lesson" | "segment";
    accepts: string[];
    initialQuantity: number | Record<string, number>;
    metadata?: Record<string, unknown> | undefined;
    segmentId?: string | undefined;
    depletion?: "static" | "consume" | "replenish" | undefined;
    layout?: {
        position: {
            x: number;
            y: number;
        };
        width?: number | undefined;
        height?: number | undefined;
        align?: "start" | "center" | "end" | undefined;
    } | undefined;
}>;
type MaterialBankDefinition = z.infer<typeof MaterialBankDefinitionSchema>;
declare const LessonMaterialInventorySchema: z.ZodObject<{
    version: z.ZodLiteral<1>;
    tokenTypes: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        materialId: z.ZodString;
        workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
        label: z.ZodString;
        visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
            kind: z.ZodLiteral<"bead">;
            place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
        }, "strip", z.ZodTypeAny, {
            kind: "bead";
            place: "unit" | "ten" | "hundred" | "thousand";
        }, {
            kind: "bead";
            place: "unit" | "ten" | "hundred" | "thousand";
        }>, z.ZodObject<{
            kind: z.ZodLiteral<"card">;
            value: z.ZodNumber;
            size: z.ZodEnum<["sm", "md", "lg"]>;
        }, "strip", z.ZodTypeAny, {
            value: number;
            kind: "card";
            size: "sm" | "md" | "lg";
        }, {
            value: number;
            kind: "card";
            size: "sm" | "md" | "lg";
        }>, z.ZodObject<{
            kind: z.ZodLiteral<"stamp">;
            value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
        }, "strip", z.ZodTypeAny, {
            value: 1 | 10 | 100;
            kind: "stamp";
        }, {
            value: 1 | 10 | 100;
            kind: "stamp";
        }>, z.ZodObject<{
            kind: z.ZodLiteral<"custom">;
            componentId: z.ZodString;
            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strip", z.ZodTypeAny, {
            kind: "custom";
            componentId: string;
            props?: Record<string, unknown> | undefined;
        }, {
            kind: "custom";
            componentId: string;
            props?: Record<string, unknown> | undefined;
        }>]>;
        quantityPerToken: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        label: string;
        id: string;
        materialId: string;
        workspace: "golden-beads" | "stamp-game";
        visual: {
            kind: "bead";
            place: "unit" | "ten" | "hundred" | "thousand";
        } | {
            value: number;
            kind: "card";
            size: "sm" | "md" | "lg";
        } | {
            value: 1 | 10 | 100;
            kind: "stamp";
        } | {
            kind: "custom";
            componentId: string;
            props?: Record<string, unknown> | undefined;
        };
        quantityPerToken?: number | undefined;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }, {
        label: string;
        id: string;
        materialId: string;
        workspace: "golden-beads" | "stamp-game";
        visual: {
            kind: "bead";
            place: "unit" | "ten" | "hundred" | "thousand";
        } | {
            value: number;
            kind: "card";
            size: "sm" | "md" | "lg";
        } | {
            value: 1 | 10 | 100;
            kind: "stamp";
        } | {
            kind: "custom";
            componentId: string;
            props?: Record<string, unknown> | undefined;
        };
        quantityPerToken?: number | undefined;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }>, "many">;
    banks: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        label: z.ZodString;
        scope: z.ZodEnum<["lesson", "segment"]>;
        segmentId: z.ZodOptional<z.ZodString>;
        materialId: z.ZodString;
        accepts: z.ZodArray<z.ZodString, "many">;
        initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
        depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
        layout: z.ZodOptional<z.ZodObject<{
            position: z.ZodObject<{
                x: z.ZodNumber;
                y: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                x: number;
                y: number;
            }, {
                x: number;
                y: number;
            }>;
            width: z.ZodOptional<z.ZodNumber>;
            height: z.ZodOptional<z.ZodNumber>;
            align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
        }, "strict", z.ZodTypeAny, {
            position: {
                x: number;
                y: number;
            };
            width?: number | undefined;
            height?: number | undefined;
            align?: "start" | "center" | "end" | undefined;
        }, {
            position: {
                x: number;
                y: number;
            };
            width?: number | undefined;
            height?: number | undefined;
            align?: "start" | "center" | "end" | undefined;
        }>>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        label: string;
        id: string;
        materialId: string;
        scope: "lesson" | "segment";
        accepts: string[];
        initialQuantity: number | Record<string, number>;
        metadata?: Record<string, unknown> | undefined;
        segmentId?: string | undefined;
        depletion?: "static" | "consume" | "replenish" | undefined;
        layout?: {
            position: {
                x: number;
                y: number;
            };
            width?: number | undefined;
            height?: number | undefined;
            align?: "start" | "center" | "end" | undefined;
        } | undefined;
    }, {
        label: string;
        id: string;
        materialId: string;
        scope: "lesson" | "segment";
        accepts: string[];
        initialQuantity: number | Record<string, number>;
        metadata?: Record<string, unknown> | undefined;
        segmentId?: string | undefined;
        depletion?: "static" | "consume" | "replenish" | undefined;
        layout?: {
            position: {
                x: number;
                y: number;
            };
            width?: number | undefined;
            height?: number | undefined;
            align?: "start" | "center" | "end" | undefined;
        } | undefined;
    }>, "many">;
    defaultRules: z.ZodOptional<z.ZodObject<{
        onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
            triggerTokenType: z.ZodString;
            produces: z.ZodArray<z.ZodObject<{
                tokenType: z.ZodString;
                quantity: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                tokenType: string;
                quantity: number;
            }, {
                tokenType: string;
                quantity: number;
            }>, "many">;
            consumes: z.ZodArray<z.ZodObject<{
                tokenType: z.ZodString;
                quantity: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                tokenType: string;
                quantity: number;
            }, {
                tokenType: string;
                quantity: number;
            }>, "many">;
        }, "strict", z.ZodTypeAny, {
            triggerTokenType: string;
            produces: {
                tokenType: string;
                quantity: number;
            }[];
            consumes: {
                tokenType: string;
                quantity: number;
            }[];
        }, {
            triggerTokenType: string;
            produces: {
                tokenType: string;
                quantity: number;
            }[];
            consumes: {
                tokenType: string;
                quantity: number;
            }[];
        }>, "many">>;
        onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
            whenBankId: z.ZodString;
            method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
            customHandlerId: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            whenBankId: string;
            method: "custom" | "reset-on-exit" | "reset-on-undo";
            customHandlerId?: string | undefined;
        }, {
            whenBankId: string;
            method: "custom" | "reset-on-exit" | "reset-on-undo";
            customHandlerId?: string | undefined;
        }>, "many">>;
        onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
            bankId: z.ZodString;
            allowNegative: z.ZodOptional<z.ZodBoolean>;
            blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            bankId: string;
            allowNegative?: boolean | undefined;
            blockWhenEmpty?: boolean | undefined;
        }, {
            bankId: string;
            allowNegative?: boolean | undefined;
            blockWhenEmpty?: boolean | undefined;
        }>, "many">>;
    }, "strict", z.ZodTypeAny, {
        onExchange?: {
            triggerTokenType: string;
            produces: {
                tokenType: string;
                quantity: number;
            }[];
            consumes: {
                tokenType: string;
                quantity: number;
            }[];
        }[] | undefined;
        onReplenish?: {
            whenBankId: string;
            method: "custom" | "reset-on-exit" | "reset-on-undo";
            customHandlerId?: string | undefined;
        }[] | undefined;
        onConsumption?: {
            bankId: string;
            allowNegative?: boolean | undefined;
            blockWhenEmpty?: boolean | undefined;
        }[] | undefined;
    }, {
        onExchange?: {
            triggerTokenType: string;
            produces: {
                tokenType: string;
                quantity: number;
            }[];
            consumes: {
                tokenType: string;
                quantity: number;
            }[];
        }[] | undefined;
        onReplenish?: {
            whenBankId: string;
            method: "custom" | "reset-on-exit" | "reset-on-undo";
            customHandlerId?: string | undefined;
        }[] | undefined;
        onConsumption?: {
            bankId: string;
            allowNegative?: boolean | undefined;
            blockWhenEmpty?: boolean | undefined;
        }[] | undefined;
    }>>;
    sceneNodes: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        materialId: z.ZodString;
        label: z.ZodOptional<z.ZodString>;
        transform: z.ZodOptional<z.ZodObject<{
            position: z.ZodObject<{
                x: z.ZodNumber;
                y: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                x: number;
                y: number;
            }, {
                x: number;
                y: number;
            }>;
            rotation: z.ZodOptional<z.ZodNumber>;
            scale: z.ZodOptional<z.ZodObject<{
                x: z.ZodNumber;
                y: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                x: number;
                y: number;
            }, {
                x: number;
                y: number;
            }>>;
            opacity: z.ZodOptional<z.ZodNumber>;
        }, "strip", z.ZodTypeAny, {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        }, {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        }>>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        materialId: string;
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
        transform?: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        } | undefined;
    }, {
        id: string;
        materialId: string;
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
        transform?: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        } | undefined;
    }>, "many">>;
}, "strict", z.ZodTypeAny, {
    version: 1;
    tokenTypes: {
        label: string;
        id: string;
        materialId: string;
        workspace: "golden-beads" | "stamp-game";
        visual: {
            kind: "bead";
            place: "unit" | "ten" | "hundred" | "thousand";
        } | {
            value: number;
            kind: "card";
            size: "sm" | "md" | "lg";
        } | {
            value: 1 | 10 | 100;
            kind: "stamp";
        } | {
            kind: "custom";
            componentId: string;
            props?: Record<string, unknown> | undefined;
        };
        quantityPerToken?: number | undefined;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }[];
    banks: {
        label: string;
        id: string;
        materialId: string;
        scope: "lesson" | "segment";
        accepts: string[];
        initialQuantity: number | Record<string, number>;
        metadata?: Record<string, unknown> | undefined;
        segmentId?: string | undefined;
        depletion?: "static" | "consume" | "replenish" | undefined;
        layout?: {
            position: {
                x: number;
                y: number;
            };
            width?: number | undefined;
            height?: number | undefined;
            align?: "start" | "center" | "end" | undefined;
        } | undefined;
    }[];
    defaultRules?: {
        onExchange?: {
            triggerTokenType: string;
            produces: {
                tokenType: string;
                quantity: number;
            }[];
            consumes: {
                tokenType: string;
                quantity: number;
            }[];
        }[] | undefined;
        onReplenish?: {
            whenBankId: string;
            method: "custom" | "reset-on-exit" | "reset-on-undo";
            customHandlerId?: string | undefined;
        }[] | undefined;
        onConsumption?: {
            bankId: string;
            allowNegative?: boolean | undefined;
            blockWhenEmpty?: boolean | undefined;
        }[] | undefined;
    } | undefined;
    sceneNodes?: {
        id: string;
        materialId: string;
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
        transform?: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        } | undefined;
    }[] | undefined;
}, {
    version: 1;
    tokenTypes: {
        label: string;
        id: string;
        materialId: string;
        workspace: "golden-beads" | "stamp-game";
        visual: {
            kind: "bead";
            place: "unit" | "ten" | "hundred" | "thousand";
        } | {
            value: number;
            kind: "card";
            size: "sm" | "md" | "lg";
        } | {
            value: 1 | 10 | 100;
            kind: "stamp";
        } | {
            kind: "custom";
            componentId: string;
            props?: Record<string, unknown> | undefined;
        };
        quantityPerToken?: number | undefined;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }[];
    banks: {
        label: string;
        id: string;
        materialId: string;
        scope: "lesson" | "segment";
        accepts: string[];
        initialQuantity: number | Record<string, number>;
        metadata?: Record<string, unknown> | undefined;
        segmentId?: string | undefined;
        depletion?: "static" | "consume" | "replenish" | undefined;
        layout?: {
            position: {
                x: number;
                y: number;
            };
            width?: number | undefined;
            height?: number | undefined;
            align?: "start" | "center" | "end" | undefined;
        } | undefined;
    }[];
    defaultRules?: {
        onExchange?: {
            triggerTokenType: string;
            produces: {
                tokenType: string;
                quantity: number;
            }[];
            consumes: {
                tokenType: string;
                quantity: number;
            }[];
        }[] | undefined;
        onReplenish?: {
            whenBankId: string;
            method: "custom" | "reset-on-exit" | "reset-on-undo";
            customHandlerId?: string | undefined;
        }[] | undefined;
        onConsumption?: {
            bankId: string;
            allowNegative?: boolean | undefined;
            blockWhenEmpty?: boolean | undefined;
        }[] | undefined;
    } | undefined;
    sceneNodes?: {
        id: string;
        materialId: string;
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
        transform?: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        } | undefined;
    }[] | undefined;
}>;
type LessonMaterialInventory = z.infer<typeof LessonMaterialInventorySchema>;
declare const TimelineTransformSchema: z.ZodObject<{
    position: z.ZodObject<{
        x: z.ZodNumber;
        y: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        x: number;
        y: number;
    }, {
        x: number;
        y: number;
    }>;
    rotation: z.ZodOptional<z.ZodNumber>;
    scale: z.ZodOptional<z.ZodObject<{
        x: z.ZodNumber;
        y: z.ZodNumber;
    }, "strip", z.ZodTypeAny, {
        x: number;
        y: number;
    }, {
        x: number;
        y: number;
    }>>;
    opacity: z.ZodOptional<z.ZodNumber>;
}, "strict", z.ZodTypeAny, {
    position: {
        x: number;
        y: number;
    };
    rotation?: number | undefined;
    scale?: {
        x: number;
        y: number;
    } | undefined;
    opacity?: number | undefined;
}, {
    position: {
        x: number;
        y: number;
    };
    rotation?: number | undefined;
    scale?: {
        x: number;
        y: number;
    } | undefined;
    opacity?: number | undefined;
}>;
type TimelineTransform = z.infer<typeof TimelineTransformSchema>;
declare const TimelineKeyframeSchema: z.ZodObject<{
    timeMs: z.ZodNumber;
    transform: z.ZodObject<{
        position: z.ZodObject<{
            x: z.ZodNumber;
            y: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            x: number;
            y: number;
        }, {
            x: number;
            y: number;
        }>;
        rotation: z.ZodOptional<z.ZodNumber>;
        scale: z.ZodOptional<z.ZodObject<{
            x: z.ZodNumber;
            y: z.ZodNumber;
        }, "strip", z.ZodTypeAny, {
            x: number;
            y: number;
        }, {
            x: number;
            y: number;
        }>>;
        opacity: z.ZodOptional<z.ZodNumber>;
    }, "strict", z.ZodTypeAny, {
        position: {
            x: number;
            y: number;
        };
        rotation?: number | undefined;
        scale?: {
            x: number;
            y: number;
        } | undefined;
        opacity?: number | undefined;
    }, {
        position: {
            x: number;
            y: number;
        };
        rotation?: number | undefined;
        scale?: {
            x: number;
            y: number;
        } | undefined;
        opacity?: number | undefined;
    }>;
    easing: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    transform: {
        position: {
            x: number;
            y: number;
        };
        rotation?: number | undefined;
        scale?: {
            x: number;
            y: number;
        } | undefined;
        opacity?: number | undefined;
    };
    timeMs: number;
    metadata?: Record<string, unknown> | undefined;
    easing?: string | undefined;
}, {
    transform: {
        position: {
            x: number;
            y: number;
        };
        rotation?: number | undefined;
        scale?: {
            x: number;
            y: number;
        } | undefined;
        opacity?: number | undefined;
    };
    timeMs: number;
    metadata?: Record<string, unknown> | undefined;
    easing?: string | undefined;
}>;
type TimelineKeyframe = z.infer<typeof TimelineKeyframeSchema>;
declare const TimelineTrackSchema: z.ZodObject<{
    nodeId: z.ZodString;
    keyframes: z.ZodArray<z.ZodObject<{
        timeMs: z.ZodNumber;
        transform: z.ZodObject<{
            position: z.ZodObject<{
                x: z.ZodNumber;
                y: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                x: number;
                y: number;
            }, {
                x: number;
                y: number;
            }>;
            rotation: z.ZodOptional<z.ZodNumber>;
            scale: z.ZodOptional<z.ZodObject<{
                x: z.ZodNumber;
                y: z.ZodNumber;
            }, "strip", z.ZodTypeAny, {
                x: number;
                y: number;
            }, {
                x: number;
                y: number;
            }>>;
            opacity: z.ZodOptional<z.ZodNumber>;
        }, "strict", z.ZodTypeAny, {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        }, {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        }>;
        easing: z.ZodOptional<z.ZodString>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        transform: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        };
        timeMs: number;
        metadata?: Record<string, unknown> | undefined;
        easing?: string | undefined;
    }, {
        transform: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        };
        timeMs: number;
        metadata?: Record<string, unknown> | undefined;
        easing?: string | undefined;
    }>, "many">;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    nodeId: string;
    keyframes: {
        transform: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        };
        timeMs: number;
        metadata?: Record<string, unknown> | undefined;
        easing?: string | undefined;
    }[];
    metadata?: Record<string, unknown> | undefined;
}, {
    nodeId: string;
    keyframes: {
        transform: {
            position: {
                x: number;
                y: number;
            };
            rotation?: number | undefined;
            scale?: {
                x: number;
                y: number;
            } | undefined;
            opacity?: number | undefined;
        };
        timeMs: number;
        metadata?: Record<string, unknown> | undefined;
        easing?: string | undefined;
    }[];
    metadata?: Record<string, unknown> | undefined;
}>;
type TimelineTrack = z.infer<typeof TimelineTrackSchema>;
declare const TimelineInteractionSchema: z.ZodObject<{
    id: z.ZodString;
    kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
    targetNodeId: z.ZodOptional<z.ZodString>;
    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    kind: "custom" | "drop-zone" | "input";
    id: string;
    props?: Record<string, unknown> | undefined;
    targetNodeId?: string | undefined;
}, {
    kind: "custom" | "drop-zone" | "input";
    id: string;
    props?: Record<string, unknown> | undefined;
    targetNodeId?: string | undefined;
}>;
type TimelineInteraction = z.infer<typeof TimelineInteractionSchema>;
declare const SegmentStepSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodOptional<z.ZodString>;
    caption: z.ZodOptional<z.ZodString>;
    actor: z.ZodEnum<["guide", "student"]>;
    durationMs: z.ZodNumber;
    keyframes: z.ZodArray<z.ZodObject<{
        nodeId: z.ZodString;
        keyframes: z.ZodArray<z.ZodObject<{
            timeMs: z.ZodNumber;
            transform: z.ZodObject<{
                position: z.ZodObject<{
                    x: z.ZodNumber;
                    y: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    x: number;
                    y: number;
                }, {
                    x: number;
                    y: number;
                }>;
                rotation: z.ZodOptional<z.ZodNumber>;
                scale: z.ZodOptional<z.ZodObject<{
                    x: z.ZodNumber;
                    y: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    x: number;
                    y: number;
                }, {
                    x: number;
                    y: number;
                }>>;
                opacity: z.ZodOptional<z.ZodNumber>;
            }, "strict", z.ZodTypeAny, {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            }, {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            }>;
            easing: z.ZodOptional<z.ZodString>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            transform: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            };
            timeMs: number;
            metadata?: Record<string, unknown> | undefined;
            easing?: string | undefined;
        }, {
            transform: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            };
            timeMs: number;
            metadata?: Record<string, unknown> | undefined;
            easing?: string | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        nodeId: string;
        keyframes: {
            transform: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            };
            timeMs: number;
            metadata?: Record<string, unknown> | undefined;
            easing?: string | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
    }, {
        nodeId: string;
        keyframes: {
            transform: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            };
            timeMs: number;
            metadata?: Record<string, unknown> | undefined;
            easing?: string | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
    }>, "many">;
    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
        targetNodeId: z.ZodOptional<z.ZodString>;
        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        kind: "custom" | "drop-zone" | "input";
        id: string;
        props?: Record<string, unknown> | undefined;
        targetNodeId?: string | undefined;
    }, {
        kind: "custom" | "drop-zone" | "input";
        id: string;
        props?: Record<string, unknown> | undefined;
        targetNodeId?: string | undefined;
    }>, "many">>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    keyframes: {
        nodeId: string;
        keyframes: {
            transform: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            };
            timeMs: number;
            metadata?: Record<string, unknown> | undefined;
            easing?: string | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
    }[];
    actor: "guide" | "student";
    durationMs: number;
    metadata?: Record<string, unknown> | undefined;
    title?: string | undefined;
    caption?: string | undefined;
    interactions?: {
        kind: "custom" | "drop-zone" | "input";
        id: string;
        props?: Record<string, unknown> | undefined;
        targetNodeId?: string | undefined;
    }[] | undefined;
}, {
    id: string;
    keyframes: {
        nodeId: string;
        keyframes: {
            transform: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            };
            timeMs: number;
            metadata?: Record<string, unknown> | undefined;
            easing?: string | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
    }[];
    actor: "guide" | "student";
    durationMs: number;
    metadata?: Record<string, unknown> | undefined;
    title?: string | undefined;
    caption?: string | undefined;
    interactions?: {
        kind: "custom" | "drop-zone" | "input";
        id: string;
        props?: Record<string, unknown> | undefined;
        targetNodeId?: string | undefined;
    }[] | undefined;
}>;
type SegmentStep = z.infer<typeof SegmentStepSchema>;
declare const SegmentTimelineSchema: z.ZodObject<{
    version: z.ZodLiteral<1>;
    label: z.ZodOptional<z.ZodString>;
    steps: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        title: z.ZodOptional<z.ZodString>;
        caption: z.ZodOptional<z.ZodString>;
        actor: z.ZodEnum<["guide", "student"]>;
        durationMs: z.ZodNumber;
        keyframes: z.ZodArray<z.ZodObject<{
            nodeId: z.ZodString;
            keyframes: z.ZodArray<z.ZodObject<{
                timeMs: z.ZodNumber;
                transform: z.ZodObject<{
                    position: z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>;
                    rotation: z.ZodOptional<z.ZodNumber>;
                    scale: z.ZodOptional<z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>>;
                    opacity: z.ZodOptional<z.ZodNumber>;
                }, "strict", z.ZodTypeAny, {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                }, {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                }>;
                easing: z.ZodOptional<z.ZodString>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }, {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }>, "many">;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            nodeId: string;
            keyframes: {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
        }, {
            nodeId: string;
            keyframes: {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
        }>, "many">;
        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
            targetNodeId: z.ZodOptional<z.ZodString>;
            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            kind: "custom" | "drop-zone" | "input";
            id: string;
            props?: Record<string, unknown> | undefined;
            targetNodeId?: string | undefined;
        }, {
            kind: "custom" | "drop-zone" | "input";
            id: string;
            props?: Record<string, unknown> | undefined;
            targetNodeId?: string | undefined;
        }>, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        keyframes: {
            nodeId: string;
            keyframes: {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
        }[];
        actor: "guide" | "student";
        durationMs: number;
        metadata?: Record<string, unknown> | undefined;
        title?: string | undefined;
        caption?: string | undefined;
        interactions?: {
            kind: "custom" | "drop-zone" | "input";
            id: string;
            props?: Record<string, unknown> | undefined;
            targetNodeId?: string | undefined;
        }[] | undefined;
    }, {
        id: string;
        keyframes: {
            nodeId: string;
            keyframes: {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
        }[];
        actor: "guide" | "student";
        durationMs: number;
        metadata?: Record<string, unknown> | undefined;
        title?: string | undefined;
        caption?: string | undefined;
        interactions?: {
            kind: "custom" | "drop-zone" | "input";
            id: string;
            props?: Record<string, unknown> | undefined;
            targetNodeId?: string | undefined;
        }[] | undefined;
    }>, "many">;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
}, "strict", z.ZodTypeAny, {
    version: 1;
    steps: {
        id: string;
        keyframes: {
            nodeId: string;
            keyframes: {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
        }[];
        actor: "guide" | "student";
        durationMs: number;
        metadata?: Record<string, unknown> | undefined;
        title?: string | undefined;
        caption?: string | undefined;
        interactions?: {
            kind: "custom" | "drop-zone" | "input";
            id: string;
            props?: Record<string, unknown> | undefined;
            targetNodeId?: string | undefined;
        }[] | undefined;
    }[];
    metadata?: Record<string, unknown> | undefined;
    label?: string | undefined;
}, {
    version: 1;
    steps: {
        id: string;
        keyframes: {
            nodeId: string;
            keyframes: {
                transform: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                };
                timeMs: number;
                metadata?: Record<string, unknown> | undefined;
                easing?: string | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
        }[];
        actor: "guide" | "student";
        durationMs: number;
        metadata?: Record<string, unknown> | undefined;
        title?: string | undefined;
        caption?: string | undefined;
        interactions?: {
            kind: "custom" | "drop-zone" | "input";
            id: string;
            props?: Record<string, unknown> | undefined;
            targetNodeId?: string | undefined;
        }[] | undefined;
    }[];
    metadata?: Record<string, unknown> | undefined;
    label?: string | undefined;
}>;
type SegmentTimeline = z.infer<typeof SegmentTimelineSchema>;
declare const PresentationActionInputSchema: z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"narrate">;
    text: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "narrate";
    text: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "narrate";
    text: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"showCard">;
    card: z.ZodString;
    position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
}, "strict", z.ZodTypeAny, {
    type: "showCard";
    position: "multiplicand-stack" | "multiplier" | "paper";
    card: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "showCard";
    position: "multiplicand-stack" | "multiplier" | "paper";
    card: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"placeBeads">;
    place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
    quantity: z.ZodNumber;
    tray: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "placeBeads";
    quantity: number;
    place: "unit" | "ten" | "hundred" | "thousand";
    tray: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "placeBeads";
    quantity: number;
    place: "unit" | "ten" | "hundred" | "thousand";
    tray: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"duplicateTray">;
    count: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "duplicateTray";
    count: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "duplicateTray";
    count: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"exchange">;
    from: z.ZodEnum<["unit", "ten", "hundred"]>;
    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
    quantity: z.ZodNumber;
    remainder: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "exchange";
    quantity: number;
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    remainder: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "exchange";
    quantity: number;
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    remainder: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"moveBeadsBelowLine">;
    place: z.ZodEnum<["unit", "ten", "hundred"]>;
    totalCount: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "moveBeadsBelowLine";
    place: "unit" | "ten" | "hundred";
    totalCount: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "moveBeadsBelowLine";
    place: "unit" | "ten" | "hundred";
    totalCount: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"groupForExchange">;
    place: z.ZodEnum<["unit", "ten", "hundred"]>;
    groupsOfTen: z.ZodNumber;
    remainder: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "groupForExchange";
    place: "unit" | "ten" | "hundred";
    remainder: number;
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "groupForExchange";
    place: "unit" | "ten" | "hundred";
    remainder: number;
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"exchangeBeads">;
    from: z.ZodEnum<["unit", "ten", "hundred"]>;
    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
    groupsOfTen: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "exchangeBeads";
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "exchangeBeads";
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"placeResultCard">;
    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
    value: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    value: number;
    type: "placeResultCard";
    place: "unit" | "ten" | "hundred" | "thousand";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    value: number;
    type: "placeResultCard";
    place: "unit" | "ten" | "hundred" | "thousand";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"stackPlaceValues">;
    order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
}, "strict", z.ZodTypeAny, {
    type: "stackPlaceValues";
    order: ("unit" | "ten" | "hundred" | "thousand")[];
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "stackPlaceValues";
    order: ("unit" | "ten" | "hundred" | "thousand")[];
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"writeResult">;
    value: z.ZodString;
}, "strict", z.ZodTypeAny, {
    value: string;
    type: "writeResult";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    value: string;
    type: "writeResult";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"highlight">;
    target: z.ZodString;
    text: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    type: "highlight";
    target: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
    text?: string | undefined;
}, {
    type: "highlight";
    target: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
    text?: string | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"showStamp">;
    stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
    columns: z.ZodNumber;
    rows: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "showStamp";
    stamp: "1" | "10" | "100";
    columns: number;
    rows: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "showStamp";
    stamp: "1" | "10" | "100";
    columns: number;
    rows: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"countTotal">;
    value: z.ZodString;
}, "strict", z.ZodTypeAny, {
    value: string;
    type: "countTotal";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    value: string;
    type: "countTotal";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>]>;
type PresentationActionInput = z.infer<typeof PresentationActionInputSchema>;
declare const PresentationActionSchema: z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"narrate">;
    text: z.ZodString;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "narrate";
    id: string;
    text: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "narrate";
    id: string;
    text: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"showCard">;
    card: z.ZodString;
    position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "showCard";
    id: string;
    position: "multiplicand-stack" | "multiplier" | "paper";
    card: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "showCard";
    id: string;
    position: "multiplicand-stack" | "multiplier" | "paper";
    card: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"placeBeads">;
    place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
    quantity: z.ZodNumber;
    tray: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "placeBeads";
    id: string;
    quantity: number;
    place: "unit" | "ten" | "hundred" | "thousand";
    tray: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "placeBeads";
    id: string;
    quantity: number;
    place: "unit" | "ten" | "hundred" | "thousand";
    tray: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"duplicateTray">;
    count: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "duplicateTray";
    id: string;
    count: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "duplicateTray";
    id: string;
    count: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"exchange">;
    from: z.ZodEnum<["unit", "ten", "hundred"]>;
    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
    quantity: z.ZodNumber;
    remainder: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "exchange";
    id: string;
    quantity: number;
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    remainder: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "exchange";
    id: string;
    quantity: number;
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    remainder: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"moveBeadsBelowLine">;
    place: z.ZodEnum<["unit", "ten", "hundred"]>;
    totalCount: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "moveBeadsBelowLine";
    id: string;
    place: "unit" | "ten" | "hundred";
    totalCount: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "moveBeadsBelowLine";
    id: string;
    place: "unit" | "ten" | "hundred";
    totalCount: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"groupForExchange">;
    place: z.ZodEnum<["unit", "ten", "hundred"]>;
    groupsOfTen: z.ZodNumber;
    remainder: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "groupForExchange";
    id: string;
    place: "unit" | "ten" | "hundred";
    remainder: number;
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "groupForExchange";
    id: string;
    place: "unit" | "ten" | "hundred";
    remainder: number;
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"exchangeBeads">;
    from: z.ZodEnum<["unit", "ten", "hundred"]>;
    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
    groupsOfTen: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "exchangeBeads";
    id: string;
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "exchangeBeads";
    id: string;
    from: "unit" | "ten" | "hundred";
    to: "ten" | "hundred" | "thousand";
    groupsOfTen: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"placeResultCard">;
    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
    value: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    value: number;
    type: "placeResultCard";
    id: string;
    place: "unit" | "ten" | "hundred" | "thousand";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    value: number;
    type: "placeResultCard";
    id: string;
    place: "unit" | "ten" | "hundred" | "thousand";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"stackPlaceValues">;
    order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "stackPlaceValues";
    id: string;
    order: ("unit" | "ten" | "hundred" | "thousand")[];
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "stackPlaceValues";
    id: string;
    order: ("unit" | "ten" | "hundred" | "thousand")[];
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"writeResult">;
    value: z.ZodString;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    value: string;
    type: "writeResult";
    id: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    value: string;
    type: "writeResult";
    id: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"highlight">;
    target: z.ZodString;
    text: z.ZodOptional<z.ZodString>;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "highlight";
    id: string;
    target: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
    text?: string | undefined;
}, {
    type: "highlight";
    id: string;
    target: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
    text?: string | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"showStamp">;
    stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
    columns: z.ZodNumber;
    rows: z.ZodNumber;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    type: "showStamp";
    id: string;
    stamp: "1" | "10" | "100";
    columns: number;
    rows: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    type: "showStamp";
    id: string;
    stamp: "1" | "10" | "100";
    columns: number;
    rows: number;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>, z.ZodObject<{
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
} & {
    type: z.ZodLiteral<"countTotal">;
    value: z.ZodString;
} & {
    id: z.ZodString;
}, "strict", z.ZodTypeAny, {
    value: string;
    type: "countTotal";
    id: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}, {
    value: string;
    type: "countTotal";
    id: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
}>]>;
type PresentationAction = z.infer<typeof PresentationActionSchema>;
declare const PresentationScriptSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"narrate">;
        text: z.ZodString;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "narrate";
        id: string;
        text: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "narrate";
        id: string;
        text: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"showCard">;
        card: z.ZodString;
        position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "showCard";
        id: string;
        position: "multiplicand-stack" | "multiplier" | "paper";
        card: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "showCard";
        id: string;
        position: "multiplicand-stack" | "multiplier" | "paper";
        card: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"placeBeads">;
        place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
        quantity: z.ZodNumber;
        tray: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "placeBeads";
        id: string;
        quantity: number;
        place: "unit" | "ten" | "hundred" | "thousand";
        tray: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "placeBeads";
        id: string;
        quantity: number;
        place: "unit" | "ten" | "hundred" | "thousand";
        tray: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"duplicateTray">;
        count: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "duplicateTray";
        id: string;
        count: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "duplicateTray";
        id: string;
        count: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"exchange">;
        from: z.ZodEnum<["unit", "ten", "hundred"]>;
        to: z.ZodEnum<["ten", "hundred", "thousand"]>;
        quantity: z.ZodNumber;
        remainder: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "exchange";
        id: string;
        quantity: number;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        remainder: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "exchange";
        id: string;
        quantity: number;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        remainder: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"moveBeadsBelowLine">;
        place: z.ZodEnum<["unit", "ten", "hundred"]>;
        totalCount: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "moveBeadsBelowLine";
        id: string;
        place: "unit" | "ten" | "hundred";
        totalCount: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "moveBeadsBelowLine";
        id: string;
        place: "unit" | "ten" | "hundred";
        totalCount: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"groupForExchange">;
        place: z.ZodEnum<["unit", "ten", "hundred"]>;
        groupsOfTen: z.ZodNumber;
        remainder: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "groupForExchange";
        id: string;
        place: "unit" | "ten" | "hundred";
        remainder: number;
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "groupForExchange";
        id: string;
        place: "unit" | "ten" | "hundred";
        remainder: number;
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"exchangeBeads">;
        from: z.ZodEnum<["unit", "ten", "hundred"]>;
        to: z.ZodEnum<["ten", "hundred", "thousand"]>;
        groupsOfTen: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "exchangeBeads";
        id: string;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "exchangeBeads";
        id: string;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"placeResultCard">;
        place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
        value: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        value: number;
        type: "placeResultCard";
        id: string;
        place: "unit" | "ten" | "hundred" | "thousand";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        value: number;
        type: "placeResultCard";
        id: string;
        place: "unit" | "ten" | "hundred" | "thousand";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"stackPlaceValues">;
        order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "stackPlaceValues";
        id: string;
        order: ("unit" | "ten" | "hundred" | "thousand")[];
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "stackPlaceValues";
        id: string;
        order: ("unit" | "ten" | "hundred" | "thousand")[];
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"writeResult">;
        value: z.ZodString;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        value: string;
        type: "writeResult";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        value: string;
        type: "writeResult";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"highlight">;
        target: z.ZodString;
        text: z.ZodOptional<z.ZodString>;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "highlight";
        id: string;
        target: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        text?: string | undefined;
    }, {
        type: "highlight";
        id: string;
        target: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        text?: string | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"showStamp">;
        stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
        columns: z.ZodNumber;
        rows: z.ZodNumber;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        type: "showStamp";
        id: string;
        stamp: "1" | "10" | "100";
        columns: number;
        rows: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        type: "showStamp";
        id: string;
        stamp: "1" | "10" | "100";
        columns: number;
        rows: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>, z.ZodObject<{
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        type: z.ZodLiteral<"countTotal">;
        value: z.ZodString;
    } & {
        id: z.ZodString;
    }, "strict", z.ZodTypeAny, {
        value: string;
        type: "countTotal";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }, {
        value: string;
        type: "countTotal";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    }>]>, "many">;
    summary: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    id: string;
    title: string;
    actions: ({
        type: "narrate";
        id: string;
        text: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "showCard";
        id: string;
        position: "multiplicand-stack" | "multiplier" | "paper";
        card: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "placeBeads";
        id: string;
        quantity: number;
        place: "unit" | "ten" | "hundred" | "thousand";
        tray: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "duplicateTray";
        id: string;
        count: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "exchange";
        id: string;
        quantity: number;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        remainder: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "moveBeadsBelowLine";
        id: string;
        place: "unit" | "ten" | "hundred";
        totalCount: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "groupForExchange";
        id: string;
        place: "unit" | "ten" | "hundred";
        remainder: number;
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "exchangeBeads";
        id: string;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        value: number;
        type: "placeResultCard";
        id: string;
        place: "unit" | "ten" | "hundred" | "thousand";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "stackPlaceValues";
        id: string;
        order: ("unit" | "ten" | "hundred" | "thousand")[];
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        value: string;
        type: "writeResult";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "highlight";
        id: string;
        target: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        text?: string | undefined;
    } | {
        type: "showStamp";
        id: string;
        stamp: "1" | "10" | "100";
        columns: number;
        rows: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        value: string;
        type: "countTotal";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    })[];
    summary?: string | undefined;
}, {
    id: string;
    title: string;
    actions: ({
        type: "narrate";
        id: string;
        text: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "showCard";
        id: string;
        position: "multiplicand-stack" | "multiplier" | "paper";
        card: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "placeBeads";
        id: string;
        quantity: number;
        place: "unit" | "ten" | "hundred" | "thousand";
        tray: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "duplicateTray";
        id: string;
        count: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "exchange";
        id: string;
        quantity: number;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        remainder: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "moveBeadsBelowLine";
        id: string;
        place: "unit" | "ten" | "hundred";
        totalCount: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "groupForExchange";
        id: string;
        place: "unit" | "ten" | "hundred";
        remainder: number;
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "exchangeBeads";
        id: string;
        from: "unit" | "ten" | "hundred";
        to: "ten" | "hundred" | "thousand";
        groupsOfTen: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        value: number;
        type: "placeResultCard";
        id: string;
        place: "unit" | "ten" | "hundred" | "thousand";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "stackPlaceValues";
        id: string;
        order: ("unit" | "ten" | "hundred" | "thousand")[];
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        value: string;
        type: "writeResult";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        type: "highlight";
        id: string;
        target: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        text?: string | undefined;
    } | {
        type: "showStamp";
        id: string;
        stamp: "1" | "10" | "100";
        columns: number;
        rows: number;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    } | {
        value: string;
        type: "countTotal";
        id: string;
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
    })[];
    summary?: string | undefined;
}>;
type PresentationScript = z.infer<typeof PresentationScriptSchema>;
declare const GuidedStepSchema: z.ZodObject<{
    id: z.ZodString;
    prompt: z.ZodString;
    expectation: z.ZodString;
    successCheck: z.ZodString;
    nudge: z.ZodString;
    explanation: z.ZodOptional<z.ZodString>;
    durationMs: z.ZodOptional<z.ZodNumber>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    prompt: string;
    expectation: string;
    successCheck: string;
    nudge: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
    explanation?: string | undefined;
}, {
    id: string;
    prompt: string;
    expectation: string;
    successCheck: string;
    nudge: string;
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
    durationMs?: number | undefined;
    explanation?: string | undefined;
}>;
type GuidedStep = z.infer<typeof GuidedStepSchema>;
declare const GuidedEvaluatorIdSchema: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
type GuidedEvaluatorId = z.infer<typeof GuidedEvaluatorIdSchema>;
declare const PresentationSegmentSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"presentation">;
    representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
    primaryMaterialId: z.ZodOptional<z.ZodString>;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    scriptId: z.ZodOptional<z.ZodString>;
    script: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"narrate">;
            text: z.ZodString;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"showCard">;
            card: z.ZodString;
            position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"placeBeads">;
            place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
            quantity: z.ZodNumber;
            tray: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"duplicateTray">;
            count: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"exchange">;
            from: z.ZodEnum<["unit", "ten", "hundred"]>;
            to: z.ZodEnum<["ten", "hundred", "thousand"]>;
            quantity: z.ZodNumber;
            remainder: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"moveBeadsBelowLine">;
            place: z.ZodEnum<["unit", "ten", "hundred"]>;
            totalCount: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"groupForExchange">;
            place: z.ZodEnum<["unit", "ten", "hundred"]>;
            groupsOfTen: z.ZodNumber;
            remainder: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"exchangeBeads">;
            from: z.ZodEnum<["unit", "ten", "hundred"]>;
            to: z.ZodEnum<["ten", "hundred", "thousand"]>;
            groupsOfTen: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"placeResultCard">;
            place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
            value: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"stackPlaceValues">;
            order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"writeResult">;
            value: z.ZodString;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"highlight">;
            target: z.ZodString;
            text: z.ZodOptional<z.ZodString>;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        }, {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"showStamp">;
            stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
            columns: z.ZodNumber;
            rows: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"countTotal">;
            value: z.ZodString;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>]>, "many">;
        summary: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    }, {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    }>>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
    materialBankId: z.ZodOptional<z.ZodString>;
    timeline: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        label: z.ZodOptional<z.ZodString>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
            caption: z.ZodOptional<z.ZodString>;
            actor: z.ZodEnum<["guide", "student"]>;
            durationMs: z.ZodNumber;
            keyframes: z.ZodArray<z.ZodObject<{
                nodeId: z.ZodString;
                keyframes: z.ZodArray<z.ZodObject<{
                    timeMs: z.ZodNumber;
                    transform: z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>;
                    easing: z.ZodOptional<z.ZodString>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }>, "many">;
            interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                targetNodeId: z.ZodOptional<z.ZodString>;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }>, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    type: "presentation";
    id: string;
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    primaryMaterialId?: string | undefined;
    scriptId?: string | undefined;
    script?: {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    } | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}, {
    type: "presentation";
    id: string;
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    primaryMaterialId?: string | undefined;
    scriptId?: string | undefined;
    script?: {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    } | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}>;
type PresentationSegment = z.infer<typeof PresentationSegmentSchema>;
declare const GuidedSegmentSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"guided">;
    representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
    steps: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        prompt: z.ZodString;
        expectation: z.ZodString;
        successCheck: z.ZodString;
        nudge: z.ZodString;
        explanation: z.ZodOptional<z.ZodString>;
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }, {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }>, "many">;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
    materialBankId: z.ZodOptional<z.ZodString>;
    timeline: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        label: z.ZodOptional<z.ZodString>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
            caption: z.ZodOptional<z.ZodString>;
            actor: z.ZodEnum<["guide", "student"]>;
            durationMs: z.ZodNumber;
            keyframes: z.ZodArray<z.ZodObject<{
                nodeId: z.ZodString;
                keyframes: z.ZodArray<z.ZodObject<{
                    timeMs: z.ZodNumber;
                    transform: z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>;
                    easing: z.ZodOptional<z.ZodString>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }>, "many">;
            interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                targetNodeId: z.ZodOptional<z.ZodString>;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }>, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    type: "guided";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    steps: {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }[];
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}, {
    type: "guided";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    steps: {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }[];
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}>;
type GuidedSegment = z.infer<typeof GuidedSegmentSchema>;
declare const PracticeQuestionSchema: z.ZodObject<{
    id: z.ZodString;
    multiplicand: z.ZodNumber;
    multiplier: z.ZodNumber;
    prompt: z.ZodString;
    correctAnswer: z.ZodNumber;
    difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
    authoring: z.ZodOptional<z.ZodObject<{
        label: z.ZodOptional<z.ZodString>;
        description: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }, {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    multiplier: number;
    prompt: string;
    multiplicand: number;
    correctAnswer: number;
    difficulty: "easy" | "medium" | "hard";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
}, {
    id: string;
    multiplier: number;
    prompt: string;
    multiplicand: number;
    correctAnswer: number;
    difficulty: "easy" | "medium" | "hard";
    authoring?: {
        metadata?: Record<string, unknown> | undefined;
        notes?: string | undefined;
        label?: string | undefined;
        description?: string | undefined;
        tags?: string[] | undefined;
    } | undefined;
}>;
type PracticeQuestion = z.infer<typeof PracticeQuestionSchema>;
declare const PracticePassCriteriaSchema: z.ZodObject<{
    type: z.ZodLiteral<"threshold">;
    firstCorrect: z.ZodNumber;
    totalCorrect: z.ZodNumber;
    maxMisses: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    type: "threshold";
    firstCorrect: number;
    totalCorrect: number;
    maxMisses: number;
}, {
    type: "threshold";
    firstCorrect: number;
    totalCorrect: number;
    maxMisses: number;
}>;
type PracticePassCriteria = z.infer<typeof PracticePassCriteriaSchema>;
declare const PracticeSegmentSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"practice">;
    representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
    questions: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        multiplicand: z.ZodNumber;
        multiplier: z.ZodNumber;
        prompt: z.ZodString;
        correctAnswer: z.ZodNumber;
        difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }, {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }>, "many">;
    passCriteria: z.ZodObject<{
        type: z.ZodLiteral<"threshold">;
        firstCorrect: z.ZodNumber;
        totalCorrect: z.ZodNumber;
        maxMisses: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    }, {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    }>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
    materialBankId: z.ZodOptional<z.ZodString>;
    timeline: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        label: z.ZodOptional<z.ZodString>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
            caption: z.ZodOptional<z.ZodString>;
            actor: z.ZodEnum<["guide", "student"]>;
            durationMs: z.ZodNumber;
            keyframes: z.ZodArray<z.ZodObject<{
                nodeId: z.ZodString;
                keyframes: z.ZodArray<z.ZodObject<{
                    timeMs: z.ZodNumber;
                    transform: z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>;
                    easing: z.ZodOptional<z.ZodString>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }>, "many">;
            interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                targetNodeId: z.ZodOptional<z.ZodString>;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }>, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    type: "practice";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    questions: {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }[];
    passCriteria: {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    };
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}, {
    type: "practice";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    questions: {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }[];
    passCriteria: {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    };
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}>;
type PracticeSegment = z.infer<typeof PracticeSegmentSchema>;
declare const LessonSegmentSchema: z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"presentation">;
    representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
    primaryMaterialId: z.ZodOptional<z.ZodString>;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    scriptId: z.ZodOptional<z.ZodString>;
    script: z.ZodOptional<z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"narrate">;
            text: z.ZodString;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"showCard">;
            card: z.ZodString;
            position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"placeBeads">;
            place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
            quantity: z.ZodNumber;
            tray: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"duplicateTray">;
            count: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"exchange">;
            from: z.ZodEnum<["unit", "ten", "hundred"]>;
            to: z.ZodEnum<["ten", "hundred", "thousand"]>;
            quantity: z.ZodNumber;
            remainder: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"moveBeadsBelowLine">;
            place: z.ZodEnum<["unit", "ten", "hundred"]>;
            totalCount: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"groupForExchange">;
            place: z.ZodEnum<["unit", "ten", "hundred"]>;
            groupsOfTen: z.ZodNumber;
            remainder: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"exchangeBeads">;
            from: z.ZodEnum<["unit", "ten", "hundred"]>;
            to: z.ZodEnum<["ten", "hundred", "thousand"]>;
            groupsOfTen: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"placeResultCard">;
            place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
            value: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"stackPlaceValues">;
            order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"writeResult">;
            value: z.ZodString;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"highlight">;
            target: z.ZodString;
            text: z.ZodOptional<z.ZodString>;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        }, {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"showStamp">;
            stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
            columns: z.ZodNumber;
            rows: z.ZodNumber;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>, z.ZodObject<{
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            type: z.ZodLiteral<"countTotal">;
            value: z.ZodString;
        } & {
            id: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }, {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        }>]>, "many">;
        summary: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    }, {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    }>>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
    materialBankId: z.ZodOptional<z.ZodString>;
    timeline: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        label: z.ZodOptional<z.ZodString>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
            caption: z.ZodOptional<z.ZodString>;
            actor: z.ZodEnum<["guide", "student"]>;
            durationMs: z.ZodNumber;
            keyframes: z.ZodArray<z.ZodObject<{
                nodeId: z.ZodString;
                keyframes: z.ZodArray<z.ZodObject<{
                    timeMs: z.ZodNumber;
                    transform: z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>;
                    easing: z.ZodOptional<z.ZodString>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }>, "many">;
            interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                targetNodeId: z.ZodOptional<z.ZodString>;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }>, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    type: "presentation";
    id: string;
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    primaryMaterialId?: string | undefined;
    scriptId?: string | undefined;
    script?: {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    } | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}, {
    type: "presentation";
    id: string;
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    primaryMaterialId?: string | undefined;
    scriptId?: string | undefined;
    script?: {
        id: string;
        title: string;
        actions: ({
            type: "narrate";
            id: string;
            text: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "showCard";
            id: string;
            position: "multiplicand-stack" | "multiplier" | "paper";
            card: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "placeBeads";
            id: string;
            quantity: number;
            place: "unit" | "ten" | "hundred" | "thousand";
            tray: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "duplicateTray";
            id: string;
            count: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchange";
            id: string;
            quantity: number;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            remainder: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "moveBeadsBelowLine";
            id: string;
            place: "unit" | "ten" | "hundred";
            totalCount: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "groupForExchange";
            id: string;
            place: "unit" | "ten" | "hundred";
            remainder: number;
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "exchangeBeads";
            id: string;
            from: "unit" | "ten" | "hundred";
            to: "ten" | "hundred" | "thousand";
            groupsOfTen: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: number;
            type: "placeResultCard";
            id: string;
            place: "unit" | "ten" | "hundred" | "thousand";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "stackPlaceValues";
            id: string;
            order: ("unit" | "ten" | "hundred" | "thousand")[];
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "writeResult";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            type: "highlight";
            id: string;
            target: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            text?: string | undefined;
        } | {
            type: "showStamp";
            id: string;
            stamp: "1" | "10" | "100";
            columns: number;
            rows: number;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        } | {
            value: string;
            type: "countTotal";
            id: string;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
        })[];
        summary?: string | undefined;
    } | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}>, z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"guided">;
    representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
    steps: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        prompt: z.ZodString;
        expectation: z.ZodString;
        successCheck: z.ZodString;
        nudge: z.ZodString;
        explanation: z.ZodOptional<z.ZodString>;
        durationMs: z.ZodOptional<z.ZodNumber>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    } & {
        evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }, {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }>, "many">;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
    materialBankId: z.ZodOptional<z.ZodString>;
    timeline: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        label: z.ZodOptional<z.ZodString>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
            caption: z.ZodOptional<z.ZodString>;
            actor: z.ZodEnum<["guide", "student"]>;
            durationMs: z.ZodNumber;
            keyframes: z.ZodArray<z.ZodObject<{
                nodeId: z.ZodString;
                keyframes: z.ZodArray<z.ZodObject<{
                    timeMs: z.ZodNumber;
                    transform: z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>;
                    easing: z.ZodOptional<z.ZodString>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }>, "many">;
            interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                targetNodeId: z.ZodOptional<z.ZodString>;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }>, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    type: "guided";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    steps: {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }[];
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}, {
    type: "guided";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    steps: {
        id: string;
        prompt: string;
        expectation: string;
        successCheck: string;
        nudge: string;
        evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
        durationMs?: number | undefined;
        explanation?: string | undefined;
    }[];
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}>, z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodLiteral<"practice">;
    representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
    questions: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        multiplicand: z.ZodNumber;
        multiplier: z.ZodNumber;
        prompt: z.ZodString;
        correctAnswer: z.ZodNumber;
        difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
        authoring: z.ZodOptional<z.ZodObject<{
            label: z.ZodOptional<z.ZodString>;
            description: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }, {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }, {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }>, "many">;
    passCriteria: z.ZodObject<{
        type: z.ZodLiteral<"threshold">;
        firstCorrect: z.ZodNumber;
        totalCorrect: z.ZodNumber;
        maxMisses: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    }, {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    }>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
    materialBankId: z.ZodOptional<z.ZodString>;
    timeline: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        label: z.ZodOptional<z.ZodString>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodOptional<z.ZodString>;
            caption: z.ZodOptional<z.ZodString>;
            actor: z.ZodEnum<["guide", "student"]>;
            durationMs: z.ZodNumber;
            keyframes: z.ZodArray<z.ZodObject<{
                nodeId: z.ZodString;
                keyframes: z.ZodArray<z.ZodObject<{
                    timeMs: z.ZodNumber;
                    transform: z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>;
                    easing: z.ZodOptional<z.ZodString>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }, {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }, {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }>, "many">;
            interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                targetNodeId: z.ZodOptional<z.ZodString>;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }, {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }>, "many">>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }, {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }>, "many">;
        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }, {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    type: "practice";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    questions: {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }[];
    passCriteria: {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    };
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}, {
    type: "practice";
    id: string;
    workspace: "golden-beads" | "stamp-game";
    title: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    skills: string[];
    questions: {
        id: string;
        multiplier: number;
        prompt: string;
        multiplicand: number;
        correctAnswer: number;
        difficulty: "easy" | "medium" | "hard";
        authoring?: {
            metadata?: Record<string, unknown> | undefined;
            notes?: string | undefined;
            label?: string | undefined;
            description?: string | undefined;
            tags?: string[] | undefined;
        } | undefined;
    }[];
    passCriteria: {
        type: "threshold";
        firstCorrect: number;
        totalCorrect: number;
        maxMisses: number;
    };
    description?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    representation?: "concrete" | "abstract" | undefined;
    materialBankId?: string | undefined;
    timeline?: {
        version: 1;
        steps: {
            id: string;
            keyframes: {
                nodeId: string;
                keyframes: {
                    transform: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    };
                    timeMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    easing?: string | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
            }[];
            actor: "guide" | "student";
            durationMs: number;
            metadata?: Record<string, unknown> | undefined;
            title?: string | undefined;
            caption?: string | undefined;
            interactions?: {
                kind: "custom" | "drop-zone" | "input";
                id: string;
                props?: Record<string, unknown> | undefined;
                targetNodeId?: string | undefined;
            }[] | undefined;
        }[];
        metadata?: Record<string, unknown> | undefined;
        label?: string | undefined;
    } | undefined;
}>]>;
type LessonSegment = z.infer<typeof LessonSegmentSchema>;
declare const LessonSchema: z.ZodObject<{
    id: z.ZodString;
    topicId: z.ZodString;
    title: z.ZodString;
    summary: z.ZodOptional<z.ZodString>;
    focusSkills: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    estimatedDurationMinutes: z.ZodNumber;
    primaryMaterialId: z.ZodString;
    segments: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"presentation">;
        representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
        primaryMaterialId: z.ZodOptional<z.ZodString>;
        materials: z.ZodArray<z.ZodObject<{
            materialId: z.ZodString;
            purpose: z.ZodString;
            optional: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }>, "many">;
        skills: z.ZodArray<z.ZodString, "many">;
        scriptId: z.ZodOptional<z.ZodString>;
        script: z.ZodOptional<z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"narrate">;
                text: z.ZodString;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"showCard">;
                card: z.ZodString;
                position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"placeBeads">;
                place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
                quantity: z.ZodNumber;
                tray: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"duplicateTray">;
                count: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"exchange">;
                from: z.ZodEnum<["unit", "ten", "hundred"]>;
                to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                quantity: z.ZodNumber;
                remainder: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"moveBeadsBelowLine">;
                place: z.ZodEnum<["unit", "ten", "hundred"]>;
                totalCount: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"groupForExchange">;
                place: z.ZodEnum<["unit", "ten", "hundred"]>;
                groupsOfTen: z.ZodNumber;
                remainder: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"exchangeBeads">;
                from: z.ZodEnum<["unit", "ten", "hundred"]>;
                to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                groupsOfTen: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"placeResultCard">;
                place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                value: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"stackPlaceValues">;
                order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"writeResult">;
                value: z.ZodString;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"highlight">;
                target: z.ZodString;
                text: z.ZodOptional<z.ZodString>;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            }, {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"showStamp">;
                stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
                columns: z.ZodNumber;
                rows: z.ZodNumber;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>, z.ZodObject<{
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                type: z.ZodLiteral<"countTotal">;
                value: z.ZodString;
            } & {
                id: z.ZodString;
            }, "strict", z.ZodTypeAny, {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }, {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            }>]>, "many">;
            summary: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            title: string;
            actions: ({
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            } | {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            })[];
            summary?: string | undefined;
        }, {
            id: string;
            title: string;
            actions: ({
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            } | {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            })[];
            summary?: string | undefined;
        }>>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
        materialBankId: z.ZodOptional<z.ZodString>;
        timeline: z.ZodOptional<z.ZodObject<{
            version: z.ZodLiteral<1>;
            label: z.ZodOptional<z.ZodString>;
            steps: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                title: z.ZodOptional<z.ZodString>;
                caption: z.ZodOptional<z.ZodString>;
                actor: z.ZodEnum<["guide", "student"]>;
                durationMs: z.ZodNumber;
                keyframes: z.ZodArray<z.ZodObject<{
                    nodeId: z.ZodString;
                    keyframes: z.ZodArray<z.ZodObject<{
                        timeMs: z.ZodNumber;
                        transform: z.ZodObject<{
                            position: z.ZodObject<{
                                x: z.ZodNumber;
                                y: z.ZodNumber;
                            }, "strip", z.ZodTypeAny, {
                                x: number;
                                y: number;
                            }, {
                                x: number;
                                y: number;
                            }>;
                            rotation: z.ZodOptional<z.ZodNumber>;
                            scale: z.ZodOptional<z.ZodObject<{
                                x: z.ZodNumber;
                                y: z.ZodNumber;
                            }, "strip", z.ZodTypeAny, {
                                x: number;
                                y: number;
                            }, {
                                x: number;
                                y: number;
                            }>>;
                            opacity: z.ZodOptional<z.ZodNumber>;
                        }, "strict", z.ZodTypeAny, {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        }, {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        }>;
                        easing: z.ZodOptional<z.ZodString>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }, {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }, {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }>, "many">;
                interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                    targetNodeId: z.ZodOptional<z.ZodString>;
                    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }, {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }>, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }, {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }>, "many">;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        }, {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        type: "presentation";
        id: string;
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        primaryMaterialId?: string | undefined;
        scriptId?: string | undefined;
        script?: {
            id: string;
            title: string;
            actions: ({
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            } | {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            })[];
            summary?: string | undefined;
        } | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    }, {
        type: "presentation";
        id: string;
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        primaryMaterialId?: string | undefined;
        scriptId?: string | undefined;
        script?: {
            id: string;
            title: string;
            actions: ({
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            } | {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            })[];
            summary?: string | undefined;
        } | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    }>, z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"guided">;
        representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
        materials: z.ZodArray<z.ZodObject<{
            materialId: z.ZodString;
            purpose: z.ZodString;
            optional: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }>, "many">;
        skills: z.ZodArray<z.ZodString, "many">;
        workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
        steps: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            prompt: z.ZodString;
            expectation: z.ZodString;
            successCheck: z.ZodString;
            nudge: z.ZodString;
            explanation: z.ZodOptional<z.ZodString>;
            durationMs: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        } & {
            evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            prompt: string;
            expectation: string;
            successCheck: string;
            nudge: string;
            evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            explanation?: string | undefined;
        }, {
            id: string;
            prompt: string;
            expectation: string;
            successCheck: string;
            nudge: string;
            evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            explanation?: string | undefined;
        }>, "many">;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
        materialBankId: z.ZodOptional<z.ZodString>;
        timeline: z.ZodOptional<z.ZodObject<{
            version: z.ZodLiteral<1>;
            label: z.ZodOptional<z.ZodString>;
            steps: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                title: z.ZodOptional<z.ZodString>;
                caption: z.ZodOptional<z.ZodString>;
                actor: z.ZodEnum<["guide", "student"]>;
                durationMs: z.ZodNumber;
                keyframes: z.ZodArray<z.ZodObject<{
                    nodeId: z.ZodString;
                    keyframes: z.ZodArray<z.ZodObject<{
                        timeMs: z.ZodNumber;
                        transform: z.ZodObject<{
                            position: z.ZodObject<{
                                x: z.ZodNumber;
                                y: z.ZodNumber;
                            }, "strip", z.ZodTypeAny, {
                                x: number;
                                y: number;
                            }, {
                                x: number;
                                y: number;
                            }>;
                            rotation: z.ZodOptional<z.ZodNumber>;
                            scale: z.ZodOptional<z.ZodObject<{
                                x: z.ZodNumber;
                                y: z.ZodNumber;
                            }, "strip", z.ZodTypeAny, {
                                x: number;
                                y: number;
                            }, {
                                x: number;
                                y: number;
                            }>>;
                            opacity: z.ZodOptional<z.ZodNumber>;
                        }, "strict", z.ZodTypeAny, {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        }, {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        }>;
                        easing: z.ZodOptional<z.ZodString>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }, {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }, {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }>, "many">;
                interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                    targetNodeId: z.ZodOptional<z.ZodString>;
                    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }, {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }>, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }, {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }>, "many">;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        }, {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        type: "guided";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        steps: {
            id: string;
            prompt: string;
            expectation: string;
            successCheck: string;
            nudge: string;
            evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            explanation?: string | undefined;
        }[];
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    }, {
        type: "guided";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        steps: {
            id: string;
            prompt: string;
            expectation: string;
            successCheck: string;
            nudge: string;
            evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            explanation?: string | undefined;
        }[];
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    }>, z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        type: z.ZodLiteral<"practice">;
        representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
        materials: z.ZodArray<z.ZodObject<{
            materialId: z.ZodString;
            purpose: z.ZodString;
            optional: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }>, "many">;
        skills: z.ZodArray<z.ZodString, "many">;
        workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
        questions: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            multiplicand: z.ZodNumber;
            multiplier: z.ZodNumber;
            prompt: z.ZodString;
            correctAnswer: z.ZodNumber;
            difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            multiplier: number;
            prompt: string;
            multiplicand: number;
            correctAnswer: number;
            difficulty: "easy" | "medium" | "hard";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }, {
            id: string;
            multiplier: number;
            prompt: string;
            multiplicand: number;
            correctAnswer: number;
            difficulty: "easy" | "medium" | "hard";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }>, "many">;
        passCriteria: z.ZodObject<{
            type: z.ZodLiteral<"threshold">;
            firstCorrect: z.ZodNumber;
            totalCorrect: z.ZodNumber;
            maxMisses: z.ZodNumber;
        }, "strict", z.ZodTypeAny, {
            type: "threshold";
            firstCorrect: number;
            totalCorrect: number;
            maxMisses: number;
        }, {
            type: "threshold";
            firstCorrect: number;
            totalCorrect: number;
            maxMisses: number;
        }>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
        materialBankId: z.ZodOptional<z.ZodString>;
        timeline: z.ZodOptional<z.ZodObject<{
            version: z.ZodLiteral<1>;
            label: z.ZodOptional<z.ZodString>;
            steps: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                title: z.ZodOptional<z.ZodString>;
                caption: z.ZodOptional<z.ZodString>;
                actor: z.ZodEnum<["guide", "student"]>;
                durationMs: z.ZodNumber;
                keyframes: z.ZodArray<z.ZodObject<{
                    nodeId: z.ZodString;
                    keyframes: z.ZodArray<z.ZodObject<{
                        timeMs: z.ZodNumber;
                        transform: z.ZodObject<{
                            position: z.ZodObject<{
                                x: z.ZodNumber;
                                y: z.ZodNumber;
                            }, "strip", z.ZodTypeAny, {
                                x: number;
                                y: number;
                            }, {
                                x: number;
                                y: number;
                            }>;
                            rotation: z.ZodOptional<z.ZodNumber>;
                            scale: z.ZodOptional<z.ZodObject<{
                                x: z.ZodNumber;
                                y: z.ZodNumber;
                            }, "strip", z.ZodTypeAny, {
                                x: number;
                                y: number;
                            }, {
                                x: number;
                                y: number;
                            }>>;
                            opacity: z.ZodOptional<z.ZodNumber>;
                        }, "strict", z.ZodTypeAny, {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        }, {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        }>;
                        easing: z.ZodOptional<z.ZodString>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }, {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }, {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }>, "many">;
                interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                    targetNodeId: z.ZodOptional<z.ZodString>;
                    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }, {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }>, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }, {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }>, "many">;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        }, {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        type: "practice";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        questions: {
            id: string;
            multiplier: number;
            prompt: string;
            multiplicand: number;
            correctAnswer: number;
            difficulty: "easy" | "medium" | "hard";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        passCriteria: {
            type: "threshold";
            firstCorrect: number;
            totalCorrect: number;
            maxMisses: number;
        };
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    }, {
        type: "practice";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        questions: {
            id: string;
            multiplier: number;
            prompt: string;
            multiplicand: number;
            correctAnswer: number;
            difficulty: "easy" | "medium" | "hard";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        passCriteria: {
            type: "threshold";
            firstCorrect: number;
            totalCorrect: number;
            maxMisses: number;
        };
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    }>]>, "many">;
    materials: z.ZodArray<z.ZodObject<{
        materialId: z.ZodString;
        purpose: z.ZodString;
        optional: z.ZodOptional<z.ZodBoolean>;
    }, "strict", z.ZodTypeAny, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }, {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }>, "many">;
    materialInventory: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<1>;
        tokenTypes: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            materialId: z.ZodString;
            workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
            label: z.ZodString;
            visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
                kind: z.ZodLiteral<"bead">;
                place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
            }, "strip", z.ZodTypeAny, {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            }, {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            }>, z.ZodObject<{
                kind: z.ZodLiteral<"card">;
                value: z.ZodNumber;
                size: z.ZodEnum<["sm", "md", "lg"]>;
            }, "strip", z.ZodTypeAny, {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            }, {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            }>, z.ZodObject<{
                kind: z.ZodLiteral<"stamp">;
                value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
            }, "strip", z.ZodTypeAny, {
                value: 1 | 10 | 100;
                kind: "stamp";
            }, {
                value: 1 | 10 | 100;
                kind: "stamp";
            }>, z.ZodObject<{
                kind: z.ZodLiteral<"custom">;
                componentId: z.ZodString;
                props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strip", z.ZodTypeAny, {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            }, {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            }>]>;
            quantityPerToken: z.ZodOptional<z.ZodNumber>;
            authoring: z.ZodOptional<z.ZodObject<{
                label: z.ZodOptional<z.ZodString>;
                description: z.ZodOptional<z.ZodString>;
                notes: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }, {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            label: string;
            id: string;
            materialId: string;
            workspace: "golden-beads" | "stamp-game";
            visual: {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            } | {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            } | {
                value: 1 | 10 | 100;
                kind: "stamp";
            } | {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            };
            quantityPerToken?: number | undefined;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }, {
            label: string;
            id: string;
            materialId: string;
            workspace: "golden-beads" | "stamp-game";
            visual: {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            } | {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            } | {
                value: 1 | 10 | 100;
                kind: "stamp";
            } | {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            };
            quantityPerToken?: number | undefined;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }>, "many">;
        banks: z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            label: z.ZodString;
            scope: z.ZodEnum<["lesson", "segment"]>;
            segmentId: z.ZodOptional<z.ZodString>;
            materialId: z.ZodString;
            accepts: z.ZodArray<z.ZodString, "many">;
            initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
            depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
            layout: z.ZodOptional<z.ZodObject<{
                position: z.ZodObject<{
                    x: z.ZodNumber;
                    y: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    x: number;
                    y: number;
                }, {
                    x: number;
                    y: number;
                }>;
                width: z.ZodOptional<z.ZodNumber>;
                height: z.ZodOptional<z.ZodNumber>;
                align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
            }, "strict", z.ZodTypeAny, {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            }, {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            }>>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            label: string;
            id: string;
            materialId: string;
            scope: "lesson" | "segment";
            accepts: string[];
            initialQuantity: number | Record<string, number>;
            metadata?: Record<string, unknown> | undefined;
            segmentId?: string | undefined;
            depletion?: "static" | "consume" | "replenish" | undefined;
            layout?: {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            } | undefined;
        }, {
            label: string;
            id: string;
            materialId: string;
            scope: "lesson" | "segment";
            accepts: string[];
            initialQuantity: number | Record<string, number>;
            metadata?: Record<string, unknown> | undefined;
            segmentId?: string | undefined;
            depletion?: "static" | "consume" | "replenish" | undefined;
            layout?: {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            } | undefined;
        }>, "many">;
        defaultRules: z.ZodOptional<z.ZodObject<{
            onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
                triggerTokenType: z.ZodString;
                produces: z.ZodArray<z.ZodObject<{
                    tokenType: z.ZodString;
                    quantity: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    tokenType: string;
                    quantity: number;
                }, {
                    tokenType: string;
                    quantity: number;
                }>, "many">;
                consumes: z.ZodArray<z.ZodObject<{
                    tokenType: z.ZodString;
                    quantity: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    tokenType: string;
                    quantity: number;
                }, {
                    tokenType: string;
                    quantity: number;
                }>, "many">;
            }, "strict", z.ZodTypeAny, {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }, {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }>, "many">>;
            onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
                whenBankId: z.ZodString;
                method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
                customHandlerId: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }, {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }>, "many">>;
            onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
                bankId: z.ZodString;
                allowNegative: z.ZodOptional<z.ZodBoolean>;
                blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }, {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }>, "many">>;
        }, "strict", z.ZodTypeAny, {
            onExchange?: {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }[] | undefined;
            onReplenish?: {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }[] | undefined;
            onConsumption?: {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }[] | undefined;
        }, {
            onExchange?: {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }[] | undefined;
            onReplenish?: {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }[] | undefined;
            onConsumption?: {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }[] | undefined;
        }>>;
        sceneNodes: z.ZodOptional<z.ZodArray<z.ZodObject<{
            id: z.ZodString;
            materialId: z.ZodString;
            label: z.ZodOptional<z.ZodString>;
            transform: z.ZodOptional<z.ZodObject<{
                position: z.ZodObject<{
                    x: z.ZodNumber;
                    y: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    x: number;
                    y: number;
                }, {
                    x: number;
                    y: number;
                }>;
                rotation: z.ZodOptional<z.ZodNumber>;
                scale: z.ZodOptional<z.ZodObject<{
                    x: z.ZodNumber;
                    y: z.ZodNumber;
                }, "strip", z.ZodTypeAny, {
                    x: number;
                    y: number;
                }, {
                    x: number;
                    y: number;
                }>>;
                opacity: z.ZodOptional<z.ZodNumber>;
            }, "strip", z.ZodTypeAny, {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            }, {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            }>>;
            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            materialId: string;
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
            transform?: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            } | undefined;
        }, {
            id: string;
            materialId: string;
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
            transform?: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            } | undefined;
        }>, "many">>;
    }, "strict", z.ZodTypeAny, {
        version: 1;
        tokenTypes: {
            label: string;
            id: string;
            materialId: string;
            workspace: "golden-beads" | "stamp-game";
            visual: {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            } | {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            } | {
                value: 1 | 10 | 100;
                kind: "stamp";
            } | {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            };
            quantityPerToken?: number | undefined;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        banks: {
            label: string;
            id: string;
            materialId: string;
            scope: "lesson" | "segment";
            accepts: string[];
            initialQuantity: number | Record<string, number>;
            metadata?: Record<string, unknown> | undefined;
            segmentId?: string | undefined;
            depletion?: "static" | "consume" | "replenish" | undefined;
            layout?: {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            } | undefined;
        }[];
        defaultRules?: {
            onExchange?: {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }[] | undefined;
            onReplenish?: {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }[] | undefined;
            onConsumption?: {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }[] | undefined;
        } | undefined;
        sceneNodes?: {
            id: string;
            materialId: string;
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
            transform?: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            } | undefined;
        }[] | undefined;
    }, {
        version: 1;
        tokenTypes: {
            label: string;
            id: string;
            materialId: string;
            workspace: "golden-beads" | "stamp-game";
            visual: {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            } | {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            } | {
                value: 1 | 10 | 100;
                kind: "stamp";
            } | {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            };
            quantityPerToken?: number | undefined;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        banks: {
            label: string;
            id: string;
            materialId: string;
            scope: "lesson" | "segment";
            accepts: string[];
            initialQuantity: number | Record<string, number>;
            metadata?: Record<string, unknown> | undefined;
            segmentId?: string | undefined;
            depletion?: "static" | "consume" | "replenish" | undefined;
            layout?: {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            } | undefined;
        }[];
        defaultRules?: {
            onExchange?: {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }[] | undefined;
            onReplenish?: {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }[] | undefined;
            onConsumption?: {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }[] | undefined;
        } | undefined;
        sceneNodes?: {
            id: string;
            materialId: string;
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
            transform?: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            } | undefined;
        }[] | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    id: string;
    title: string;
    primaryMaterialId: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    topicId: string;
    estimatedDurationMinutes: number;
    segments: ({
        type: "presentation";
        id: string;
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        primaryMaterialId?: string | undefined;
        scriptId?: string | undefined;
        script?: {
            id: string;
            title: string;
            actions: ({
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            } | {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            })[];
            summary?: string | undefined;
        } | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    } | {
        type: "guided";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        steps: {
            id: string;
            prompt: string;
            expectation: string;
            successCheck: string;
            nudge: string;
            evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            explanation?: string | undefined;
        }[];
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    } | {
        type: "practice";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        questions: {
            id: string;
            multiplier: number;
            prompt: string;
            multiplicand: number;
            correctAnswer: number;
            difficulty: "easy" | "medium" | "hard";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        passCriteria: {
            type: "threshold";
            firstCorrect: number;
            totalCorrect: number;
            maxMisses: number;
        };
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    })[];
    summary?: string | undefined;
    focusSkills?: string[] | undefined;
    materialInventory?: {
        version: 1;
        tokenTypes: {
            label: string;
            id: string;
            materialId: string;
            workspace: "golden-beads" | "stamp-game";
            visual: {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            } | {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            } | {
                value: 1 | 10 | 100;
                kind: "stamp";
            } | {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            };
            quantityPerToken?: number | undefined;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        banks: {
            label: string;
            id: string;
            materialId: string;
            scope: "lesson" | "segment";
            accepts: string[];
            initialQuantity: number | Record<string, number>;
            metadata?: Record<string, unknown> | undefined;
            segmentId?: string | undefined;
            depletion?: "static" | "consume" | "replenish" | undefined;
            layout?: {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            } | undefined;
        }[];
        defaultRules?: {
            onExchange?: {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }[] | undefined;
            onReplenish?: {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }[] | undefined;
            onConsumption?: {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }[] | undefined;
        } | undefined;
        sceneNodes?: {
            id: string;
            materialId: string;
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
            transform?: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            } | undefined;
        }[] | undefined;
    } | undefined;
}, {
    id: string;
    title: string;
    primaryMaterialId: string;
    materials: {
        materialId: string;
        purpose: string;
        optional?: boolean | undefined;
    }[];
    topicId: string;
    estimatedDurationMinutes: number;
    segments: ({
        type: "presentation";
        id: string;
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        primaryMaterialId?: string | undefined;
        scriptId?: string | undefined;
        script?: {
            id: string;
            title: string;
            actions: ({
                type: "narrate";
                id: string;
                text: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "showCard";
                id: string;
                position: "multiplicand-stack" | "multiplier" | "paper";
                card: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "placeBeads";
                id: string;
                quantity: number;
                place: "unit" | "ten" | "hundred" | "thousand";
                tray: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "duplicateTray";
                id: string;
                count: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchange";
                id: string;
                quantity: number;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                remainder: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "moveBeadsBelowLine";
                id: string;
                place: "unit" | "ten" | "hundred";
                totalCount: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "groupForExchange";
                id: string;
                place: "unit" | "ten" | "hundred";
                remainder: number;
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "exchangeBeads";
                id: string;
                from: "unit" | "ten" | "hundred";
                to: "ten" | "hundred" | "thousand";
                groupsOfTen: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: number;
                type: "placeResultCard";
                id: string;
                place: "unit" | "ten" | "hundred" | "thousand";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "stackPlaceValues";
                id: string;
                order: ("unit" | "ten" | "hundred" | "thousand")[];
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "writeResult";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                type: "highlight";
                id: string;
                target: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                text?: string | undefined;
            } | {
                type: "showStamp";
                id: string;
                stamp: "1" | "10" | "100";
                columns: number;
                rows: number;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            } | {
                value: string;
                type: "countTotal";
                id: string;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
            })[];
            summary?: string | undefined;
        } | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    } | {
        type: "guided";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        steps: {
            id: string;
            prompt: string;
            expectation: string;
            successCheck: string;
            nudge: string;
            evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
            durationMs?: number | undefined;
            explanation?: string | undefined;
        }[];
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    } | {
        type: "practice";
        id: string;
        workspace: "golden-beads" | "stamp-game";
        title: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        skills: string[];
        questions: {
            id: string;
            multiplier: number;
            prompt: string;
            multiplicand: number;
            correctAnswer: number;
            difficulty: "easy" | "medium" | "hard";
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        passCriteria: {
            type: "threshold";
            firstCorrect: number;
            totalCorrect: number;
            maxMisses: number;
        };
        description?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        representation?: "concrete" | "abstract" | undefined;
        materialBankId?: string | undefined;
        timeline?: {
            version: 1;
            steps: {
                id: string;
                keyframes: {
                    nodeId: string;
                    keyframes: {
                        transform: {
                            position: {
                                x: number;
                                y: number;
                            };
                            rotation?: number | undefined;
                            scale?: {
                                x: number;
                                y: number;
                            } | undefined;
                            opacity?: number | undefined;
                        };
                        timeMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        easing?: string | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                }[];
                actor: "guide" | "student";
                durationMs: number;
                metadata?: Record<string, unknown> | undefined;
                title?: string | undefined;
                caption?: string | undefined;
                interactions?: {
                    kind: "custom" | "drop-zone" | "input";
                    id: string;
                    props?: Record<string, unknown> | undefined;
                    targetNodeId?: string | undefined;
                }[] | undefined;
            }[];
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
        } | undefined;
    })[];
    summary?: string | undefined;
    focusSkills?: string[] | undefined;
    materialInventory?: {
        version: 1;
        tokenTypes: {
            label: string;
            id: string;
            materialId: string;
            workspace: "golden-beads" | "stamp-game";
            visual: {
                kind: "bead";
                place: "unit" | "ten" | "hundred" | "thousand";
            } | {
                value: number;
                kind: "card";
                size: "sm" | "md" | "lg";
            } | {
                value: 1 | 10 | 100;
                kind: "stamp";
            } | {
                kind: "custom";
                componentId: string;
                props?: Record<string, unknown> | undefined;
            };
            quantityPerToken?: number | undefined;
            authoring?: {
                metadata?: Record<string, unknown> | undefined;
                notes?: string | undefined;
                label?: string | undefined;
                description?: string | undefined;
                tags?: string[] | undefined;
            } | undefined;
        }[];
        banks: {
            label: string;
            id: string;
            materialId: string;
            scope: "lesson" | "segment";
            accepts: string[];
            initialQuantity: number | Record<string, number>;
            metadata?: Record<string, unknown> | undefined;
            segmentId?: string | undefined;
            depletion?: "static" | "consume" | "replenish" | undefined;
            layout?: {
                position: {
                    x: number;
                    y: number;
                };
                width?: number | undefined;
                height?: number | undefined;
                align?: "start" | "center" | "end" | undefined;
            } | undefined;
        }[];
        defaultRules?: {
            onExchange?: {
                triggerTokenType: string;
                produces: {
                    tokenType: string;
                    quantity: number;
                }[];
                consumes: {
                    tokenType: string;
                    quantity: number;
                }[];
            }[] | undefined;
            onReplenish?: {
                whenBankId: string;
                method: "custom" | "reset-on-exit" | "reset-on-undo";
                customHandlerId?: string | undefined;
            }[] | undefined;
            onConsumption?: {
                bankId: string;
                allowNegative?: boolean | undefined;
                blockWhenEmpty?: boolean | undefined;
            }[] | undefined;
        } | undefined;
        sceneNodes?: {
            id: string;
            materialId: string;
            metadata?: Record<string, unknown> | undefined;
            label?: string | undefined;
            transform?: {
                position: {
                    x: number;
                    y: number;
                };
                rotation?: number | undefined;
                scale?: {
                    x: number;
                    y: number;
                } | undefined;
                opacity?: number | undefined;
            } | undefined;
        }[] | undefined;
    } | undefined;
}>;
type Lesson = z.infer<typeof LessonSchema>;
declare const LessonDocumentMetaSchema: z.ZodObject<{
    createdAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
    updatedAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
    author: z.ZodOptional<z.ZodString>;
    notes: z.ZodOptional<z.ZodString>;
    metadata: z.ZodOptional<z.ZodObject<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">>>;
    scenario: z.ZodOptional<z.ZodObject<{
        kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
        seed: z.ZodNumber;
        snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }, {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    metadata?: z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    createdAt?: string | number | undefined;
    updatedAt?: string | number | undefined;
    notes?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    author?: string | undefined;
}, {
    metadata?: z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    createdAt?: string | number | undefined;
    updatedAt?: string | number | undefined;
    notes?: string | undefined;
    scenario?: {
        kind: "golden-beads" | "stamp-game";
        seed: number;
        notes?: string | undefined;
        snapshot?: Record<string, unknown> | undefined;
    } | undefined;
    author?: string | undefined;
}>;
type LessonDocumentMeta = z.infer<typeof LessonDocumentMetaSchema>;
declare const LessonDocumentSchema: z.ZodObject<{
    version: z.ZodLiteral<"1.0">;
    lesson: z.ZodObject<{
        id: z.ZodString;
        topicId: z.ZodString;
        title: z.ZodString;
        summary: z.ZodOptional<z.ZodString>;
        focusSkills: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        estimatedDurationMinutes: z.ZodNumber;
        primaryMaterialId: z.ZodString;
        segments: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"presentation">;
            representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
            primaryMaterialId: z.ZodOptional<z.ZodString>;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            skills: z.ZodArray<z.ZodString, "many">;
            scriptId: z.ZodOptional<z.ZodString>;
            script: z.ZodOptional<z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"narrate">;
                    text: z.ZodString;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"showCard">;
                    card: z.ZodString;
                    position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"placeBeads">;
                    place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
                    quantity: z.ZodNumber;
                    tray: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"duplicateTray">;
                    count: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"exchange">;
                    from: z.ZodEnum<["unit", "ten", "hundred"]>;
                    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                    quantity: z.ZodNumber;
                    remainder: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"moveBeadsBelowLine">;
                    place: z.ZodEnum<["unit", "ten", "hundred"]>;
                    totalCount: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"groupForExchange">;
                    place: z.ZodEnum<["unit", "ten", "hundred"]>;
                    groupsOfTen: z.ZodNumber;
                    remainder: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"exchangeBeads">;
                    from: z.ZodEnum<["unit", "ten", "hundred"]>;
                    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                    groupsOfTen: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"placeResultCard">;
                    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                    value: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"stackPlaceValues">;
                    order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"writeResult">;
                    value: z.ZodString;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"highlight">;
                    target: z.ZodString;
                    text: z.ZodOptional<z.ZodString>;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                }, {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"showStamp">;
                    stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
                    columns: z.ZodNumber;
                    rows: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"countTotal">;
                    value: z.ZodString;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>]>, "many">;
                summary: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            }, {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            }>>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
            materialBankId: z.ZodOptional<z.ZodString>;
            timeline: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                label: z.ZodOptional<z.ZodString>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodOptional<z.ZodString>;
                    caption: z.ZodOptional<z.ZodString>;
                    actor: z.ZodEnum<["guide", "student"]>;
                    durationMs: z.ZodNumber;
                    keyframes: z.ZodArray<z.ZodObject<{
                        nodeId: z.ZodString;
                        keyframes: z.ZodArray<z.ZodObject<{
                            timeMs: z.ZodNumber;
                            transform: z.ZodObject<{
                                position: z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>;
                                rotation: z.ZodOptional<z.ZodNumber>;
                                scale: z.ZodOptional<z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>>;
                                opacity: z.ZodOptional<z.ZodNumber>;
                            }, "strict", z.ZodTypeAny, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }>;
                            easing: z.ZodOptional<z.ZodString>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }>, "many">;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }>, "many">;
                    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                        targetNodeId: z.ZodOptional<z.ZodString>;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }>, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }, {
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"guided">;
            representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            skills: z.ZodArray<z.ZodString, "many">;
            workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
            steps: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                prompt: z.ZodString;
                expectation: z.ZodString;
                successCheck: z.ZodString;
                nudge: z.ZodString;
                explanation: z.ZodOptional<z.ZodString>;
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }, {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }>, "many">;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
            materialBankId: z.ZodOptional<z.ZodString>;
            timeline: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                label: z.ZodOptional<z.ZodString>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodOptional<z.ZodString>;
                    caption: z.ZodOptional<z.ZodString>;
                    actor: z.ZodEnum<["guide", "student"]>;
                    durationMs: z.ZodNumber;
                    keyframes: z.ZodArray<z.ZodObject<{
                        nodeId: z.ZodString;
                        keyframes: z.ZodArray<z.ZodObject<{
                            timeMs: z.ZodNumber;
                            transform: z.ZodObject<{
                                position: z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>;
                                rotation: z.ZodOptional<z.ZodNumber>;
                                scale: z.ZodOptional<z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>>;
                                opacity: z.ZodOptional<z.ZodNumber>;
                            }, "strict", z.ZodTypeAny, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }>;
                            easing: z.ZodOptional<z.ZodString>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }>, "many">;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }>, "many">;
                    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                        targetNodeId: z.ZodOptional<z.ZodString>;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }>, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }, {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"practice">;
            representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            skills: z.ZodArray<z.ZodString, "many">;
            workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
            questions: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                multiplicand: z.ZodNumber;
                multiplier: z.ZodNumber;
                prompt: z.ZodString;
                correctAnswer: z.ZodNumber;
                difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }, {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }>, "many">;
            passCriteria: z.ZodObject<{
                type: z.ZodLiteral<"threshold">;
                firstCorrect: z.ZodNumber;
                totalCorrect: z.ZodNumber;
                maxMisses: z.ZodNumber;
            }, "strict", z.ZodTypeAny, {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            }, {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            }>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
            materialBankId: z.ZodOptional<z.ZodString>;
            timeline: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                label: z.ZodOptional<z.ZodString>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodOptional<z.ZodString>;
                    caption: z.ZodOptional<z.ZodString>;
                    actor: z.ZodEnum<["guide", "student"]>;
                    durationMs: z.ZodNumber;
                    keyframes: z.ZodArray<z.ZodObject<{
                        nodeId: z.ZodString;
                        keyframes: z.ZodArray<z.ZodObject<{
                            timeMs: z.ZodNumber;
                            transform: z.ZodObject<{
                                position: z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>;
                                rotation: z.ZodOptional<z.ZodNumber>;
                                scale: z.ZodOptional<z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>>;
                                opacity: z.ZodOptional<z.ZodNumber>;
                            }, "strict", z.ZodTypeAny, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }>;
                            easing: z.ZodOptional<z.ZodString>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }>, "many">;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }>, "many">;
                    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                        targetNodeId: z.ZodOptional<z.ZodString>;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }>, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }, {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }>]>, "many">;
        materials: z.ZodArray<z.ZodObject<{
            materialId: z.ZodString;
            purpose: z.ZodString;
            optional: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }>, "many">;
        materialInventory: z.ZodOptional<z.ZodObject<{
            version: z.ZodLiteral<1>;
            tokenTypes: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                materialId: z.ZodString;
                workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                label: z.ZodString;
                visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
                    kind: z.ZodLiteral<"bead">;
                    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                }, "strip", z.ZodTypeAny, {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                }, {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                }>, z.ZodObject<{
                    kind: z.ZodLiteral<"card">;
                    value: z.ZodNumber;
                    size: z.ZodEnum<["sm", "md", "lg"]>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                }, {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                }>, z.ZodObject<{
                    kind: z.ZodLiteral<"stamp">;
                    value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
                }, "strip", z.ZodTypeAny, {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                }, {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                }>, z.ZodObject<{
                    kind: z.ZodLiteral<"custom">;
                    componentId: z.ZodString;
                    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strip", z.ZodTypeAny, {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                }, {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                }>]>;
                quantityPerToken: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }, {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }>, "many">;
            banks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                label: z.ZodString;
                scope: z.ZodEnum<["lesson", "segment"]>;
                segmentId: z.ZodOptional<z.ZodString>;
                materialId: z.ZodString;
                accepts: z.ZodArray<z.ZodString, "many">;
                initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
                depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
                layout: z.ZodOptional<z.ZodObject<{
                    position: z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>;
                    width: z.ZodOptional<z.ZodNumber>;
                    height: z.ZodOptional<z.ZodNumber>;
                    align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
                }, "strict", z.ZodTypeAny, {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                }, {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                }>>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }, {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }>, "many">;
            defaultRules: z.ZodOptional<z.ZodObject<{
                onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    triggerTokenType: z.ZodString;
                    produces: z.ZodArray<z.ZodObject<{
                        tokenType: z.ZodString;
                        quantity: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        tokenType: string;
                        quantity: number;
                    }, {
                        tokenType: string;
                        quantity: number;
                    }>, "many">;
                    consumes: z.ZodArray<z.ZodObject<{
                        tokenType: z.ZodString;
                        quantity: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        tokenType: string;
                        quantity: number;
                    }, {
                        tokenType: string;
                        quantity: number;
                    }>, "many">;
                }, "strict", z.ZodTypeAny, {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }, {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }>, "many">>;
                onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    whenBankId: z.ZodString;
                    method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
                    customHandlerId: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }, {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }>, "many">>;
                onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    bankId: z.ZodString;
                    allowNegative: z.ZodOptional<z.ZodBoolean>;
                    blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }, {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }>, "many">>;
            }, "strict", z.ZodTypeAny, {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            }, {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            }>>;
            sceneNodes: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                materialId: z.ZodString;
                label: z.ZodOptional<z.ZodString>;
                transform: z.ZodOptional<z.ZodObject<{
                    position: z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>;
                    rotation: z.ZodOptional<z.ZodNumber>;
                    scale: z.ZodOptional<z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>>;
                    opacity: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                }, {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                }>>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }, {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }>, "many">>;
        }, "strict", z.ZodTypeAny, {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        }, {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    }, {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    }>;
    meta: z.ZodOptional<z.ZodObject<{
        createdAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
        updatedAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
        author: z.ZodOptional<z.ZodString>;
        notes: z.ZodOptional<z.ZodString>;
        metadata: z.ZodOptional<z.ZodObject<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, "strip", z.ZodUnknown, z.objectOutputType<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, z.ZodUnknown, "strip">, z.objectInputType<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, z.ZodUnknown, "strip">>>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        metadata?: z.objectOutputType<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, z.ZodUnknown, "strip"> | undefined;
        createdAt?: string | number | undefined;
        updatedAt?: string | number | undefined;
        notes?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        author?: string | undefined;
    }, {
        metadata?: z.objectInputType<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, z.ZodUnknown, "strip"> | undefined;
        createdAt?: string | number | undefined;
        updatedAt?: string | number | undefined;
        notes?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        author?: string | undefined;
    }>>;
}, "strict", z.ZodTypeAny, {
    lesson: {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    };
    version: "1.0";
    meta?: {
        metadata?: z.objectOutputType<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, z.ZodUnknown, "strip"> | undefined;
        createdAt?: string | number | undefined;
        updatedAt?: string | number | undefined;
        notes?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        author?: string | undefined;
    } | undefined;
}, {
    lesson: {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    };
    version: "1.0";
    meta?: {
        metadata?: z.objectInputType<{
            source: z.ZodOptional<z.ZodString>;
            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            notes: z.ZodOptional<z.ZodString>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, z.ZodUnknown, "strip"> | undefined;
        createdAt?: string | number | undefined;
        updatedAt?: string | number | undefined;
        notes?: string | undefined;
        scenario?: {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        } | undefined;
        author?: string | undefined;
    } | undefined;
}>;
type LessonDocument = z.infer<typeof LessonDocumentSchema>;
declare const TopicSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    overview: z.ZodString;
    focusSkills: z.ZodArray<z.ZodString, "many">;
    estimatedDurationMinutes: z.ZodNumber;
    lessons: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        topicId: z.ZodString;
        title: z.ZodString;
        summary: z.ZodOptional<z.ZodString>;
        focusSkills: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        estimatedDurationMinutes: z.ZodNumber;
        primaryMaterialId: z.ZodString;
        segments: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"presentation">;
            representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
            primaryMaterialId: z.ZodOptional<z.ZodString>;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            skills: z.ZodArray<z.ZodString, "many">;
            scriptId: z.ZodOptional<z.ZodString>;
            script: z.ZodOptional<z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"narrate">;
                    text: z.ZodString;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"showCard">;
                    card: z.ZodString;
                    position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"placeBeads">;
                    place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
                    quantity: z.ZodNumber;
                    tray: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"duplicateTray">;
                    count: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"exchange">;
                    from: z.ZodEnum<["unit", "ten", "hundred"]>;
                    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                    quantity: z.ZodNumber;
                    remainder: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"moveBeadsBelowLine">;
                    place: z.ZodEnum<["unit", "ten", "hundred"]>;
                    totalCount: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"groupForExchange">;
                    place: z.ZodEnum<["unit", "ten", "hundred"]>;
                    groupsOfTen: z.ZodNumber;
                    remainder: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"exchangeBeads">;
                    from: z.ZodEnum<["unit", "ten", "hundred"]>;
                    to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                    groupsOfTen: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"placeResultCard">;
                    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                    value: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"stackPlaceValues">;
                    order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"writeResult">;
                    value: z.ZodString;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"highlight">;
                    target: z.ZodString;
                    text: z.ZodOptional<z.ZodString>;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                }, {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"showStamp">;
                    stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
                    columns: z.ZodNumber;
                    rows: z.ZodNumber;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>, z.ZodObject<{
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    type: z.ZodLiteral<"countTotal">;
                    value: z.ZodString;
                } & {
                    id: z.ZodString;
                }, "strict", z.ZodTypeAny, {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }, {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                }>]>, "many">;
                summary: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            }, {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            }>>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
            materialBankId: z.ZodOptional<z.ZodString>;
            timeline: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                label: z.ZodOptional<z.ZodString>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodOptional<z.ZodString>;
                    caption: z.ZodOptional<z.ZodString>;
                    actor: z.ZodEnum<["guide", "student"]>;
                    durationMs: z.ZodNumber;
                    keyframes: z.ZodArray<z.ZodObject<{
                        nodeId: z.ZodString;
                        keyframes: z.ZodArray<z.ZodObject<{
                            timeMs: z.ZodNumber;
                            transform: z.ZodObject<{
                                position: z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>;
                                rotation: z.ZodOptional<z.ZodNumber>;
                                scale: z.ZodOptional<z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>>;
                                opacity: z.ZodOptional<z.ZodNumber>;
                            }, "strict", z.ZodTypeAny, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }>;
                            easing: z.ZodOptional<z.ZodString>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }>, "many">;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }>, "many">;
                    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                        targetNodeId: z.ZodOptional<z.ZodString>;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }>, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }, {
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"guided">;
            representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            skills: z.ZodArray<z.ZodString, "many">;
            workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
            steps: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                prompt: z.ZodString;
                expectation: z.ZodString;
                successCheck: z.ZodString;
                nudge: z.ZodString;
                explanation: z.ZodOptional<z.ZodString>;
                durationMs: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            } & {
                evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }, {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }>, "many">;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
            materialBankId: z.ZodOptional<z.ZodString>;
            timeline: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                label: z.ZodOptional<z.ZodString>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodOptional<z.ZodString>;
                    caption: z.ZodOptional<z.ZodString>;
                    actor: z.ZodEnum<["guide", "student"]>;
                    durationMs: z.ZodNumber;
                    keyframes: z.ZodArray<z.ZodObject<{
                        nodeId: z.ZodString;
                        keyframes: z.ZodArray<z.ZodObject<{
                            timeMs: z.ZodNumber;
                            transform: z.ZodObject<{
                                position: z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>;
                                rotation: z.ZodOptional<z.ZodNumber>;
                                scale: z.ZodOptional<z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>>;
                                opacity: z.ZodOptional<z.ZodNumber>;
                            }, "strict", z.ZodTypeAny, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }>;
                            easing: z.ZodOptional<z.ZodString>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }>, "many">;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }>, "many">;
                    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                        targetNodeId: z.ZodOptional<z.ZodString>;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }>, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }, {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }>, z.ZodObject<{
            id: z.ZodString;
            title: z.ZodString;
            description: z.ZodOptional<z.ZodString>;
            type: z.ZodLiteral<"practice">;
            representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            skills: z.ZodArray<z.ZodString, "many">;
            workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
            questions: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                multiplicand: z.ZodNumber;
                multiplier: z.ZodNumber;
                prompt: z.ZodString;
                correctAnswer: z.ZodNumber;
                difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }, {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }>, "many">;
            passCriteria: z.ZodObject<{
                type: z.ZodLiteral<"threshold">;
                firstCorrect: z.ZodNumber;
                totalCorrect: z.ZodNumber;
                maxMisses: z.ZodNumber;
            }, "strict", z.ZodTypeAny, {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            }, {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            }>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
            materialBankId: z.ZodOptional<z.ZodString>;
            timeline: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                label: z.ZodOptional<z.ZodString>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodOptional<z.ZodString>;
                    caption: z.ZodOptional<z.ZodString>;
                    actor: z.ZodEnum<["guide", "student"]>;
                    durationMs: z.ZodNumber;
                    keyframes: z.ZodArray<z.ZodObject<{
                        nodeId: z.ZodString;
                        keyframes: z.ZodArray<z.ZodObject<{
                            timeMs: z.ZodNumber;
                            transform: z.ZodObject<{
                                position: z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>;
                                rotation: z.ZodOptional<z.ZodNumber>;
                                scale: z.ZodOptional<z.ZodObject<{
                                    x: z.ZodNumber;
                                    y: z.ZodNumber;
                                }, "strip", z.ZodTypeAny, {
                                    x: number;
                                    y: number;
                                }, {
                                    x: number;
                                    y: number;
                                }>>;
                                opacity: z.ZodOptional<z.ZodNumber>;
                            }, "strict", z.ZodTypeAny, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }, {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            }>;
                            easing: z.ZodOptional<z.ZodString>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }, {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }>, "many">;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }, {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }>, "many">;
                    interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                        targetNodeId: z.ZodOptional<z.ZodString>;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }, {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }>, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }, {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }>, "many">;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }, {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }, {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        }>]>, "many">;
        materials: z.ZodArray<z.ZodObject<{
            materialId: z.ZodString;
            purpose: z.ZodString;
            optional: z.ZodOptional<z.ZodBoolean>;
        }, "strict", z.ZodTypeAny, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }, {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }>, "many">;
        materialInventory: z.ZodOptional<z.ZodObject<{
            version: z.ZodLiteral<1>;
            tokenTypes: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                materialId: z.ZodString;
                workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                label: z.ZodString;
                visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
                    kind: z.ZodLiteral<"bead">;
                    place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                }, "strip", z.ZodTypeAny, {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                }, {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                }>, z.ZodObject<{
                    kind: z.ZodLiteral<"card">;
                    value: z.ZodNumber;
                    size: z.ZodEnum<["sm", "md", "lg"]>;
                }, "strip", z.ZodTypeAny, {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                }, {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                }>, z.ZodObject<{
                    kind: z.ZodLiteral<"stamp">;
                    value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
                }, "strip", z.ZodTypeAny, {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                }, {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                }>, z.ZodObject<{
                    kind: z.ZodLiteral<"custom">;
                    componentId: z.ZodString;
                    props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strip", z.ZodTypeAny, {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                }, {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                }>]>;
                quantityPerToken: z.ZodOptional<z.ZodNumber>;
                authoring: z.ZodOptional<z.ZodObject<{
                    label: z.ZodOptional<z.ZodString>;
                    description: z.ZodOptional<z.ZodString>;
                    notes: z.ZodOptional<z.ZodString>;
                    tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }, {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }, {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }>, "many">;
            banks: z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                label: z.ZodString;
                scope: z.ZodEnum<["lesson", "segment"]>;
                segmentId: z.ZodOptional<z.ZodString>;
                materialId: z.ZodString;
                accepts: z.ZodArray<z.ZodString, "many">;
                initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
                depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
                layout: z.ZodOptional<z.ZodObject<{
                    position: z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>;
                    width: z.ZodOptional<z.ZodNumber>;
                    height: z.ZodOptional<z.ZodNumber>;
                    align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
                }, "strict", z.ZodTypeAny, {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                }, {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                }>>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }, {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }>, "many">;
            defaultRules: z.ZodOptional<z.ZodObject<{
                onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    triggerTokenType: z.ZodString;
                    produces: z.ZodArray<z.ZodObject<{
                        tokenType: z.ZodString;
                        quantity: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        tokenType: string;
                        quantity: number;
                    }, {
                        tokenType: string;
                        quantity: number;
                    }>, "many">;
                    consumes: z.ZodArray<z.ZodObject<{
                        tokenType: z.ZodString;
                        quantity: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        tokenType: string;
                        quantity: number;
                    }, {
                        tokenType: string;
                        quantity: number;
                    }>, "many">;
                }, "strict", z.ZodTypeAny, {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }, {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }>, "many">>;
                onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    whenBankId: z.ZodString;
                    method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
                    customHandlerId: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }, {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }>, "many">>;
                onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    bankId: z.ZodString;
                    allowNegative: z.ZodOptional<z.ZodBoolean>;
                    blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }, {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }>, "many">>;
            }, "strict", z.ZodTypeAny, {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            }, {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            }>>;
            sceneNodes: z.ZodOptional<z.ZodArray<z.ZodObject<{
                id: z.ZodString;
                materialId: z.ZodString;
                label: z.ZodOptional<z.ZodString>;
                transform: z.ZodOptional<z.ZodObject<{
                    position: z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>;
                    rotation: z.ZodOptional<z.ZodNumber>;
                    scale: z.ZodOptional<z.ZodObject<{
                        x: z.ZodNumber;
                        y: z.ZodNumber;
                    }, "strip", z.ZodTypeAny, {
                        x: number;
                        y: number;
                    }, {
                        x: number;
                        y: number;
                    }>>;
                    opacity: z.ZodOptional<z.ZodNumber>;
                }, "strip", z.ZodTypeAny, {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                }, {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                }>>;
                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            }, "strict", z.ZodTypeAny, {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }, {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }>, "many">>;
        }, "strict", z.ZodTypeAny, {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        }, {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    }, {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    id: string;
    title: string;
    focusSkills: string[];
    estimatedDurationMinutes: number;
    overview: string;
    lessons: {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    }[];
}, {
    id: string;
    title: string;
    focusSkills: string[];
    estimatedDurationMinutes: number;
    overview: string;
    lessons: {
        id: string;
        title: string;
        primaryMaterialId: string;
        materials: {
            materialId: string;
            purpose: string;
            optional?: boolean | undefined;
        }[];
        topicId: string;
        estimatedDurationMinutes: number;
        segments: ({
            type: "presentation";
            id: string;
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            primaryMaterialId?: string | undefined;
            scriptId?: string | undefined;
            script?: {
                id: string;
                title: string;
                actions: ({
                    type: "narrate";
                    id: string;
                    text: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "showCard";
                    id: string;
                    position: "multiplicand-stack" | "multiplier" | "paper";
                    card: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "placeBeads";
                    id: string;
                    quantity: number;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    tray: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "duplicateTray";
                    id: string;
                    count: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchange";
                    id: string;
                    quantity: number;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    remainder: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "moveBeadsBelowLine";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    totalCount: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "groupForExchange";
                    id: string;
                    place: "unit" | "ten" | "hundred";
                    remainder: number;
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "exchangeBeads";
                    id: string;
                    from: "unit" | "ten" | "hundred";
                    to: "ten" | "hundred" | "thousand";
                    groupsOfTen: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: number;
                    type: "placeResultCard";
                    id: string;
                    place: "unit" | "ten" | "hundred" | "thousand";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "stackPlaceValues";
                    id: string;
                    order: ("unit" | "ten" | "hundred" | "thousand")[];
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "writeResult";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    type: "highlight";
                    id: string;
                    target: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    text?: string | undefined;
                } | {
                    type: "showStamp";
                    id: string;
                    stamp: "1" | "10" | "100";
                    columns: number;
                    rows: number;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                } | {
                    value: string;
                    type: "countTotal";
                    id: string;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                })[];
                summary?: string | undefined;
            } | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "guided";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            steps: {
                id: string;
                prompt: string;
                expectation: string;
                successCheck: string;
                nudge: string;
                evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
                durationMs?: number | undefined;
                explanation?: string | undefined;
            }[];
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        } | {
            type: "practice";
            id: string;
            workspace: "golden-beads" | "stamp-game";
            title: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            skills: string[];
            questions: {
                id: string;
                multiplier: number;
                prompt: string;
                multiplicand: number;
                correctAnswer: number;
                difficulty: "easy" | "medium" | "hard";
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            passCriteria: {
                type: "threshold";
                firstCorrect: number;
                totalCorrect: number;
                maxMisses: number;
            };
            description?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            representation?: "concrete" | "abstract" | undefined;
            materialBankId?: string | undefined;
            timeline?: {
                version: 1;
                steps: {
                    id: string;
                    keyframes: {
                        nodeId: string;
                        keyframes: {
                            transform: {
                                position: {
                                    x: number;
                                    y: number;
                                };
                                rotation?: number | undefined;
                                scale?: {
                                    x: number;
                                    y: number;
                                } | undefined;
                                opacity?: number | undefined;
                            };
                            timeMs: number;
                            metadata?: Record<string, unknown> | undefined;
                            easing?: string | undefined;
                        }[];
                        metadata?: Record<string, unknown> | undefined;
                    }[];
                    actor: "guide" | "student";
                    durationMs: number;
                    metadata?: Record<string, unknown> | undefined;
                    title?: string | undefined;
                    caption?: string | undefined;
                    interactions?: {
                        kind: "custom" | "drop-zone" | "input";
                        id: string;
                        props?: Record<string, unknown> | undefined;
                        targetNodeId?: string | undefined;
                    }[] | undefined;
                }[];
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
            } | undefined;
        })[];
        summary?: string | undefined;
        focusSkills?: string[] | undefined;
        materialInventory?: {
            version: 1;
            tokenTypes: {
                label: string;
                id: string;
                materialId: string;
                workspace: "golden-beads" | "stamp-game";
                visual: {
                    kind: "bead";
                    place: "unit" | "ten" | "hundred" | "thousand";
                } | {
                    value: number;
                    kind: "card";
                    size: "sm" | "md" | "lg";
                } | {
                    value: 1 | 10 | 100;
                    kind: "stamp";
                } | {
                    kind: "custom";
                    componentId: string;
                    props?: Record<string, unknown> | undefined;
                };
                quantityPerToken?: number | undefined;
                authoring?: {
                    metadata?: Record<string, unknown> | undefined;
                    notes?: string | undefined;
                    label?: string | undefined;
                    description?: string | undefined;
                    tags?: string[] | undefined;
                } | undefined;
            }[];
            banks: {
                label: string;
                id: string;
                materialId: string;
                scope: "lesson" | "segment";
                accepts: string[];
                initialQuantity: number | Record<string, number>;
                metadata?: Record<string, unknown> | undefined;
                segmentId?: string | undefined;
                depletion?: "static" | "consume" | "replenish" | undefined;
                layout?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    width?: number | undefined;
                    height?: number | undefined;
                    align?: "start" | "center" | "end" | undefined;
                } | undefined;
            }[];
            defaultRules?: {
                onExchange?: {
                    triggerTokenType: string;
                    produces: {
                        tokenType: string;
                        quantity: number;
                    }[];
                    consumes: {
                        tokenType: string;
                        quantity: number;
                    }[];
                }[] | undefined;
                onReplenish?: {
                    whenBankId: string;
                    method: "custom" | "reset-on-exit" | "reset-on-undo";
                    customHandlerId?: string | undefined;
                }[] | undefined;
                onConsumption?: {
                    bankId: string;
                    allowNegative?: boolean | undefined;
                    blockWhenEmpty?: boolean | undefined;
                }[] | undefined;
            } | undefined;
            sceneNodes?: {
                id: string;
                materialId: string;
                metadata?: Record<string, unknown> | undefined;
                label?: string | undefined;
                transform?: {
                    position: {
                        x: number;
                        y: number;
                    };
                    rotation?: number | undefined;
                    scale?: {
                        x: number;
                        y: number;
                    } | undefined;
                    opacity?: number | undefined;
                } | undefined;
            }[] | undefined;
        } | undefined;
    }[];
}>;
type Topic = z.infer<typeof TopicSchema>;
declare const TaskCategorySchema: z.ZodEnum<["tutorial", "guided-practice", "practice-question", "independent-question"]>;
type TaskCategory = z.infer<typeof TaskCategorySchema>;
declare const LessonTaskSchema: z.ZodObject<{
    id: z.ZodString;
    title: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    category: z.ZodEnum<["tutorial", "guided-practice", "practice-question", "independent-question"]>;
    segmentId: z.ZodString;
    stepId: z.ZodOptional<z.ZodString>;
    questionId: z.ZodOptional<z.ZodString>;
    order: z.ZodNumber;
}, "strict", z.ZodTypeAny, {
    id: string;
    segmentId: string;
    title: string;
    order: number;
    category: "tutorial" | "guided-practice" | "practice-question" | "independent-question";
    description?: string | undefined;
    stepId?: string | undefined;
    questionId?: string | undefined;
}, {
    id: string;
    segmentId: string;
    title: string;
    order: number;
    category: "tutorial" | "guided-practice" | "practice-question" | "independent-question";
    description?: string | undefined;
    stepId?: string | undefined;
    questionId?: string | undefined;
}>;
type LessonTask = z.infer<typeof LessonTaskSchema>;
declare const LessonPlanSchema: z.ZodObject<{
    lessonId: z.ZodString;
    label: z.ZodString;
    tasks: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        title: z.ZodString;
        description: z.ZodOptional<z.ZodString>;
        category: z.ZodEnum<["tutorial", "guided-practice", "practice-question", "independent-question"]>;
        segmentId: z.ZodString;
        stepId: z.ZodOptional<z.ZodString>;
        questionId: z.ZodOptional<z.ZodString>;
        order: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        id: string;
        segmentId: string;
        title: string;
        order: number;
        category: "tutorial" | "guided-practice" | "practice-question" | "independent-question";
        description?: string | undefined;
        stepId?: string | undefined;
        questionId?: string | undefined;
    }, {
        id: string;
        segmentId: string;
        title: string;
        order: number;
        category: "tutorial" | "guided-practice" | "practice-question" | "independent-question";
        description?: string | undefined;
        stepId?: string | undefined;
        questionId?: string | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    label: string;
    lessonId: string;
    tasks: {
        id: string;
        segmentId: string;
        title: string;
        order: number;
        category: "tutorial" | "guided-practice" | "practice-question" | "independent-question";
        description?: string | undefined;
        stepId?: string | undefined;
        questionId?: string | undefined;
    }[];
}, {
    label: string;
    lessonId: string;
    tasks: {
        id: string;
        segmentId: string;
        title: string;
        order: number;
        category: "tutorial" | "guided-practice" | "practice-question" | "independent-question";
        description?: string | undefined;
        stepId?: string | undefined;
        questionId?: string | undefined;
    }[];
}>;
type LessonPlan = z.infer<typeof LessonPlanSchema>;
declare const UnitTopicRefSchema: z.ZodObject<{
    topicId: z.ZodString;
    lessonIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
}, "strict", z.ZodTypeAny, {
    topicId: string;
    lessonIds?: string[] | undefined;
}, {
    topicId: string;
    lessonIds?: string[] | undefined;
}>;
type UnitTopicRef = z.infer<typeof UnitTopicRefSchema>;
declare const UnitSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    summary: z.ZodString;
    coverImage: z.ZodString;
    topics: z.ZodArray<z.ZodObject<{
        topicId: z.ZodString;
        lessonIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strict", z.ZodTypeAny, {
        topicId: string;
        lessonIds?: string[] | undefined;
    }, {
        topicId: string;
        lessonIds?: string[] | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    name: string;
    id: string;
    summary: string;
    coverImage: string;
    topics: {
        topicId: string;
        lessonIds?: string[] | undefined;
    }[];
}, {
    name: string;
    id: string;
    summary: string;
    coverImage: string;
    topics: {
        topicId: string;
        lessonIds?: string[] | undefined;
    }[];
}>;
type Unit = z.infer<typeof UnitSchema>;
declare const LessonStatusSchema: z.ZodEnum<["draft", "published"]>;
type LessonStatus = z.infer<typeof LessonStatusSchema>;
declare const LessonAuthoringStatusSchema: z.ZodEnum<["not_started", "outline", "presentation", "guided", "practice", "qa", "published"]>;
type LessonAuthoringStatus = z.infer<typeof LessonAuthoringStatusSchema>;
declare const LessonGradeLevelSchema: z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>;
type LessonGradeLevel = z.infer<typeof LessonGradeLevelSchema>;
declare const TopicStatusSchema: z.ZodEnum<["active", "archived"]>;
type TopicStatus = z.infer<typeof TopicStatusSchema>;
declare const UnitStatusSchema: z.ZodEnum<["active", "archived"]>;
type UnitStatus = TopicStatus;
declare const CurriculumTreeLessonSchema: z.ZodObject<{
    _id: z.ZodType<Id<"lessons">, z.ZodTypeDef, Id<"lessons">>;
    slug: z.ZodString;
    order: z.ZodNumber;
    status: z.ZodEnum<["draft", "published"]>;
    title: z.ZodString;
    summary: z.ZodString;
    updatedAt: z.ZodNumber;
    authoringStatus: z.ZodOptional<z.ZodEnum<["not_started", "outline", "presentation", "guided", "practice", "qa", "published"]>>;
    assigneeId: z.ZodOptional<z.ZodString>;
    gradeLevels: z.ZodOptional<z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">>;
}, "strict", z.ZodTypeAny, {
    status: "draft" | "published";
    slug: string;
    updatedAt: number;
    title: string;
    order: number;
    summary: string;
    _id: string & {
        __tableName: "lessons";
    };
    authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
    assigneeId?: string | undefined;
    gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
}, {
    status: "draft" | "published";
    slug: string;
    updatedAt: number;
    title: string;
    order: number;
    summary: string;
    _id: string & {
        __tableName: "lessons";
    };
    authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
    assigneeId?: string | undefined;
    gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
}>;
type CurriculumTreeLesson = z.infer<typeof CurriculumTreeLessonSchema>;
declare const CurriculumTreeTopicSchema: z.ZodObject<{
    _id: z.ZodType<Id<"topics">, z.ZodTypeDef, Id<"topics">>;
    unitId: z.ZodType<Id<"units">, z.ZodTypeDef, Id<"units">>;
    slug: z.ZodString;
    title: z.ZodString;
    overview: z.ZodOptional<z.ZodString>;
    focusSkills: z.ZodArray<z.ZodString, "many">;
    estimatedDurationMinutes: z.ZodOptional<z.ZodNumber>;
    order: z.ZodNumber;
    status: z.ZodEnum<["active", "archived"]>;
    lessons: z.ZodArray<z.ZodObject<{
        _id: z.ZodType<Id<"lessons">, z.ZodTypeDef, Id<"lessons">>;
        slug: z.ZodString;
        order: z.ZodNumber;
        status: z.ZodEnum<["draft", "published"]>;
        title: z.ZodString;
        summary: z.ZodString;
        updatedAt: z.ZodNumber;
        authoringStatus: z.ZodOptional<z.ZodEnum<["not_started", "outline", "presentation", "guided", "practice", "qa", "published"]>>;
        assigneeId: z.ZodOptional<z.ZodString>;
        gradeLevels: z.ZodOptional<z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">>;
    }, "strict", z.ZodTypeAny, {
        status: "draft" | "published";
        slug: string;
        updatedAt: number;
        title: string;
        order: number;
        summary: string;
        _id: string & {
            __tableName: "lessons";
        };
        authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
        assigneeId?: string | undefined;
        gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
    }, {
        status: "draft" | "published";
        slug: string;
        updatedAt: number;
        title: string;
        order: number;
        summary: string;
        _id: string & {
            __tableName: "lessons";
        };
        authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
        assigneeId?: string | undefined;
        gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    status: "active" | "archived";
    slug: string;
    title: string;
    order: number;
    focusSkills: string[];
    lessons: {
        status: "draft" | "published";
        slug: string;
        updatedAt: number;
        title: string;
        order: number;
        summary: string;
        _id: string & {
            __tableName: "lessons";
        };
        authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
        assigneeId?: string | undefined;
        gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
    }[];
    _id: string & {
        __tableName: "topics";
    };
    unitId: string & {
        __tableName: "units";
    };
    estimatedDurationMinutes?: number | undefined;
    overview?: string | undefined;
}, {
    status: "active" | "archived";
    slug: string;
    title: string;
    order: number;
    focusSkills: string[];
    lessons: {
        status: "draft" | "published";
        slug: string;
        updatedAt: number;
        title: string;
        order: number;
        summary: string;
        _id: string & {
            __tableName: "lessons";
        };
        authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
        assigneeId?: string | undefined;
        gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
    }[];
    _id: string & {
        __tableName: "topics";
    };
    unitId: string & {
        __tableName: "units";
    };
    estimatedDurationMinutes?: number | undefined;
    overview?: string | undefined;
}>;
type CurriculumTreeTopic = z.infer<typeof CurriculumTreeTopicSchema>;
declare const CurriculumTreeUnitSchema: z.ZodObject<{
    _id: z.ZodType<Id<"units">, z.ZodTypeDef, Id<"units">>;
    slug: z.ZodString;
    title: z.ZodString;
    summary: z.ZodOptional<z.ZodString>;
    coverImage: z.ZodOptional<z.ZodString>;
    order: z.ZodNumber;
    status: z.ZodEnum<["active", "archived"]>;
    metadata: z.ZodOptional<z.ZodObject<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">>>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    topics: z.ZodArray<z.ZodObject<{
        _id: z.ZodType<Id<"topics">, z.ZodTypeDef, Id<"topics">>;
        unitId: z.ZodType<Id<"units">, z.ZodTypeDef, Id<"units">>;
        slug: z.ZodString;
        title: z.ZodString;
        overview: z.ZodOptional<z.ZodString>;
        focusSkills: z.ZodArray<z.ZodString, "many">;
        estimatedDurationMinutes: z.ZodOptional<z.ZodNumber>;
        order: z.ZodNumber;
        status: z.ZodEnum<["active", "archived"]>;
        lessons: z.ZodArray<z.ZodObject<{
            _id: z.ZodType<Id<"lessons">, z.ZodTypeDef, Id<"lessons">>;
            slug: z.ZodString;
            order: z.ZodNumber;
            status: z.ZodEnum<["draft", "published"]>;
            title: z.ZodString;
            summary: z.ZodString;
            updatedAt: z.ZodNumber;
            authoringStatus: z.ZodOptional<z.ZodEnum<["not_started", "outline", "presentation", "guided", "practice", "qa", "published"]>>;
            assigneeId: z.ZodOptional<z.ZodString>;
            gradeLevels: z.ZodOptional<z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">>;
        }, "strict", z.ZodTypeAny, {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }, {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }>, "many">;
    }, "strict", z.ZodTypeAny, {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }, {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    status: "active" | "archived";
    slug: string;
    createdAt: number;
    updatedAt: number;
    title: string;
    order: number;
    topics: {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }[];
    _id: string & {
        __tableName: "units";
    };
    metadata?: z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    summary?: string | undefined;
    coverImage?: string | undefined;
}, {
    status: "active" | "archived";
    slug: string;
    createdAt: number;
    updatedAt: number;
    title: string;
    order: number;
    topics: {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }[];
    _id: string & {
        __tableName: "units";
    };
    metadata?: z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    summary?: string | undefined;
    coverImage?: string | undefined;
}>;
type CurriculumTreeUnit = z.infer<typeof CurriculumTreeUnitSchema>;
declare const CurriculumTreeSchema: z.ZodArray<z.ZodObject<{
    _id: z.ZodType<Id<"units">, z.ZodTypeDef, Id<"units">>;
    slug: z.ZodString;
    title: z.ZodString;
    summary: z.ZodOptional<z.ZodString>;
    coverImage: z.ZodOptional<z.ZodString>;
    order: z.ZodNumber;
    status: z.ZodEnum<["active", "archived"]>;
    metadata: z.ZodOptional<z.ZodObject<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">>>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    topics: z.ZodArray<z.ZodObject<{
        _id: z.ZodType<Id<"topics">, z.ZodTypeDef, Id<"topics">>;
        unitId: z.ZodType<Id<"units">, z.ZodTypeDef, Id<"units">>;
        slug: z.ZodString;
        title: z.ZodString;
        overview: z.ZodOptional<z.ZodString>;
        focusSkills: z.ZodArray<z.ZodString, "many">;
        estimatedDurationMinutes: z.ZodOptional<z.ZodNumber>;
        order: z.ZodNumber;
        status: z.ZodEnum<["active", "archived"]>;
        lessons: z.ZodArray<z.ZodObject<{
            _id: z.ZodType<Id<"lessons">, z.ZodTypeDef, Id<"lessons">>;
            slug: z.ZodString;
            order: z.ZodNumber;
            status: z.ZodEnum<["draft", "published"]>;
            title: z.ZodString;
            summary: z.ZodString;
            updatedAt: z.ZodNumber;
            authoringStatus: z.ZodOptional<z.ZodEnum<["not_started", "outline", "presentation", "guided", "practice", "qa", "published"]>>;
            assigneeId: z.ZodOptional<z.ZodString>;
            gradeLevels: z.ZodOptional<z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">>;
        }, "strict", z.ZodTypeAny, {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }, {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }>, "many">;
    }, "strict", z.ZodTypeAny, {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }, {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    status: "active" | "archived";
    slug: string;
    createdAt: number;
    updatedAt: number;
    title: string;
    order: number;
    topics: {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }[];
    _id: string & {
        __tableName: "units";
    };
    metadata?: z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    summary?: string | undefined;
    coverImage?: string | undefined;
}, {
    status: "active" | "archived";
    slug: string;
    createdAt: number;
    updatedAt: number;
    title: string;
    order: number;
    topics: {
        status: "active" | "archived";
        slug: string;
        title: string;
        order: number;
        focusSkills: string[];
        lessons: {
            status: "draft" | "published";
            slug: string;
            updatedAt: number;
            title: string;
            order: number;
            summary: string;
            _id: string & {
                __tableName: "lessons";
            };
            authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
            assigneeId?: string | undefined;
            gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
        }[];
        _id: string & {
            __tableName: "topics";
        };
        unitId: string & {
            __tableName: "units";
        };
        estimatedDurationMinutes?: number | undefined;
        overview?: string | undefined;
    }[];
    _id: string & {
        __tableName: "units";
    };
    metadata?: z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    summary?: string | undefined;
    coverImage?: string | undefined;
}>, "many">;
type CurriculumTree = z.infer<typeof CurriculumTreeSchema>;
declare const LessonDraftRecordSchema: z.ZodObject<{
    _id: z.ZodType<Id<"lessons">, z.ZodTypeDef, Id<"lessons">>;
    draft: z.ZodObject<{
        version: z.ZodLiteral<"1.0">;
        lesson: z.ZodObject<{
            id: z.ZodString;
            topicId: z.ZodString;
            title: z.ZodString;
            summary: z.ZodOptional<z.ZodString>;
            focusSkills: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            estimatedDurationMinutes: z.ZodNumber;
            primaryMaterialId: z.ZodString;
            segments: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                type: z.ZodLiteral<"presentation">;
                representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
                primaryMaterialId: z.ZodOptional<z.ZodString>;
                materials: z.ZodArray<z.ZodObject<{
                    materialId: z.ZodString;
                    purpose: z.ZodString;
                    optional: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }>, "many">;
                skills: z.ZodArray<z.ZodString, "many">;
                scriptId: z.ZodOptional<z.ZodString>;
                script: z.ZodOptional<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodString;
                    actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"narrate">;
                        text: z.ZodString;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"showCard">;
                        card: z.ZodString;
                        position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"placeBeads">;
                        place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
                        quantity: z.ZodNumber;
                        tray: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"duplicateTray">;
                        count: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"exchange">;
                        from: z.ZodEnum<["unit", "ten", "hundred"]>;
                        to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                        quantity: z.ZodNumber;
                        remainder: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"moveBeadsBelowLine">;
                        place: z.ZodEnum<["unit", "ten", "hundred"]>;
                        totalCount: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"groupForExchange">;
                        place: z.ZodEnum<["unit", "ten", "hundred"]>;
                        groupsOfTen: z.ZodNumber;
                        remainder: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"exchangeBeads">;
                        from: z.ZodEnum<["unit", "ten", "hundred"]>;
                        to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                        groupsOfTen: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"placeResultCard">;
                        place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                        value: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"stackPlaceValues">;
                        order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"writeResult">;
                        value: z.ZodString;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"highlight">;
                        target: z.ZodString;
                        text: z.ZodOptional<z.ZodString>;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    }, {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"showStamp">;
                        stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
                        columns: z.ZodNumber;
                        rows: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"countTotal">;
                        value: z.ZodString;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>]>, "many">;
                    summary: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                }, {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                }>>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
                materialBankId: z.ZodOptional<z.ZodString>;
                timeline: z.ZodOptional<z.ZodObject<{
                    version: z.ZodLiteral<1>;
                    label: z.ZodOptional<z.ZodString>;
                    steps: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        title: z.ZodOptional<z.ZodString>;
                        caption: z.ZodOptional<z.ZodString>;
                        actor: z.ZodEnum<["guide", "student"]>;
                        durationMs: z.ZodNumber;
                        keyframes: z.ZodArray<z.ZodObject<{
                            nodeId: z.ZodString;
                            keyframes: z.ZodArray<z.ZodObject<{
                                timeMs: z.ZodNumber;
                                transform: z.ZodObject<{
                                    position: z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>;
                                    rotation: z.ZodOptional<z.ZodNumber>;
                                    scale: z.ZodOptional<z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>>;
                                    opacity: z.ZodOptional<z.ZodNumber>;
                                }, "strict", z.ZodTypeAny, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }>;
                                easing: z.ZodOptional<z.ZodString>;
                                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                            }, "strict", z.ZodTypeAny, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }>, "many">;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }>, "many">;
                        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                            targetNodeId: z.ZodOptional<z.ZodString>;
                            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }>, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }, {
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }>, z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                type: z.ZodLiteral<"guided">;
                representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
                materials: z.ZodArray<z.ZodObject<{
                    materialId: z.ZodString;
                    purpose: z.ZodString;
                    optional: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }>, "many">;
                skills: z.ZodArray<z.ZodString, "many">;
                workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    prompt: z.ZodString;
                    expectation: z.ZodString;
                    successCheck: z.ZodString;
                    nudge: z.ZodString;
                    explanation: z.ZodOptional<z.ZodString>;
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }, {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }>, "many">;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
                materialBankId: z.ZodOptional<z.ZodString>;
                timeline: z.ZodOptional<z.ZodObject<{
                    version: z.ZodLiteral<1>;
                    label: z.ZodOptional<z.ZodString>;
                    steps: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        title: z.ZodOptional<z.ZodString>;
                        caption: z.ZodOptional<z.ZodString>;
                        actor: z.ZodEnum<["guide", "student"]>;
                        durationMs: z.ZodNumber;
                        keyframes: z.ZodArray<z.ZodObject<{
                            nodeId: z.ZodString;
                            keyframes: z.ZodArray<z.ZodObject<{
                                timeMs: z.ZodNumber;
                                transform: z.ZodObject<{
                                    position: z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>;
                                    rotation: z.ZodOptional<z.ZodNumber>;
                                    scale: z.ZodOptional<z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>>;
                                    opacity: z.ZodOptional<z.ZodNumber>;
                                }, "strict", z.ZodTypeAny, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }>;
                                easing: z.ZodOptional<z.ZodString>;
                                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                            }, "strict", z.ZodTypeAny, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }>, "many">;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }>, "many">;
                        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                            targetNodeId: z.ZodOptional<z.ZodString>;
                            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }>, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }, {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }>, z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                type: z.ZodLiteral<"practice">;
                representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
                materials: z.ZodArray<z.ZodObject<{
                    materialId: z.ZodString;
                    purpose: z.ZodString;
                    optional: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }>, "many">;
                skills: z.ZodArray<z.ZodString, "many">;
                workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                questions: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    multiplicand: z.ZodNumber;
                    multiplier: z.ZodNumber;
                    prompt: z.ZodString;
                    correctAnswer: z.ZodNumber;
                    difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }, {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }>, "many">;
                passCriteria: z.ZodObject<{
                    type: z.ZodLiteral<"threshold">;
                    firstCorrect: z.ZodNumber;
                    totalCorrect: z.ZodNumber;
                    maxMisses: z.ZodNumber;
                }, "strict", z.ZodTypeAny, {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                }, {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                }>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
                materialBankId: z.ZodOptional<z.ZodString>;
                timeline: z.ZodOptional<z.ZodObject<{
                    version: z.ZodLiteral<1>;
                    label: z.ZodOptional<z.ZodString>;
                    steps: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        title: z.ZodOptional<z.ZodString>;
                        caption: z.ZodOptional<z.ZodString>;
                        actor: z.ZodEnum<["guide", "student"]>;
                        durationMs: z.ZodNumber;
                        keyframes: z.ZodArray<z.ZodObject<{
                            nodeId: z.ZodString;
                            keyframes: z.ZodArray<z.ZodObject<{
                                timeMs: z.ZodNumber;
                                transform: z.ZodObject<{
                                    position: z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>;
                                    rotation: z.ZodOptional<z.ZodNumber>;
                                    scale: z.ZodOptional<z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>>;
                                    opacity: z.ZodOptional<z.ZodNumber>;
                                }, "strict", z.ZodTypeAny, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }>;
                                easing: z.ZodOptional<z.ZodString>;
                                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                            }, "strict", z.ZodTypeAny, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }>, "many">;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }>, "many">;
                        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                            targetNodeId: z.ZodOptional<z.ZodString>;
                            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }>, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }, {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }>]>, "many">;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            materialInventory: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                tokenTypes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    materialId: z.ZodString;
                    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    label: z.ZodString;
                    visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
                        kind: z.ZodLiteral<"bead">;
                        place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                    }, "strip", z.ZodTypeAny, {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    }, {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    }>, z.ZodObject<{
                        kind: z.ZodLiteral<"card">;
                        value: z.ZodNumber;
                        size: z.ZodEnum<["sm", "md", "lg"]>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    }, {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    }>, z.ZodObject<{
                        kind: z.ZodLiteral<"stamp">;
                        value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
                    }, "strip", z.ZodTypeAny, {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    }, {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    }>, z.ZodObject<{
                        kind: z.ZodLiteral<"custom">;
                        componentId: z.ZodString;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strip", z.ZodTypeAny, {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    }, {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    }>]>;
                    quantityPerToken: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                }, "strict", z.ZodTypeAny, {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }, {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }>, "many">;
                banks: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    label: z.ZodString;
                    scope: z.ZodEnum<["lesson", "segment"]>;
                    segmentId: z.ZodOptional<z.ZodString>;
                    materialId: z.ZodString;
                    accepts: z.ZodArray<z.ZodString, "many">;
                    initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
                    depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
                    layout: z.ZodOptional<z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        width: z.ZodOptional<z.ZodNumber>;
                        height: z.ZodOptional<z.ZodNumber>;
                        align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    }>>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }, {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }>, "many">;
                defaultRules: z.ZodOptional<z.ZodObject<{
                    onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        triggerTokenType: z.ZodString;
                        produces: z.ZodArray<z.ZodObject<{
                            tokenType: z.ZodString;
                            quantity: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            tokenType: string;
                            quantity: number;
                        }, {
                            tokenType: string;
                            quantity: number;
                        }>, "many">;
                        consumes: z.ZodArray<z.ZodObject<{
                            tokenType: z.ZodString;
                            quantity: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            tokenType: string;
                            quantity: number;
                        }, {
                            tokenType: string;
                            quantity: number;
                        }>, "many">;
                    }, "strict", z.ZodTypeAny, {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }, {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }>, "many">>;
                    onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        whenBankId: z.ZodString;
                        method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
                        customHandlerId: z.ZodOptional<z.ZodString>;
                    }, "strict", z.ZodTypeAny, {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }, {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }>, "many">>;
                    onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        bankId: z.ZodString;
                        allowNegative: z.ZodOptional<z.ZodBoolean>;
                        blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
                    }, "strict", z.ZodTypeAny, {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }, {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }>, "many">>;
                }, "strict", z.ZodTypeAny, {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                }, {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                }>>;
                sceneNodes: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    materialId: z.ZodString;
                    label: z.ZodOptional<z.ZodString>;
                    transform: z.ZodOptional<z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }, {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }>, "many">>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            }, {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        }, {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        }>;
        meta: z.ZodOptional<z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
            updatedAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
            author: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            metadata: z.ZodOptional<z.ZodObject<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, "strip", z.ZodUnknown, z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip">, z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip">>>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        }, {
            metadata?: z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    }, {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    }>;
    published: z.ZodOptional<z.ZodObject<{
        version: z.ZodLiteral<"1.0">;
        lesson: z.ZodObject<{
            id: z.ZodString;
            topicId: z.ZodString;
            title: z.ZodString;
            summary: z.ZodOptional<z.ZodString>;
            focusSkills: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
            estimatedDurationMinutes: z.ZodNumber;
            primaryMaterialId: z.ZodString;
            segments: z.ZodArray<z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                type: z.ZodLiteral<"presentation">;
                representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
                primaryMaterialId: z.ZodOptional<z.ZodString>;
                materials: z.ZodArray<z.ZodObject<{
                    materialId: z.ZodString;
                    purpose: z.ZodString;
                    optional: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }>, "many">;
                skills: z.ZodArray<z.ZodString, "many">;
                scriptId: z.ZodOptional<z.ZodString>;
                script: z.ZodOptional<z.ZodObject<{
                    id: z.ZodString;
                    title: z.ZodString;
                    actions: z.ZodArray<z.ZodDiscriminatedUnion<"type", readonly [z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"narrate">;
                        text: z.ZodString;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"showCard">;
                        card: z.ZodString;
                        position: z.ZodEnum<["multiplicand-stack", "multiplier", "paper"]>;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"placeBeads">;
                        place: z.ZodEnum<["thousand", "hundred", "ten", "unit"]>;
                        quantity: z.ZodNumber;
                        tray: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"duplicateTray">;
                        count: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"exchange">;
                        from: z.ZodEnum<["unit", "ten", "hundred"]>;
                        to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                        quantity: z.ZodNumber;
                        remainder: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"moveBeadsBelowLine">;
                        place: z.ZodEnum<["unit", "ten", "hundred"]>;
                        totalCount: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"groupForExchange">;
                        place: z.ZodEnum<["unit", "ten", "hundred"]>;
                        groupsOfTen: z.ZodNumber;
                        remainder: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"exchangeBeads">;
                        from: z.ZodEnum<["unit", "ten", "hundred"]>;
                        to: z.ZodEnum<["ten", "hundred", "thousand"]>;
                        groupsOfTen: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"placeResultCard">;
                        place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                        value: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"stackPlaceValues">;
                        order: z.ZodArray<z.ZodEnum<["thousand", "hundred", "ten", "unit"]>, "many">;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"writeResult">;
                        value: z.ZodString;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"highlight">;
                        target: z.ZodString;
                        text: z.ZodOptional<z.ZodString>;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    }, {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"showStamp">;
                        stamp: z.ZodUnion<[z.ZodLiteral<"1">, z.ZodLiteral<"10">, z.ZodLiteral<"100">]>;
                        columns: z.ZodNumber;
                        rows: z.ZodNumber;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>, z.ZodObject<{
                        durationMs: z.ZodOptional<z.ZodNumber>;
                        authoring: z.ZodOptional<z.ZodObject<{
                            label: z.ZodOptional<z.ZodString>;
                            description: z.ZodOptional<z.ZodString>;
                            notes: z.ZodOptional<z.ZodString>;
                            tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }, {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        }>>;
                    } & {
                        type: z.ZodLiteral<"countTotal">;
                        value: z.ZodString;
                    } & {
                        id: z.ZodString;
                    }, "strict", z.ZodTypeAny, {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }, {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    }>]>, "many">;
                    summary: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                }, {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                }>>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
                materialBankId: z.ZodOptional<z.ZodString>;
                timeline: z.ZodOptional<z.ZodObject<{
                    version: z.ZodLiteral<1>;
                    label: z.ZodOptional<z.ZodString>;
                    steps: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        title: z.ZodOptional<z.ZodString>;
                        caption: z.ZodOptional<z.ZodString>;
                        actor: z.ZodEnum<["guide", "student"]>;
                        durationMs: z.ZodNumber;
                        keyframes: z.ZodArray<z.ZodObject<{
                            nodeId: z.ZodString;
                            keyframes: z.ZodArray<z.ZodObject<{
                                timeMs: z.ZodNumber;
                                transform: z.ZodObject<{
                                    position: z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>;
                                    rotation: z.ZodOptional<z.ZodNumber>;
                                    scale: z.ZodOptional<z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>>;
                                    opacity: z.ZodOptional<z.ZodNumber>;
                                }, "strict", z.ZodTypeAny, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }>;
                                easing: z.ZodOptional<z.ZodString>;
                                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                            }, "strict", z.ZodTypeAny, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }>, "many">;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }>, "many">;
                        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                            targetNodeId: z.ZodOptional<z.ZodString>;
                            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }>, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }, {
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }>, z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                type: z.ZodLiteral<"guided">;
                representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
                materials: z.ZodArray<z.ZodObject<{
                    materialId: z.ZodString;
                    purpose: z.ZodString;
                    optional: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }>, "many">;
                skills: z.ZodArray<z.ZodString, "many">;
                workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                steps: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    prompt: z.ZodString;
                    expectation: z.ZodString;
                    successCheck: z.ZodString;
                    nudge: z.ZodString;
                    explanation: z.ZodOptional<z.ZodString>;
                    durationMs: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                } & {
                    evaluatorId: z.ZodEnum<["golden-beads-build-base", "golden-beads-duplicate", "golden-beads-exchange-units", "golden-beads-exchange-tens", "golden-beads-exchange-hundreds", "golden-beads-stack-result", "stamp-game-build", "stamp-game-repeat-columns", "stamp-game-exchange", "stamp-game-read-result"]>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }, {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }>, "many">;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
                materialBankId: z.ZodOptional<z.ZodString>;
                timeline: z.ZodOptional<z.ZodObject<{
                    version: z.ZodLiteral<1>;
                    label: z.ZodOptional<z.ZodString>;
                    steps: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        title: z.ZodOptional<z.ZodString>;
                        caption: z.ZodOptional<z.ZodString>;
                        actor: z.ZodEnum<["guide", "student"]>;
                        durationMs: z.ZodNumber;
                        keyframes: z.ZodArray<z.ZodObject<{
                            nodeId: z.ZodString;
                            keyframes: z.ZodArray<z.ZodObject<{
                                timeMs: z.ZodNumber;
                                transform: z.ZodObject<{
                                    position: z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>;
                                    rotation: z.ZodOptional<z.ZodNumber>;
                                    scale: z.ZodOptional<z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>>;
                                    opacity: z.ZodOptional<z.ZodNumber>;
                                }, "strict", z.ZodTypeAny, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }>;
                                easing: z.ZodOptional<z.ZodString>;
                                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                            }, "strict", z.ZodTypeAny, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }>, "many">;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }>, "many">;
                        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                            targetNodeId: z.ZodOptional<z.ZodString>;
                            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }>, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }, {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }>, z.ZodObject<{
                id: z.ZodString;
                title: z.ZodString;
                description: z.ZodOptional<z.ZodString>;
                type: z.ZodLiteral<"practice">;
                representation: z.ZodOptional<z.ZodEnum<["concrete", "abstract"]>>;
                materials: z.ZodArray<z.ZodObject<{
                    materialId: z.ZodString;
                    purpose: z.ZodString;
                    optional: z.ZodOptional<z.ZodBoolean>;
                }, "strict", z.ZodTypeAny, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }, {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }>, "many">;
                skills: z.ZodArray<z.ZodString, "many">;
                workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                questions: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    multiplicand: z.ZodNumber;
                    multiplier: z.ZodNumber;
                    prompt: z.ZodString;
                    correctAnswer: z.ZodNumber;
                    difficulty: z.ZodEnum<["easy", "medium", "hard"]>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }, {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }>, "many">;
                passCriteria: z.ZodObject<{
                    type: z.ZodLiteral<"threshold">;
                    firstCorrect: z.ZodNumber;
                    totalCorrect: z.ZodNumber;
                    maxMisses: z.ZodNumber;
                }, "strict", z.ZodTypeAny, {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                }, {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                }>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
                materialBankId: z.ZodOptional<z.ZodString>;
                timeline: z.ZodOptional<z.ZodObject<{
                    version: z.ZodLiteral<1>;
                    label: z.ZodOptional<z.ZodString>;
                    steps: z.ZodArray<z.ZodObject<{
                        id: z.ZodString;
                        title: z.ZodOptional<z.ZodString>;
                        caption: z.ZodOptional<z.ZodString>;
                        actor: z.ZodEnum<["guide", "student"]>;
                        durationMs: z.ZodNumber;
                        keyframes: z.ZodArray<z.ZodObject<{
                            nodeId: z.ZodString;
                            keyframes: z.ZodArray<z.ZodObject<{
                                timeMs: z.ZodNumber;
                                transform: z.ZodObject<{
                                    position: z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>;
                                    rotation: z.ZodOptional<z.ZodNumber>;
                                    scale: z.ZodOptional<z.ZodObject<{
                                        x: z.ZodNumber;
                                        y: z.ZodNumber;
                                    }, "strip", z.ZodTypeAny, {
                                        x: number;
                                        y: number;
                                    }, {
                                        x: number;
                                        y: number;
                                    }>>;
                                    opacity: z.ZodOptional<z.ZodNumber>;
                                }, "strict", z.ZodTypeAny, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }, {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                }>;
                                easing: z.ZodOptional<z.ZodString>;
                                metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                            }, "strict", z.ZodTypeAny, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }, {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }>, "many">;
                            metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }, {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }>, "many">;
                        interactions: z.ZodOptional<z.ZodArray<z.ZodObject<{
                            id: z.ZodString;
                            kind: z.ZodEnum<["drop-zone", "input", "custom"]>;
                            targetNodeId: z.ZodOptional<z.ZodString>;
                            props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                        }, "strict", z.ZodTypeAny, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }, {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }>, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }, {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }>, "many">;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }, {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                }>>;
            }, "strict", z.ZodTypeAny, {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }, {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            }>]>, "many">;
            materials: z.ZodArray<z.ZodObject<{
                materialId: z.ZodString;
                purpose: z.ZodString;
                optional: z.ZodOptional<z.ZodBoolean>;
            }, "strict", z.ZodTypeAny, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }, {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }>, "many">;
            materialInventory: z.ZodOptional<z.ZodObject<{
                version: z.ZodLiteral<1>;
                tokenTypes: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    materialId: z.ZodString;
                    workspace: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    label: z.ZodString;
                    visual: z.ZodDiscriminatedUnion<"kind", [z.ZodObject<{
                        kind: z.ZodLiteral<"bead">;
                        place: z.ZodEnum<["unit", "ten", "hundred", "thousand"]>;
                    }, "strip", z.ZodTypeAny, {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    }, {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    }>, z.ZodObject<{
                        kind: z.ZodLiteral<"card">;
                        value: z.ZodNumber;
                        size: z.ZodEnum<["sm", "md", "lg"]>;
                    }, "strip", z.ZodTypeAny, {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    }, {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    }>, z.ZodObject<{
                        kind: z.ZodLiteral<"stamp">;
                        value: z.ZodUnion<[z.ZodLiteral<1>, z.ZodLiteral<10>, z.ZodLiteral<100>]>;
                    }, "strip", z.ZodTypeAny, {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    }, {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    }>, z.ZodObject<{
                        kind: z.ZodLiteral<"custom">;
                        componentId: z.ZodString;
                        props: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strip", z.ZodTypeAny, {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    }, {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    }>]>;
                    quantityPerToken: z.ZodOptional<z.ZodNumber>;
                    authoring: z.ZodOptional<z.ZodObject<{
                        label: z.ZodOptional<z.ZodString>;
                        description: z.ZodOptional<z.ZodString>;
                        notes: z.ZodOptional<z.ZodString>;
                        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                        metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    }, "strict", z.ZodTypeAny, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }, {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    }>>;
                }, "strict", z.ZodTypeAny, {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }, {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }>, "many">;
                banks: z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    label: z.ZodString;
                    scope: z.ZodEnum<["lesson", "segment"]>;
                    segmentId: z.ZodOptional<z.ZodString>;
                    materialId: z.ZodString;
                    accepts: z.ZodArray<z.ZodString, "many">;
                    initialQuantity: z.ZodUnion<[z.ZodNumber, z.ZodRecord<z.ZodString, z.ZodNumber>]>;
                    depletion: z.ZodOptional<z.ZodEnum<["static", "consume", "replenish"]>>;
                    layout: z.ZodOptional<z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        width: z.ZodOptional<z.ZodNumber>;
                        height: z.ZodOptional<z.ZodNumber>;
                        align: z.ZodOptional<z.ZodEnum<["start", "center", "end"]>>;
                    }, "strict", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    }>>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }, {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }>, "many">;
                defaultRules: z.ZodOptional<z.ZodObject<{
                    onExchange: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        triggerTokenType: z.ZodString;
                        produces: z.ZodArray<z.ZodObject<{
                            tokenType: z.ZodString;
                            quantity: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            tokenType: string;
                            quantity: number;
                        }, {
                            tokenType: string;
                            quantity: number;
                        }>, "many">;
                        consumes: z.ZodArray<z.ZodObject<{
                            tokenType: z.ZodString;
                            quantity: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            tokenType: string;
                            quantity: number;
                        }, {
                            tokenType: string;
                            quantity: number;
                        }>, "many">;
                    }, "strict", z.ZodTypeAny, {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }, {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }>, "many">>;
                    onReplenish: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        whenBankId: z.ZodString;
                        method: z.ZodEnum<["reset-on-exit", "reset-on-undo", "custom"]>;
                        customHandlerId: z.ZodOptional<z.ZodString>;
                    }, "strict", z.ZodTypeAny, {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }, {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }>, "many">>;
                    onConsumption: z.ZodOptional<z.ZodArray<z.ZodObject<{
                        bankId: z.ZodString;
                        allowNegative: z.ZodOptional<z.ZodBoolean>;
                        blockWhenEmpty: z.ZodOptional<z.ZodBoolean>;
                    }, "strict", z.ZodTypeAny, {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }, {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }>, "many">>;
                }, "strict", z.ZodTypeAny, {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                }, {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                }>>;
                sceneNodes: z.ZodOptional<z.ZodArray<z.ZodObject<{
                    id: z.ZodString;
                    materialId: z.ZodString;
                    label: z.ZodOptional<z.ZodString>;
                    transform: z.ZodOptional<z.ZodObject<{
                        position: z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>;
                        rotation: z.ZodOptional<z.ZodNumber>;
                        scale: z.ZodOptional<z.ZodObject<{
                            x: z.ZodNumber;
                            y: z.ZodNumber;
                        }, "strip", z.ZodTypeAny, {
                            x: number;
                            y: number;
                        }, {
                            x: number;
                            y: number;
                        }>>;
                        opacity: z.ZodOptional<z.ZodNumber>;
                    }, "strip", z.ZodTypeAny, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }, {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    }>>;
                    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                }, "strict", z.ZodTypeAny, {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }, {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }>, "many">>;
            }, "strict", z.ZodTypeAny, {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            }, {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        }, {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        }>;
        meta: z.ZodOptional<z.ZodObject<{
            createdAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
            updatedAt: z.ZodOptional<z.ZodUnion<[z.ZodString, z.ZodNumber]>>;
            author: z.ZodOptional<z.ZodString>;
            notes: z.ZodOptional<z.ZodString>;
            metadata: z.ZodOptional<z.ZodObject<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, "strip", z.ZodUnknown, z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip">, z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip">>>;
            scenario: z.ZodOptional<z.ZodObject<{
                kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                seed: z.ZodNumber;
                snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                notes: z.ZodOptional<z.ZodString>;
            }, "strict", z.ZodTypeAny, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }, {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            }>>;
        }, "strict", z.ZodTypeAny, {
            metadata?: z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        }, {
            metadata?: z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        }>>;
    }, "strict", z.ZodTypeAny, {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    }, {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    }>>;
    topicId: z.ZodType<Id<"topics">, z.ZodTypeDef, Id<"topics">>;
    slug: z.ZodString;
    title: z.ZodString;
    summary: z.ZodOptional<z.ZodString>;
    order: z.ZodNumber;
    status: z.ZodEnum<["draft", "published"]>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    metadata: z.ZodOptional<z.ZodObject<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, "strip", z.ZodUnknown, z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">, z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip">>>;
    authoringStatus: z.ZodOptional<z.ZodEnum<["not_started", "outline", "presentation", "guided", "practice", "qa", "published"]>>;
    assigneeId: z.ZodOptional<z.ZodString>;
    authoringNotes: z.ZodOptional<z.ZodString>;
    gradeLevels: z.ZodOptional<z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">>;
    manifestHash: z.ZodOptional<z.ZodString>;
    manifestGeneratedAt: z.ZodOptional<z.ZodString>;
    manifestCommit: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    status: "draft" | "published";
    slug: string;
    createdAt: number;
    updatedAt: number;
    title: string;
    order: number;
    topicId: string & {
        __tableName: "topics";
    };
    draft: {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    };
    _id: string & {
        __tableName: "lessons";
    };
    metadata?: z.objectOutputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    summary?: string | undefined;
    published?: {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectOutputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    } | undefined;
    authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
    assigneeId?: string | undefined;
    gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
    authoringNotes?: string | undefined;
    manifestHash?: string | undefined;
    manifestGeneratedAt?: string | undefined;
    manifestCommit?: string | undefined;
}, {
    status: "draft" | "published";
    slug: string;
    createdAt: number;
    updatedAt: number;
    title: string;
    order: number;
    topicId: string & {
        __tableName: "topics";
    };
    draft: {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    };
    _id: string & {
        __tableName: "lessons";
    };
    metadata?: z.objectInputType<{
        source: z.ZodOptional<z.ZodString>;
        tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        notes: z.ZodOptional<z.ZodString>;
        scenario: z.ZodOptional<z.ZodObject<{
            kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
            seed: z.ZodNumber;
            snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
            notes: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }, {
            kind: "golden-beads" | "stamp-game";
            seed: number;
            notes?: string | undefined;
            snapshot?: Record<string, unknown> | undefined;
        }>>;
    }, z.ZodUnknown, "strip"> | undefined;
    summary?: string | undefined;
    published?: {
        lesson: {
            id: string;
            title: string;
            primaryMaterialId: string;
            materials: {
                materialId: string;
                purpose: string;
                optional?: boolean | undefined;
            }[];
            topicId: string;
            estimatedDurationMinutes: number;
            segments: ({
                type: "presentation";
                id: string;
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                primaryMaterialId?: string | undefined;
                scriptId?: string | undefined;
                script?: {
                    id: string;
                    title: string;
                    actions: ({
                        type: "narrate";
                        id: string;
                        text: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "showCard";
                        id: string;
                        position: "multiplicand-stack" | "multiplier" | "paper";
                        card: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "placeBeads";
                        id: string;
                        quantity: number;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        tray: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "duplicateTray";
                        id: string;
                        count: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchange";
                        id: string;
                        quantity: number;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        remainder: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "moveBeadsBelowLine";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        totalCount: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "groupForExchange";
                        id: string;
                        place: "unit" | "ten" | "hundred";
                        remainder: number;
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "exchangeBeads";
                        id: string;
                        from: "unit" | "ten" | "hundred";
                        to: "ten" | "hundred" | "thousand";
                        groupsOfTen: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: number;
                        type: "placeResultCard";
                        id: string;
                        place: "unit" | "ten" | "hundred" | "thousand";
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "stackPlaceValues";
                        id: string;
                        order: ("unit" | "ten" | "hundred" | "thousand")[];
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "writeResult";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        type: "highlight";
                        id: string;
                        target: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                        text?: string | undefined;
                    } | {
                        type: "showStamp";
                        id: string;
                        stamp: "1" | "10" | "100";
                        columns: number;
                        rows: number;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    } | {
                        value: string;
                        type: "countTotal";
                        id: string;
                        authoring?: {
                            metadata?: Record<string, unknown> | undefined;
                            notes?: string | undefined;
                            label?: string | undefined;
                            description?: string | undefined;
                            tags?: string[] | undefined;
                        } | undefined;
                        durationMs?: number | undefined;
                    })[];
                    summary?: string | undefined;
                } | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "guided";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                steps: {
                    id: string;
                    prompt: string;
                    expectation: string;
                    successCheck: string;
                    nudge: string;
                    evaluatorId: "golden-beads-build-base" | "golden-beads-duplicate" | "golden-beads-exchange-units" | "golden-beads-exchange-tens" | "golden-beads-exchange-hundreds" | "golden-beads-stack-result" | "stamp-game-build" | "stamp-game-repeat-columns" | "stamp-game-exchange" | "stamp-game-read-result";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                    durationMs?: number | undefined;
                    explanation?: string | undefined;
                }[];
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            } | {
                type: "practice";
                id: string;
                workspace: "golden-beads" | "stamp-game";
                title: string;
                materials: {
                    materialId: string;
                    purpose: string;
                    optional?: boolean | undefined;
                }[];
                skills: string[];
                questions: {
                    id: string;
                    multiplier: number;
                    prompt: string;
                    multiplicand: number;
                    correctAnswer: number;
                    difficulty: "easy" | "medium" | "hard";
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                passCriteria: {
                    type: "threshold";
                    firstCorrect: number;
                    totalCorrect: number;
                    maxMisses: number;
                };
                description?: string | undefined;
                scenario?: {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                } | undefined;
                representation?: "concrete" | "abstract" | undefined;
                materialBankId?: string | undefined;
                timeline?: {
                    version: 1;
                    steps: {
                        id: string;
                        keyframes: {
                            nodeId: string;
                            keyframes: {
                                transform: {
                                    position: {
                                        x: number;
                                        y: number;
                                    };
                                    rotation?: number | undefined;
                                    scale?: {
                                        x: number;
                                        y: number;
                                    } | undefined;
                                    opacity?: number | undefined;
                                };
                                timeMs: number;
                                metadata?: Record<string, unknown> | undefined;
                                easing?: string | undefined;
                            }[];
                            metadata?: Record<string, unknown> | undefined;
                        }[];
                        actor: "guide" | "student";
                        durationMs: number;
                        metadata?: Record<string, unknown> | undefined;
                        title?: string | undefined;
                        caption?: string | undefined;
                        interactions?: {
                            kind: "custom" | "drop-zone" | "input";
                            id: string;
                            props?: Record<string, unknown> | undefined;
                            targetNodeId?: string | undefined;
                        }[] | undefined;
                    }[];
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                } | undefined;
            })[];
            summary?: string | undefined;
            focusSkills?: string[] | undefined;
            materialInventory?: {
                version: 1;
                tokenTypes: {
                    label: string;
                    id: string;
                    materialId: string;
                    workspace: "golden-beads" | "stamp-game";
                    visual: {
                        kind: "bead";
                        place: "unit" | "ten" | "hundred" | "thousand";
                    } | {
                        value: number;
                        kind: "card";
                        size: "sm" | "md" | "lg";
                    } | {
                        value: 1 | 10 | 100;
                        kind: "stamp";
                    } | {
                        kind: "custom";
                        componentId: string;
                        props?: Record<string, unknown> | undefined;
                    };
                    quantityPerToken?: number | undefined;
                    authoring?: {
                        metadata?: Record<string, unknown> | undefined;
                        notes?: string | undefined;
                        label?: string | undefined;
                        description?: string | undefined;
                        tags?: string[] | undefined;
                    } | undefined;
                }[];
                banks: {
                    label: string;
                    id: string;
                    materialId: string;
                    scope: "lesson" | "segment";
                    accepts: string[];
                    initialQuantity: number | Record<string, number>;
                    metadata?: Record<string, unknown> | undefined;
                    segmentId?: string | undefined;
                    depletion?: "static" | "consume" | "replenish" | undefined;
                    layout?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        width?: number | undefined;
                        height?: number | undefined;
                        align?: "start" | "center" | "end" | undefined;
                    } | undefined;
                }[];
                defaultRules?: {
                    onExchange?: {
                        triggerTokenType: string;
                        produces: {
                            tokenType: string;
                            quantity: number;
                        }[];
                        consumes: {
                            tokenType: string;
                            quantity: number;
                        }[];
                    }[] | undefined;
                    onReplenish?: {
                        whenBankId: string;
                        method: "custom" | "reset-on-exit" | "reset-on-undo";
                        customHandlerId?: string | undefined;
                    }[] | undefined;
                    onConsumption?: {
                        bankId: string;
                        allowNegative?: boolean | undefined;
                        blockWhenEmpty?: boolean | undefined;
                    }[] | undefined;
                } | undefined;
                sceneNodes?: {
                    id: string;
                    materialId: string;
                    metadata?: Record<string, unknown> | undefined;
                    label?: string | undefined;
                    transform?: {
                        position: {
                            x: number;
                            y: number;
                        };
                        rotation?: number | undefined;
                        scale?: {
                            x: number;
                            y: number;
                        } | undefined;
                        opacity?: number | undefined;
                    } | undefined;
                }[] | undefined;
            } | undefined;
        };
        version: "1.0";
        meta?: {
            metadata?: z.objectInputType<{
                source: z.ZodOptional<z.ZodString>;
                tags: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
                notes: z.ZodOptional<z.ZodString>;
                scenario: z.ZodOptional<z.ZodObject<{
                    kind: z.ZodEnum<["golden-beads", "stamp-game"]>;
                    seed: z.ZodNumber;
                    snapshot: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodUnknown>>;
                    notes: z.ZodOptional<z.ZodString>;
                }, "strict", z.ZodTypeAny, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }, {
                    kind: "golden-beads" | "stamp-game";
                    seed: number;
                    notes?: string | undefined;
                    snapshot?: Record<string, unknown> | undefined;
                }>>;
            }, z.ZodUnknown, "strip"> | undefined;
            createdAt?: string | number | undefined;
            updatedAt?: string | number | undefined;
            notes?: string | undefined;
            scenario?: {
                kind: "golden-beads" | "stamp-game";
                seed: number;
                notes?: string | undefined;
                snapshot?: Record<string, unknown> | undefined;
            } | undefined;
            author?: string | undefined;
        } | undefined;
    } | undefined;
    authoringStatus?: "presentation" | "guided" | "practice" | "published" | "not_started" | "outline" | "qa" | undefined;
    assigneeId?: string | undefined;
    gradeLevels?: ("kindergarten" | "grade1" | "grade2" | "grade3")[] | undefined;
    authoringNotes?: string | undefined;
    manifestHash?: string | undefined;
    manifestGeneratedAt?: string | undefined;
    manifestCommit?: string | undefined;
}>;
type LessonDraftRecord = z.infer<typeof LessonDraftRecordSchema>;
declare const CurriculumSkillSchema: z.ZodObject<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    domainId: z.ZodString;
    unitId: z.ZodOptional<z.ZodString>;
    topicId: z.ZodOptional<z.ZodString>;
    ccss: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    ritBand: z.ZodOptional<z.ZodObject<{
        min: z.ZodNumber;
        max: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        min: number;
        max: number;
    }, {
        min: number;
        max: number;
    }>>;
    representations: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    practice: z.ZodOptional<z.ZodObject<{
        easy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        medium: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        hard: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strict", z.ZodTypeAny, {
        easy?: string[] | undefined;
        medium?: string[] | undefined;
        hard?: string[] | undefined;
    }, {
        easy?: string[] | undefined;
        medium?: string[] | undefined;
        hard?: string[] | undefined;
    }>>;
    mentalMathEligible: z.ZodOptional<z.ZodBoolean>;
}, "passthrough", z.ZodTypeAny, z.objectOutputType<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    domainId: z.ZodString;
    unitId: z.ZodOptional<z.ZodString>;
    topicId: z.ZodOptional<z.ZodString>;
    ccss: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    ritBand: z.ZodOptional<z.ZodObject<{
        min: z.ZodNumber;
        max: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        min: number;
        max: number;
    }, {
        min: number;
        max: number;
    }>>;
    representations: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    practice: z.ZodOptional<z.ZodObject<{
        easy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        medium: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        hard: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strict", z.ZodTypeAny, {
        easy?: string[] | undefined;
        medium?: string[] | undefined;
        hard?: string[] | undefined;
    }, {
        easy?: string[] | undefined;
        medium?: string[] | undefined;
        hard?: string[] | undefined;
    }>>;
    mentalMathEligible: z.ZodOptional<z.ZodBoolean>;
}, z.ZodTypeAny, "passthrough">, z.objectInputType<{
    id: z.ZodString;
    name: z.ZodString;
    description: z.ZodString;
    domainId: z.ZodString;
    unitId: z.ZodOptional<z.ZodString>;
    topicId: z.ZodOptional<z.ZodString>;
    ccss: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    ritBand: z.ZodOptional<z.ZodObject<{
        min: z.ZodNumber;
        max: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        min: number;
        max: number;
    }, {
        min: number;
        max: number;
    }>>;
    representations: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    practice: z.ZodOptional<z.ZodObject<{
        easy: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        medium: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        hard: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    }, "strict", z.ZodTypeAny, {
        easy?: string[] | undefined;
        medium?: string[] | undefined;
        hard?: string[] | undefined;
    }, {
        easy?: string[] | undefined;
        medium?: string[] | undefined;
        hard?: string[] | undefined;
    }>>;
    mentalMathEligible: z.ZodOptional<z.ZodBoolean>;
}, z.ZodTypeAny, "passthrough">>;
type CurriculumSkill = z.infer<typeof CurriculumSkillSchema>;
declare const CurriculumManifestUnitSchema: z.ZodObject<{
    id: z.ZodString;
    slug: z.ZodString;
    title: z.ZodString;
    summary: z.ZodOptional<z.ZodString>;
    domainId: z.ZodOptional<z.ZodString>;
    ritRange: z.ZodOptional<z.ZodObject<{
        min: z.ZodNumber;
        max: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        min: number;
        max: number;
    }, {
        min: number;
        max: number;
    }>>;
    primaryCcss: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    topicOrder: z.ZodArray<z.ZodString, "many">;
}, "strict", z.ZodTypeAny, {
    slug: string;
    id: string;
    title: string;
    topicOrder: string[];
    summary?: string | undefined;
    domainId?: string | undefined;
    ritRange?: {
        min: number;
        max: number;
    } | undefined;
    primaryCcss?: string[] | undefined;
}, {
    slug: string;
    id: string;
    title: string;
    topicOrder: string[];
    summary?: string | undefined;
    domainId?: string | undefined;
    ritRange?: {
        min: number;
        max: number;
    } | undefined;
    primaryCcss?: string[] | undefined;
}>;
type CurriculumManifestUnit = z.infer<typeof CurriculumManifestUnitSchema>;
declare const CurriculumManifestTopicSchema: z.ZodObject<{
    id: z.ZodString;
    slug: z.ZodString;
    unitId: z.ZodString;
    title: z.ZodString;
    overview: z.ZodOptional<z.ZodString>;
    focusSkills: z.ZodArray<z.ZodString, "many">;
    ritRange: z.ZodOptional<z.ZodObject<{
        min: z.ZodNumber;
        max: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        min: number;
        max: number;
    }, {
        min: number;
        max: number;
    }>>;
    ccssFocus: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    priority: z.ZodOptional<z.ZodNumber>;
    prerequisiteTopicIds: z.ZodArray<z.ZodString, "many">;
}, "strict", z.ZodTypeAny, {
    slug: string;
    id: string;
    title: string;
    focusSkills: string[];
    unitId: string;
    prerequisiteTopicIds: string[];
    overview?: string | undefined;
    ritRange?: {
        min: number;
        max: number;
    } | undefined;
    ccssFocus?: string[] | undefined;
    priority?: number | undefined;
}, {
    slug: string;
    id: string;
    title: string;
    focusSkills: string[];
    unitId: string;
    prerequisiteTopicIds: string[];
    overview?: string | undefined;
    ritRange?: {
        min: number;
        max: number;
    } | undefined;
    ccssFocus?: string[] | undefined;
    priority?: number | undefined;
}>;
type CurriculumManifestTopic = z.infer<typeof CurriculumManifestTopicSchema>;
declare const CurriculumManifestLessonSchema: z.ZodObject<{
    id: z.ZodString;
    slug: z.ZodString;
    topicId: z.ZodString;
    title: z.ZodString;
    materialId: z.ZodOptional<z.ZodString>;
    gradeLevels: z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">;
    segments: z.ZodArray<z.ZodObject<{
        type: z.ZodString;
        representation: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        type: string;
        representation?: string | undefined;
    }, {
        type: string;
        representation?: string | undefined;
    }>, "many">;
    prerequisiteLessonIds: z.ZodArray<z.ZodString, "many">;
    skills: z.ZodArray<z.ZodString, "many">;
    notes: z.ZodOptional<z.ZodString>;
}, "strict", z.ZodTypeAny, {
    slug: string;
    id: string;
    title: string;
    skills: string[];
    topicId: string;
    segments: {
        type: string;
        representation?: string | undefined;
    }[];
    gradeLevels: ("kindergarten" | "grade1" | "grade2" | "grade3")[];
    prerequisiteLessonIds: string[];
    notes?: string | undefined;
    materialId?: string | undefined;
}, {
    slug: string;
    id: string;
    title: string;
    skills: string[];
    topicId: string;
    segments: {
        type: string;
        representation?: string | undefined;
    }[];
    gradeLevels: ("kindergarten" | "grade1" | "grade2" | "grade3")[];
    prerequisiteLessonIds: string[];
    notes?: string | undefined;
    materialId?: string | undefined;
}>;
type CurriculumManifestLesson = z.infer<typeof CurriculumManifestLessonSchema>;
declare const CurriculumManifestSchema: z.ZodObject<{
    generatedAt: z.ZodString;
    domains: z.ZodArray<z.ZodRecord<z.ZodString, z.ZodUnknown>, "many">;
    units: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        slug: z.ZodString;
        title: z.ZodString;
        summary: z.ZodOptional<z.ZodString>;
        domainId: z.ZodOptional<z.ZodString>;
        ritRange: z.ZodOptional<z.ZodObject<{
            min: z.ZodNumber;
            max: z.ZodNumber;
        }, "strict", z.ZodTypeAny, {
            min: number;
            max: number;
        }, {
            min: number;
            max: number;
        }>>;
        primaryCcss: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        topicOrder: z.ZodArray<z.ZodString, "many">;
    }, "strict", z.ZodTypeAny, {
        slug: string;
        id: string;
        title: string;
        topicOrder: string[];
        summary?: string | undefined;
        domainId?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        primaryCcss?: string[] | undefined;
    }, {
        slug: string;
        id: string;
        title: string;
        topicOrder: string[];
        summary?: string | undefined;
        domainId?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        primaryCcss?: string[] | undefined;
    }>, "many">;
    topics: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        slug: z.ZodString;
        unitId: z.ZodString;
        title: z.ZodString;
        overview: z.ZodOptional<z.ZodString>;
        focusSkills: z.ZodArray<z.ZodString, "many">;
        ritRange: z.ZodOptional<z.ZodObject<{
            min: z.ZodNumber;
            max: z.ZodNumber;
        }, "strict", z.ZodTypeAny, {
            min: number;
            max: number;
        }, {
            min: number;
            max: number;
        }>>;
        ccssFocus: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
        priority: z.ZodOptional<z.ZodNumber>;
        prerequisiteTopicIds: z.ZodArray<z.ZodString, "many">;
    }, "strict", z.ZodTypeAny, {
        slug: string;
        id: string;
        title: string;
        focusSkills: string[];
        unitId: string;
        prerequisiteTopicIds: string[];
        overview?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        ccssFocus?: string[] | undefined;
        priority?: number | undefined;
    }, {
        slug: string;
        id: string;
        title: string;
        focusSkills: string[];
        unitId: string;
        prerequisiteTopicIds: string[];
        overview?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        ccssFocus?: string[] | undefined;
        priority?: number | undefined;
    }>, "many">;
    lessons: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        slug: z.ZodString;
        topicId: z.ZodString;
        title: z.ZodString;
        materialId: z.ZodOptional<z.ZodString>;
        gradeLevels: z.ZodArray<z.ZodEnum<["kindergarten", "grade1", "grade2", "grade3"]>, "many">;
        segments: z.ZodArray<z.ZodObject<{
            type: z.ZodString;
            representation: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            type: string;
            representation?: string | undefined;
        }, {
            type: string;
            representation?: string | undefined;
        }>, "many">;
        prerequisiteLessonIds: z.ZodArray<z.ZodString, "many">;
        skills: z.ZodArray<z.ZodString, "many">;
        notes: z.ZodOptional<z.ZodString>;
    }, "strict", z.ZodTypeAny, {
        slug: string;
        id: string;
        title: string;
        skills: string[];
        topicId: string;
        segments: {
            type: string;
            representation?: string | undefined;
        }[];
        gradeLevels: ("kindergarten" | "grade1" | "grade2" | "grade3")[];
        prerequisiteLessonIds: string[];
        notes?: string | undefined;
        materialId?: string | undefined;
    }, {
        slug: string;
        id: string;
        title: string;
        skills: string[];
        topicId: string;
        segments: {
            type: string;
            representation?: string | undefined;
        }[];
        gradeLevels: ("kindergarten" | "grade1" | "grade2" | "grade3")[];
        prerequisiteLessonIds: string[];
        notes?: string | undefined;
        materialId?: string | undefined;
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    lessons: {
        slug: string;
        id: string;
        title: string;
        skills: string[];
        topicId: string;
        segments: {
            type: string;
            representation?: string | undefined;
        }[];
        gradeLevels: ("kindergarten" | "grade1" | "grade2" | "grade3")[];
        prerequisiteLessonIds: string[];
        notes?: string | undefined;
        materialId?: string | undefined;
    }[];
    topics: {
        slug: string;
        id: string;
        title: string;
        focusSkills: string[];
        unitId: string;
        prerequisiteTopicIds: string[];
        overview?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        ccssFocus?: string[] | undefined;
        priority?: number | undefined;
    }[];
    units: {
        slug: string;
        id: string;
        title: string;
        topicOrder: string[];
        summary?: string | undefined;
        domainId?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        primaryCcss?: string[] | undefined;
    }[];
    generatedAt: string;
    domains: Record<string, unknown>[];
}, {
    lessons: {
        slug: string;
        id: string;
        title: string;
        skills: string[];
        topicId: string;
        segments: {
            type: string;
            representation?: string | undefined;
        }[];
        gradeLevels: ("kindergarten" | "grade1" | "grade2" | "grade3")[];
        prerequisiteLessonIds: string[];
        notes?: string | undefined;
        materialId?: string | undefined;
    }[];
    topics: {
        slug: string;
        id: string;
        title: string;
        focusSkills: string[];
        unitId: string;
        prerequisiteTopicIds: string[];
        overview?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        ccssFocus?: string[] | undefined;
        priority?: number | undefined;
    }[];
    units: {
        slug: string;
        id: string;
        title: string;
        topicOrder: string[];
        summary?: string | undefined;
        domainId?: string | undefined;
        ritRange?: {
            min: number;
            max: number;
        } | undefined;
        primaryCcss?: string[] | undefined;
    }[];
    generatedAt: string;
    domains: Record<string, unknown>[];
}>;
type CurriculumManifest = z.infer<typeof CurriculumManifestSchema>;
declare const CurriculumSyncSummarySchema: z.ZodObject<{
    manifestHash: z.ZodString;
    manifestGeneratedAt: z.ZodString;
    manifestCommit: z.ZodOptional<z.ZodString>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
    units: z.ZodObject<{
        created: z.ZodNumber;
        updated: z.ZodNumber;
        deleted: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        created: number;
        updated: number;
        deleted: number;
    }, {
        created: number;
        updated: number;
        deleted: number;
    }>;
    topics: z.ZodObject<{
        created: z.ZodNumber;
        updated: z.ZodNumber;
        deleted: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        created: number;
        updated: number;
        deleted: number;
    }, {
        created: number;
        updated: number;
        deleted: number;
    }>;
    lessons: z.ZodObject<{
        created: z.ZodNumber;
        updated: z.ZodNumber;
        deleted: z.ZodNumber;
    }, "strict", z.ZodTypeAny, {
        created: number;
        updated: number;
        deleted: number;
    }, {
        created: number;
        updated: number;
        deleted: number;
    }>;
}, "strict", z.ZodTypeAny, {
    createdAt: number;
    updatedAt: number;
    lessons: {
        created: number;
        updated: number;
        deleted: number;
    };
    topics: {
        created: number;
        updated: number;
        deleted: number;
    };
    units: {
        created: number;
        updated: number;
        deleted: number;
    };
    manifestHash: string;
    manifestGeneratedAt: string;
    manifestCommit?: string | undefined;
}, {
    createdAt: number;
    updatedAt: number;
    lessons: {
        created: number;
        updated: number;
        deleted: number;
    };
    topics: {
        created: number;
        updated: number;
        deleted: number;
    };
    units: {
        created: number;
        updated: number;
        deleted: number;
    };
    manifestHash: string;
    manifestGeneratedAt: string;
    manifestCommit?: string | undefined;
}>;
type CurriculumSyncSummary = z.infer<typeof CurriculumSyncSummarySchema>;

export { access as AuthAccess, type AuthoringMeta, AuthoringMetaSchema, type BankQuantityMap, BankQuantityMapSchema, type BillingAccount, BillingAccountSchema, type BillingAccountStatus, BillingAccountStatusSchema, type BillingCycle, BillingCycleSchema, type CanvasAnchor, CanvasAnchorSchema, type ConsumptionRule, ConsumptionRuleSchema, type CurriculumManifest, type CurriculumManifestLesson, CurriculumManifestLessonSchema, CurriculumManifestSchema, type CurriculumManifestTopic, CurriculumManifestTopicSchema, type CurriculumManifestUnit, CurriculumManifestUnitSchema, type CurriculumSkill, CurriculumSkillSchema, type CurriculumSyncSummary, CurriculumSyncSummarySchema, type CurriculumTree, type CurriculumTreeLesson, CurriculumTreeLessonSchema, CurriculumTreeSchema, type CurriculumTreeTopic, CurriculumTreeTopicSchema, type CurriculumTreeUnit, CurriculumTreeUnitSchema, type Difficulty, DifficultySchema, type EntityMetadata, EntityMetadataSchema, type ExchangeRule, ExchangeRuleSchema, type GuidedEvaluatorId, GuidedEvaluatorIdSchema, type GuidedSegment, GuidedSegmentSchema, type GuidedStep, GuidedStepSchema, type Id, IdSchema, type InventoryRuleSet, InventoryRuleSetSchema, type Lesson, type LessonAuthoringStatus, LessonAuthoringStatusSchema, type LessonDocument, type LessonDocumentMeta, LessonDocumentMetaSchema, LessonDocumentSchema, type LessonDraftRecord, LessonDraftRecordSchema, type LessonGradeLevel, LessonGradeLevelSchema, type LessonMaterialInventory, LessonMaterialInventorySchema, type LessonPlan, LessonPlanSchema, type LessonScenarioBinding, LessonScenarioBindingSchema, type LessonScenarioKind, LessonScenarioKindSchema, LessonSchema, type LessonSegment, LessonSegmentSchema, type LessonStatus, LessonStatusSchema, type LessonTask, LessonTaskSchema, type Material, type MaterialBankDefinition, MaterialBankDefinitionSchema, MaterialSchema, type MaterialUsage, MaterialUsageSchema, type OrgInvite, OrgInviteSchema, type OrgInviteStatus, OrgInviteStatusSchema, type OrgMembership, OrgMembershipSchema, type OrgMembershipStatus, OrgMembershipStatusSchema, type Organization, type OrganizationLifecycleStatus, OrganizationLifecycleStatusSchema, type OrganizationPlanKey, OrganizationPlanKeySchema, OrganizationSchema, type PracticePassCriteria, PracticePassCriteriaSchema, type PracticeQuestion, PracticeQuestionSchema, type PracticeSegment, PracticeSegmentSchema, type PresentationAction, type PresentationActionInput, PresentationActionInputSchema, PresentationActionSchema, type PresentationScript, PresentationScriptSchema, type PresentationSegment, PresentationSegmentSchema, type ReplenishRule, ReplenishRuleSchema, type Representation, RepresentationSchema, type SegmentStep, SegmentStepSchema, type SegmentTimeline, SegmentTimelineSchema, type SegmentType, SegmentTypeSchema, type TaskCategory, TaskCategorySchema, type TimelineInteraction, TimelineInteractionSchema, type TimelineKeyframe, TimelineKeyframeSchema, type TimelineTrack, TimelineTrackSchema, type TimelineTransform, TimelineTransformSchema, type TokenTypeDefinition, TokenTypeDefinitionSchema, type TokenVisualDefinition, TokenVisualDefinitionSchema, type Topic, TopicSchema, type TopicStatus, TopicStatusSchema, type Unit, UnitSchema, type UnitStatus, UnitStatusSchema, type UnitTopicRef, UnitTopicRefSchema, type UserProfile, UserProfileSchema, type UserRole, UserRoleSchema, type WorkspaceKind, WorkspaceKindSchema };
